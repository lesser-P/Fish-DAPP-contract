{
	"id": "e77252ef04fd46837087646ccc50ea5c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/helperLogic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\n\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\";\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\";\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\";\n\ninterface IFarm {\n    function setPool(\n        uint256 _pid,\n        uint256 _allocPoint,\n        bool _withUpdate\n    ) external;\n}\n\ninterface IStabilizer {\n    function goStabilizer() external returns (bool);\n}\n\ncontract helperLogic is Initializable, OwnableUpgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n    using SafeMathUpgradeable for uint256;\n\n    //Executor\n    mapping(address => bool) public executor;\n    IERC20Upgradeable public usc;\n    IERC20Upgradeable public usdc;\n    IERC20Upgradeable public sea;\n    IERC20Upgradeable public ssea;\n    address public op;\n    address public dev;\n\n    IUniswapV2Router02 public Router;\n    IUniswapV2Factory public Factory;\n\n    uint256 public toSseaPercent;\n    uint256 public toOpPercent;\n    uint256 public toDevPercent;\n    uint256 public PRECISION;\n\n    uint256 public basePoint;\n    uint256 public pid;\n\n    IFarm public farm;\n\n    bool public autoAdjustFarm;\n    bool public openStabilizer;\n\n    address public stabilizer;\n\n    function initialize(\n        // address _mirrorseaMain,\n        IUniswapV2Factory _Factory,\n        IUniswapV2Router02 _Router,\n        IERC20Upgradeable _usc,\n        IERC20Upgradeable _usdc,\n        IERC20Upgradeable _sea,\n        IERC20Upgradeable _ssea,\n        IFarm _farm\n    )\n        external\n        // address _stabilizer\n        initializer\n    {\n        __Ownable_init();\n        // executor[_mirrorseaMain] = true;\n        Router = _Router;\n        Factory = _Factory;\n        usc = _usc;\n        sea = _sea;\n        ssea = _ssea;\n        op = msg.sender;\n        dev = msg.sender;\n        toSseaPercent = 5000;\n        toOpPercent = 2500;\n        toDevPercent = 2500;\n        PRECISION = 10000;\n        basePoint = 1000;\n        autoAdjustFarm = true;\n        openStabilizer = false;\n        farm = _farm;\n        usdc = _usdc;\n        // stabilizer = _stabilizer;\n    }\n\n    function setExecutor(address _address, bool _type)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        executor[_address] = _type;\n        return true;\n    }\n\n    modifier onlyExecutor() {\n        require(executor[msg.sender], \"executor: caller is not the executor\");\n        _;\n    }\n\n    function jointExecution() external onlyExecutor returns (bool) {\n        uint256 uscBalanceOf = usc.balanceOf(address(this));\n        uint256 toSsea = uscBalanceOf.mul(toSseaPercent).div(PRECISION);\n        uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION);\n        uint256 toDev = uscBalanceOf.sub(toSsea).sub(toOp);\n\n        usc.safeTransfer(address(ssea), toSsea);\n        usc.safeTransfer(address(op), toOp);\n        usc.safeTransfer(address(dev), toDev);\n\n        if (autoAdjustFarm) {\n            adjustFarm();\n        }\n\n        if (openStabilizer) {\n            IStabilizer(stabilizer).goStabilizer();\n        }\n\n        return true;\n    }\n\n    function adjustFarm() internal {\n        address pairAddress = Factory.getPair(address(usdc), address(usc));\n        uint256 uscBalanceOf = usc.balanceOf(pairAddress);\n        uint256 usdcBalanceOf = usdc.balanceOf(pairAddress);\n        uint256 e18 = 1e18;\n        uint256 uscPrice = usdcBalanceOf.mul(e18).div(uscBalanceOf);\n        uint256 USDC_USC_LP_farmPoint;\n        uint256 diffPoint;\n        if (uscPrice > 1e18) {\n            //higt 1\n            diffPoint = (uscPrice.sub(1e18)).div(1e14);\n            if (diffPoint > basePoint) {\n                USDC_USC_LP_farmPoint = 0;\n            } else {\n                USDC_USC_LP_farmPoint = basePoint.sub(diffPoint);\n            }\n        } else {\n            //low 1\n            diffPoint = (1e18 - uscPrice).div(1e14);\n            USDC_USC_LP_farmPoint = basePoint.add(diffPoint);\n        }\n        farm.setPool(pid, USDC_USC_LP_farmPoint, true);\n    }\n\n    function withdrawalERC20(address _address, uint256 _amt)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt);\n        return true;\n    }\n\n    function setOp(address _address) external onlyOwner returns (bool) {\n        op = _address;\n        return true;\n    }\n\n    function setDev(address _address) external onlyOwner returns (bool) {\n        dev = _address;\n        return true;\n    }\n\n    function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {\n        toSseaPercent = _val;\n        return true;\n    }\n\n    function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {\n        toOpPercent = _val;\n        return true;\n    }\n\n    function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {\n        toDevPercent = _val;\n        return true;\n    }\n\n    function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {\n        autoAdjustFarm = _bool;\n        return true;\n    }\n\n    function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {\n        openStabilizer = _bool;\n        return true;\n    }\n\n    function setStabilizer(address _address) external onlyOwner returns (bool) {\n        stabilizer = _address;\n        return true;\n    }\n\n    function setPid(uint256 _val) external onlyOwner returns (bool) {\n        pid = _val;\n        return true;\n    }\n\n    function setUSDCAddress(IERC20Upgradeable _usdc)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        usdc = _usdc;\n        return true;\n    }\n\n    function setFarm(IFarm _farm) external onlyOwner returns (bool) {\n        farm = _farm;\n        return true;\n    }\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n    function migrator() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n    function setMigrator(address) external;\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal initializer {\n        __Context_init_unchained();\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal initializer {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.0;\n\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    function safeTransfer(\n        IERC20Upgradeable token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20Upgradeable token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n    uint256[50] private __gap;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122055e2bfc0061c9b41961b38fa22c44a5bc437c80b493f8b0b5ea78b46a108184d64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055e2bfc0061c9b41961b38fa22c44a5bc437c80b493f8b0b5ea78b46a108184d64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xE2 0xBF 0xC0 MOD SHR SWAP12 COINBASE SWAP7 SHL CODESIZE STATICCALL 0x22 0xC4 0x4A JUMPDEST 0xC4 CALLDATACOPY 0xC8 SIGNEXTEND 0x49 EXTCODEHASH DUP12 SIGNEXTEND 0x5E 0xA7 DUP12 CHAINID LOG1 ADDMOD XOR 0x4D PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "667:3358:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055e2bfc0061c9b41961b38fa22c44a5bc437c80b493f8b0b5ea78b46a108184d64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xE2 0xBF 0xC0 MOD SHR SWAP12 COINBASE SWAP7 SHL CODESIZE STATICCALL 0x22 0xC4 0x4A JUMPDEST 0xC4 CALLDATACOPY 0xC8 SIGNEXTEND 0x49 EXTCODEHASH DUP12 SIGNEXTEND 0x5E 0xA7 DUP12 CHAINID LOG1 ADDMOD XOR 0x4D PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "667:3358:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122055e2bfc0061c9b41961b38fa22c44a5bc437c80b493f8b0b5ea78b46a108184d64736f6c63430008000033",
									".code": [
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":179:6969  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":179:6969  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203b0c2eb00534d08288e8d0a48cfba1ad40916f5a758ebac7017205e01ac2f8d064736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b0c2eb00534d08288e8d0a48cfba1ad40916f5a758ebac7017205e01ac2f8d064736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xC 0x2E 0xB0 SDIV CALLVALUE 0xD0 DUP3 DUP9 0xE8 0xD0 LOG4 DUP13 0xFB LOG1 0xAD BLOCKHASH SWAP2 PUSH16 0x5A758EBAC7017205E01AC2F8D064736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "179:6790:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203b0c2eb00534d08288e8d0a48cfba1ad40916f5a758ebac7017205e01ac2f8d064736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xC 0x2E 0xB0 SDIV CALLVALUE 0xD0 DUP3 DUP9 0xE8 0xD0 LOG4 DUP13 0xFB LOG1 0xAD BLOCKHASH SWAP2 PUSH16 0x5A758EBAC7017205E01AC2F8D064736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "179:6790:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b0c2eb00534d08288e8d0a48cfba1ad40916f5a758ebac7017205e01ac2f8d064736f6c63430008000033",
									".code": [
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"SafeMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":467:6779  library SafeMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":467:6779  library SafeMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c199f0ae8bc6548bf0db9a1949eb5aed85026ed39c353b5ac339c39111e885e64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c199f0ae8bc6548bf0db9a1949eb5aed85026ed39c353b5ac339c39111e885e64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR NOT SWAP16 EXP 0xE8 0xBC PUSH6 0x48BF0DB9A194 SWAP15 0xB5 0xAE 0xD8 POP 0x26 0xED CODECOPY 0xC3 MSTORE8 0xB5 0xAC CALLER SWAP13 CODECOPY GT 0x1E DUP9 0x5E PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6312:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c199f0ae8bc6548bf0db9a1949eb5aed85026ed39c353b5ac339c39111e885e64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR NOT SWAP16 EXP 0xE8 0xBC PUSH6 0x48BF0DB9A194 SWAP15 0xB5 0xAE 0xD8 POP 0x26 0xED CODECOPY 0xC3 MSTORE8 0xB5 0xAC CALLER SWAP13 CODECOPY GT 0x1E DUP9 0x5E PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6312:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c199f0ae8bc6548bf0db9a1949eb5aed85026ed39c353b5ac339c39111e885e64736f6c63430008000033",
									".code": [
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"migrator()": "7cd07e47",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6",
							"setMigrator(address)": "23cf3118"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/helperLogic.sol": {
				"IFarm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "setPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setPool(uint256,uint256,bool)": "46ca6bea"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"IFarm\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0xa298d238fa15b939a0b919c7fdff215c07c6e04ad0bd75f13c2cd3c4ae451310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c399b5f3a98d9fdbbdb220f6d754d4ae71889ee04d15fa0f10b2bf3b7295c8e5\",\"dweb:/ipfs/QmWcKFEj3Abk9zpviM1ErRndHJWQDaARdZyun7qe6XPW3U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStabilizer": {
					"abi": [
						{
							"inputs": [],
							"name": "goStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"goStabilizer()": "796c7be7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"goStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"IStabilizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0xa298d238fa15b939a0b919c7fdff215c07c6e04ad0bd75f13c2cd3c4ae451310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c399b5f3a98d9fdbbdb220f6d754d4ae71889ee04d15fa0f10b2bf3b7295c8e5\",\"dweb:/ipfs/QmWcKFEj3Abk9zpviM1ErRndHJWQDaARdZyun7qe6XPW3U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"helperLogic": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Factory",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Factory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "autoAdjustFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "basePoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dev",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "executor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "farm",
							"outputs": [
								{
									"internalType": "contract IFarm",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IUniswapV2Factory",
									"name": "_Factory",
									"type": "address"
								},
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "_Router",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usc",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_sea",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_ssea",
									"type": "address"
								},
								{
									"internalType": "contract IFarm",
									"name": "_farm",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "jointExecution",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "op",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sea",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setAutoAdjustFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setDev",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_type",
									"type": "bool"
								}
							],
							"name": "setExecutor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IFarm",
									"name": "_farm",
									"type": "address"
								}
							],
							"name": "setFarm",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setOp",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setOpenStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setPid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToDevPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToOpPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_val",
									"type": "uint256"
								}
							],
							"name": "setToSseaPercent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "_usdc",
									"type": "address"
								}
							],
							"name": "setUSDCAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ssea",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stabilizer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toDevPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toOpPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toSseaPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usc",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amt",
									"type": "uint256"
								}
							],
							"name": "withdrawalERC20",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/helperLogic.sol\":909:6176  contract helperLogic is Initializable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/helperLogic.sol\":909:6176  contract helperLogic is Initializable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xbd0b1f44\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xdb7f521a\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xdb7f521a\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xec1f1f69\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf1068454\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf6d7eade\n      eq\n      tag_39\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0xbd0b1f44\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc83dd231\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd10c06a2\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd477f05f\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd4f26c51\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0xa36a7526\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xa36a7526\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xaaf5bfc3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xaf5518c4\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb8bb97a1\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x91cca3db\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x930ed033\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9da5b0d5\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x3e413bee\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x4ecaac41\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x4ecaac41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x55c746d1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x58de5de8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7e47961c\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x3e413bee\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4591db50\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x48c7e528\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4ae6a027\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x2c535a52\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x2c535a52\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3011d3d5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x35876476\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36e9332d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3c850e1e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x16d03993\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1b0d8aab\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1e1bff3f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x27c42a50\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/helperLogic.sol\":1525:1549  uint256 public basePoint */\n    tag_3:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":5775:5887  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_4:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n    tag_5:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":4949:5081  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_6:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1429:1455  uint256 public toOpPercent */\n    tag_7:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1132:1160  IERC20Upgradeable public usc */\n    tag_8:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n    tag_9:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/helperLogic.sol\":1580:1597  IFarm public farm */\n    tag_10:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":5221:5351  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_11:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1166:1195  IERC20Upgradeable public usdc */\n    tag_12:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":5357:5490  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n    tag_13:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1086:1126  mapping(address => bool) public executor */\n    tag_14:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1461:1488  uint256 public toDevPercent */\n    tag_15:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1201:1229  IERC20Upgradeable public sea */\n    tag_16:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":5496:5629  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n    tag_17:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1636:1662  bool public openStabilizer */\n    tag_18:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/helperLogic.sol\":1669:1694  address public stabilizer */\n    tag_20:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1293:1311  address public dev */\n    tag_22:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":4478:4693  function withdrawalERC20(address _address, uint256 _amt)... */\n    tag_23:\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1604:1630  bool public autoAdjustFarm */\n    tag_24:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":4699:4817  function setOp(address _address) external onlyOwner returns (bool) {... */\n    tag_25:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":5893:6054  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n    tag_26:\n      tag_135\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1494:1518  uint256 public PRECISION */\n    tag_27:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":5087:5215  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_28:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1235:1264  IERC20Upgradeable public ssea */\n    tag_29:\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1395:1423  uint256 public toSseaPercent */\n    tag_30:\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1356:1388  IUniswapV2Factory public Factory */\n    tag_31:\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":2901:3558  function jointExecution() external onlyExecutor returns (bool) {... */\n    tag_32:\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":4823:4943  function setDev(address _address) external onlyOwner returns (bool) {... */\n    tag_33:\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":6060:6174  function setFarm(IFarm _farm) external onlyOwner returns (bool) {... */\n    tag_34:\n      tag_164\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      tag_167\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":5635:5769  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n    tag_35:\n      tag_169\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_170:\n      tag_171\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1270:1287  address public op */\n    tag_36:\n      tag_173\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      tag_175\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1555:1573  uint256 public pid */\n    tag_37:\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      tag_178\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n      tag_179\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n    tag_179:\n      stop\n        /* \"contracts/helperLogic.sol\":1318:1350  IUniswapV2Router02 public Router */\n    tag_39:\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/helperLogic.sol\":1525:1549  uint256 public basePoint */\n    tag_48:\n      sload(0x72)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5775:5887  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_54:\n        /* \"contracts/helperLogic.sol\":5833:5837  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/helperLogic.sol\":5855:5859  _val */\n      dup2\n        /* \"contracts/helperLogic.sol\":5849:5852  pid */\n      0x73\n        /* \"contracts/helperLogic.sol\":5849:5859  pid = _val */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":5876:5880  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":5869:5880  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5775:5887  function setPid(uint256 _val) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n    tag_60:\n        /* \"contracts/helperLogic.sol\":2694:2698  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_192\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/helperLogic.sol\":2735:2740  _type */\n      dup2\n        /* \"contracts/helperLogic.sol\":2714:2722  executor */\n      0x65\n        /* \"contracts/helperLogic.sol\":2714:2732  executor[_address] */\n      0x00\n        /* \"contracts/helperLogic.sol\":2723:2731  _address */\n      dup6\n        /* \"contracts/helperLogic.sol\":2714:2732  executor[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/helperLogic.sol\":2714:2740  executor[_address] = _type */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2757:2761  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":2750:2761  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":2591:2768  function setExecutor(address _address, bool _type)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4949:5081  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_64:\n        /* \"contracts/helperLogic.sol\":5017:5021  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_201\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_192\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/helperLogic.sol\":5049:5053  _val */\n      dup2\n        /* \"contracts/helperLogic.sol\":5033:5046  toSseaPercent */\n      0x6e\n        /* \"contracts/helperLogic.sol\":5033:5053  toSseaPercent = _val */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":5070:5074  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":5063:5074  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4949:5081  function setToSseaPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1429:1455  uint256 public toOpPercent */\n    tag_67:\n      sload(0x6f)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1132:1160  IERC20Upgradeable public usc */\n    tag_70:\n      0x66\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      dup1\n      tag_207\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:667  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":681:695  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":760:764  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:757  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_211:\n        /* \"contracts/helperLogic.sol\":2067:2083  __Ownable_init() */\n      tag_213\n        /* \"contracts/helperLogic.sol\":2067:2081  __Ownable_init */\n      tag_214\n        /* \"contracts/helperLogic.sol\":2067:2083  __Ownable_init() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/helperLogic.sol\":2146:2153  _Router */\n      dup7\n        /* \"contracts/helperLogic.sol\":2137:2143  Router */\n      0x6c\n      0x00\n        /* \"contracts/helperLogic.sol\":2137:2153  Router = _Router */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2173:2181  _Factory */\n      dup8\n        /* \"contracts/helperLogic.sol\":2163:2170  Factory */\n      0x6d\n      0x00\n        /* \"contracts/helperLogic.sol\":2163:2181  Factory = _Factory */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2197:2201  _usc */\n      dup6\n        /* \"contracts/helperLogic.sol\":2191:2194  usc */\n      0x66\n      0x00\n        /* \"contracts/helperLogic.sol\":2191:2201  usc = _usc */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2217:2221  _sea */\n      dup4\n        /* \"contracts/helperLogic.sol\":2211:2214  sea */\n      0x68\n      0x00\n        /* \"contracts/helperLogic.sol\":2211:2221  sea = _sea */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2238:2243  _ssea */\n      dup3\n        /* \"contracts/helperLogic.sol\":2231:2235  ssea */\n      0x69\n      0x00\n        /* \"contracts/helperLogic.sol\":2231:2243  ssea = _ssea */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2258:2268  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":2253:2255  op */\n      0x6a\n      0x00\n        /* \"contracts/helperLogic.sol\":2253:2268  op = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2284:2294  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":2278:2281  dev */\n      0x6b\n      0x00\n        /* \"contracts/helperLogic.sol\":2278:2294  dev = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2320:2324  5000 */\n      0x1388\n        /* \"contracts/helperLogic.sol\":2304:2317  toSseaPercent */\n      0x6e\n        /* \"contracts/helperLogic.sol\":2304:2324  toSseaPercent = 5000 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2348:2352  2500 */\n      0x09c4\n        /* \"contracts/helperLogic.sol\":2334:2345  toOpPercent */\n      0x6f\n        /* \"contracts/helperLogic.sol\":2334:2352  toOpPercent = 2500 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2377:2381  2500 */\n      0x09c4\n        /* \"contracts/helperLogic.sol\":2362:2374  toDevPercent */\n      0x70\n        /* \"contracts/helperLogic.sol\":2362:2381  toDevPercent = 2500 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2403:2408  10000 */\n      0x2710\n        /* \"contracts/helperLogic.sol\":2391:2400  PRECISION */\n      0x71\n        /* \"contracts/helperLogic.sol\":2391:2408  PRECISION = 10000 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2430:2434  1000 */\n      0x03e8\n        /* \"contracts/helperLogic.sol\":2418:2427  basePoint */\n      0x72\n        /* \"contracts/helperLogic.sol\":2418:2434  basePoint = 1000 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2461:2465  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":2444:2458  autoAdjustFarm */\n      0x74\n      0x14\n        /* \"contracts/helperLogic.sol\":2444:2465  autoAdjustFarm = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2492:2497  false */\n      0x00\n        /* \"contracts/helperLogic.sol\":2475:2489  openStabilizer */\n      0x74\n      0x15\n        /* \"contracts/helperLogic.sol\":2475:2497  openStabilizer = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2514:2519  _farm */\n      dup2\n        /* \"contracts/helperLogic.sol\":2507:2511  farm */\n      0x74\n      0x00\n        /* \"contracts/helperLogic.sol\":2507:2519  farm = _farm */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":2536:2541  _usdc */\n      dup5\n        /* \"contracts/helperLogic.sol\":2529:2533  usdc */\n      0x67\n      0x00\n        /* \"contracts/helperLogic.sol\":2529:2541  usdc = _usdc */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:844  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n    tag_215:\n        /* \"contracts/helperLogic.sol\":1701:2585  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1580:1597  IFarm public farm */\n    tag_78:\n      0x74\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5221:5351  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_83:\n        /* \"contracts/helperLogic.sol\":5288:5292  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_192\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"contracts/helperLogic.sol\":5319:5323  _val */\n      dup2\n        /* \"contracts/helperLogic.sol\":5304:5316  toDevPercent */\n      0x70\n        /* \"contracts/helperLogic.sol\":5304:5323  toDevPercent = _val */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":5340:5344  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":5333:5344  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5221:5351  function setToDevPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1166:1195  IERC20Upgradeable public usdc */\n    tag_86:\n      0x67\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5357:5490  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n    tag_91:\n        /* \"contracts/helperLogic.sol\":5424:5428  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_192\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/helperLogic.sol\":5457:5462  _bool */\n      dup2\n        /* \"contracts/helperLogic.sol\":5440:5454  autoAdjustFarm */\n      0x74\n      0x14\n        /* \"contracts/helperLogic.sol\":5440:5462  autoAdjustFarm = _bool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":5479:5483  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":5472:5483  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5357:5490  function setAutoAdjustFarm(bool _bool) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1086:1126  mapping(address => bool) public executor */\n    tag_96:\n      mstore(0x20, 0x65)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1461:1488  uint256 public toDevPercent */\n    tag_99:\n      sload(0x70)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1201:1229  IERC20Upgradeable public sea */\n    tag_102:\n      0x68\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5496:5629  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n    tag_106:\n        /* \"contracts/helperLogic.sol\":5563:5567  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_192\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"contracts/helperLogic.sol\":5596:5601  _bool */\n      dup2\n        /* \"contracts/helperLogic.sol\":5579:5593  openStabilizer */\n      0x74\n      0x15\n        /* \"contracts/helperLogic.sol\":5579:5601  openStabilizer = _bool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":5618:5622  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":5611:5622  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5496:5629  function setOpenStabilizer(bool _bool) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1636:1662  bool public openStabilizer */\n    tag_109:\n      0x74\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_192\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2028  _transferOwnership(address(0)) */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2025:2026  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2016  _transferOwnership */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2028  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1669:1694  address public stabilizer */\n    tag_114:\n      0x75\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1348:1355  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1374:1380  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1367:1380  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1293:1311  address public dev */\n    tag_121:\n      0x6b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4478:4693  function withdrawalERC20(address _address, uint256 _amt)... */\n    tag_126:\n        /* \"contracts/helperLogic.sol\":4587:4591  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap1\n      tag_192\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"contracts/helperLogic.sol\":4607:4665  IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt) */\n      tag_249\n        /* \"contracts/helperLogic.sol\":4648:4658  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":4660:4664  _amt */\n      dup4\n        /* \"contracts/helperLogic.sol\":4625:4633  _address */\n      dup6\n        /* \"contracts/helperLogic.sol\":4607:4647  IERC20Upgradeable(_address).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_250\n      swap1\n        /* \"contracts/helperLogic.sol\":4607:4665  IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"contracts/helperLogic.sol\":4682:4686  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":4675:4686  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4478:4693  function withdrawalERC20(address _address, uint256 _amt)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1604:1630  bool public autoAdjustFarm */\n    tag_129:\n      0x74\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4699:4817  function setOp(address _address) external onlyOwner returns (bool) {... */\n    tag_133:\n        /* \"contracts/helperLogic.sol\":4760:4764  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_192\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"contracts/helperLogic.sol\":4781:4789  _address */\n      dup2\n        /* \"contracts/helperLogic.sol\":4776:4778  op */\n      0x6a\n      0x00\n        /* \"contracts/helperLogic.sol\":4776:4789  op = _address */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":4806:4810  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":4799:4810  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4699:4817  function setOp(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5893:6054  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n    tag_138:\n        /* \"contracts/helperLogic.sol\":5994:5998  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap1\n      tag_192\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"contracts/helperLogic.sol\":6021:6026  _usdc */\n      dup2\n        /* \"contracts/helperLogic.sol\":6014:6018  usdc */\n      0x67\n      0x00\n        /* \"contracts/helperLogic.sol\":6014:6026  usdc = _usdc */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":6043:6047  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":6036:6047  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5893:6054  function setUSDCAddress(IERC20Upgradeable _usdc)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1494:1518  uint256 public PRECISION */\n    tag_141:\n      sload(0x71)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5087:5215  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n    tag_145:\n        /* \"contracts/helperLogic.sol\":5153:5157  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_192\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"contracts/helperLogic.sol\":5183:5187  _val */\n      dup2\n        /* \"contracts/helperLogic.sol\":5169:5180  toOpPercent */\n      0x6f\n        /* \"contracts/helperLogic.sol\":5169:5187  toOpPercent = _val */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":5204:5208  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":5197:5208  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5087:5215  function setToOpPercent(uint256 _val) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1235:1264  IERC20Upgradeable public ssea */\n    tag_148:\n      0x69\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1395:1423  uint256 public toSseaPercent */\n    tag_151:\n      sload(0x6e)\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1356:1388  IUniswapV2Factory public Factory */\n    tag_154:\n      0x6d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":2901:3558  function jointExecution() external onlyExecutor returns (bool) {... */\n    tag_158:\n        /* \"contracts/helperLogic.sol\":2958:2962  bool */\n      0x00\n        /* \"contracts/helperLogic.sol\":2816:2824  executor */\n      0x65\n        /* \"contracts/helperLogic.sol\":2816:2836  executor[msg.sender] */\n      0x00\n        /* \"contracts/helperLogic.sol\":2825:2835  msg.sender */\n      caller\n        /* \"contracts/helperLogic.sol\":2816:2836  executor[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":2808:2877  require(executor[msg.sender], \"executor: caller is not the executor\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"contracts/helperLogic.sol\":2974:2994  uint256 uscBalanceOf */\n      0x00\n        /* \"contracts/helperLogic.sol\":2997:3000  usc */\n      0x66\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":2997:3010  usc.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/helperLogic.sol\":3019:3023  this */\n      address\n        /* \"contracts/helperLogic.sol\":2997:3025  usc.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_274:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"contracts/helperLogic.sol\":2974:3025  uint256 uscBalanceOf = usc.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3035:3049  uint256 toSsea */\n      0x00\n        /* \"contracts/helperLogic.sol\":3052:3098  uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      tag_280\n        /* \"contracts/helperLogic.sol\":3088:3097  PRECISION */\n      sload(0x71)\n        /* \"contracts/helperLogic.sol\":3052:3083  uscBalanceOf.mul(toSseaPercent) */\n      tag_281\n        /* \"contracts/helperLogic.sol\":3069:3082  toSseaPercent */\n      sload(0x6e)\n        /* \"contracts/helperLogic.sol\":3052:3064  uscBalanceOf */\n      dup6\n        /* \"contracts/helperLogic.sol\":3052:3068  uscBalanceOf.mul */\n      tag_282\n      swap1\n        /* \"contracts/helperLogic.sol\":3052:3083  uscBalanceOf.mul(toSseaPercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"contracts/helperLogic.sol\":3052:3087  uscBalanceOf.mul(toSseaPercent).div */\n      tag_283\n      swap1\n        /* \"contracts/helperLogic.sol\":3052:3098  uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_280:\n        /* \"contracts/helperLogic.sol\":3035:3098  uint256 toSsea = uscBalanceOf.mul(toSseaPercent).div(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3108:3120  uint256 toOp */\n      0x00\n        /* \"contracts/helperLogic.sol\":3123:3167  uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      tag_284\n        /* \"contracts/helperLogic.sol\":3157:3166  PRECISION */\n      sload(0x71)\n        /* \"contracts/helperLogic.sol\":3123:3152  uscBalanceOf.mul(toOpPercent) */\n      tag_285\n        /* \"contracts/helperLogic.sol\":3140:3151  toOpPercent */\n      sload(0x6f)\n        /* \"contracts/helperLogic.sol\":3123:3135  uscBalanceOf */\n      dup7\n        /* \"contracts/helperLogic.sol\":3123:3139  uscBalanceOf.mul */\n      tag_282\n      swap1\n        /* \"contracts/helperLogic.sol\":3123:3152  uscBalanceOf.mul(toOpPercent) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"contracts/helperLogic.sol\":3123:3156  uscBalanceOf.mul(toOpPercent).div */\n      tag_283\n      swap1\n        /* \"contracts/helperLogic.sol\":3123:3167  uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"contracts/helperLogic.sol\":3108:3167  uint256 toOp = uscBalanceOf.mul(toOpPercent).div(PRECISION) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3177:3190  uint256 toDev */\n      0x00\n        /* \"contracts/helperLogic.sol\":3193:3227  uscBalanceOf.sub(toSsea).sub(toOp) */\n      tag_286\n        /* \"contracts/helperLogic.sol\":3222:3226  toOp */\n      dup3\n        /* \"contracts/helperLogic.sol\":3193:3217  uscBalanceOf.sub(toSsea) */\n      tag_287\n        /* \"contracts/helperLogic.sol\":3210:3216  toSsea */\n      dup6\n        /* \"contracts/helperLogic.sol\":3193:3205  uscBalanceOf */\n      dup8\n        /* \"contracts/helperLogic.sol\":3193:3209  uscBalanceOf.sub */\n      tag_288\n      swap1\n        /* \"contracts/helperLogic.sol\":3193:3217  uscBalanceOf.sub(toSsea) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_287:\n        /* \"contracts/helperLogic.sol\":3193:3221  uscBalanceOf.sub(toSsea).sub */\n      tag_288\n      swap1\n        /* \"contracts/helperLogic.sol\":3193:3227  uscBalanceOf.sub(toSsea).sub(toOp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"contracts/helperLogic.sol\":3177:3227  uint256 toDev = uscBalanceOf.sub(toSsea).sub(toOp) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3238:3277  usc.safeTransfer(address(ssea), toSsea) */\n      tag_289\n        /* \"contracts/helperLogic.sol\":3263:3267  ssea */\n      0x69\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3270:3276  toSsea */\n      dup5\n        /* \"contracts/helperLogic.sol\":3238:3241  usc */\n      0x66\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3238:3254  usc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_250\n      swap1\n        /* \"contracts/helperLogic.sol\":3238:3277  usc.safeTransfer(address(ssea), toSsea) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"contracts/helperLogic.sol\":3287:3322  usc.safeTransfer(address(op), toOp) */\n      tag_290\n        /* \"contracts/helperLogic.sol\":3312:3314  op */\n      0x6a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3317:3321  toOp */\n      dup4\n        /* \"contracts/helperLogic.sol\":3287:3290  usc */\n      0x66\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3287:3303  usc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_250\n      swap1\n        /* \"contracts/helperLogic.sol\":3287:3322  usc.safeTransfer(address(op), toOp) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/helperLogic.sol\":3332:3369  usc.safeTransfer(address(dev), toDev) */\n      tag_291\n        /* \"contracts/helperLogic.sol\":3357:3360  dev */\n      0x6b\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3363:3368  toDev */\n      dup3\n        /* \"contracts/helperLogic.sol\":3332:3335  usc */\n      0x66\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3332:3348  usc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_250\n      swap1\n        /* \"contracts/helperLogic.sol\":3332:3369  usc.safeTransfer(address(dev), toDev) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"contracts/helperLogic.sol\":3384:3398  autoAdjustFarm */\n      0x74\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":3380:3437  if (autoAdjustFarm) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/helperLogic.sol\":3414:3426  adjustFarm() */\n      tag_293\n        /* \"contracts/helperLogic.sol\":3414:3424  adjustFarm */\n      tag_294\n        /* \"contracts/helperLogic.sol\":3414:3426  adjustFarm() */\n      jump\t// in\n    tag_293:\n        /* \"contracts/helperLogic.sol\":3380:3437  if (autoAdjustFarm) {... */\n    tag_292:\n        /* \"contracts/helperLogic.sol\":3451:3465  openStabilizer */\n      0x74\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/helperLogic.sol\":3447:3530  if (openStabilizer) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"contracts/helperLogic.sol\":3493:3503  stabilizer */\n      0x75\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3481:3517  IStabilizer(stabilizer).goStabilizer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x796c7be7\n        /* \"contracts/helperLogic.sol\":3481:3519  IStabilizer(stabilizer).goStabilizer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_296:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_299\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      pop\n        /* \"contracts/helperLogic.sol\":3447:3530  if (openStabilizer) {... */\n    tag_295:\n        /* \"contracts/helperLogic.sol\":3547:3551  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":3540:3551  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/helperLogic.sol\":2901:3558  function jointExecution() external onlyExecutor returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":4823:4943  function setDev(address _address) external onlyOwner returns (bool) {... */\n    tag_162:\n        /* \"contracts/helperLogic.sol\":4885:4889  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_303\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap1\n      tag_192\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_304:\n        /* \"contracts/helperLogic.sol\":4907:4915  _address */\n      dup2\n        /* \"contracts/helperLogic.sol\":4901:4904  dev */\n      0x6b\n      0x00\n        /* \"contracts/helperLogic.sol\":4901:4915  dev = _address */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":4932:4936  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":4925:4936  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4823:4943  function setDev(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":6060:6174  function setFarm(IFarm _farm) external onlyOwner returns (bool) {... */\n    tag_167:\n        /* \"contracts/helperLogic.sol\":6118:6122  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_308\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap1\n      tag_192\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"contracts/helperLogic.sol\":6141:6146  _farm */\n      dup2\n        /* \"contracts/helperLogic.sol\":6134:6138  farm */\n      0x74\n      0x00\n        /* \"contracts/helperLogic.sol\":6134:6146  farm = _farm */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":6163:6167  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":6156:6167  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":6060:6174  function setFarm(IFarm _farm) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":5635:5769  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n    tag_171:\n        /* \"contracts/helperLogic.sol\":5704:5708  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_315\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap1\n      tag_192\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_316:\n        /* \"contracts/helperLogic.sol\":5733:5741  _address */\n      dup2\n        /* \"contracts/helperLogic.sol\":5720:5730  stabilizer */\n      0x75\n      0x00\n        /* \"contracts/helperLogic.sol\":5720:5741  stabilizer = _address */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/helperLogic.sol\":5758:5762  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":5751:5762  return true */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":5635:5769  function setStabilizer(address _address) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1270:1287  address public op */\n    tag_174:\n      0x6a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1555:1573  uint256 public pid */\n    tag_177:\n      sload(0x73)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap1\n      tag_192\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2292:2293  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2272:2294  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2272:2280  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2272:2294  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2264:2337  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_326\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_325:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2375  _transferOwnership(newOwner) */\n      tag_328\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2366:2374  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2365  _transferOwnership */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2375  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":1318:1350  IUniswapV2Router02 public Router */\n    tag_183:\n      0x6c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":876:972  function _msgSender() internal view virtual returns (address) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:936  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":955:965  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":948:965  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":876:972  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1114  function __Ownable_init() internal initializer {... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      dup1\n      tag_331\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_331:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap1\n      tag_210\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:667  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":681:695  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      iszero\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":760:764  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:757  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1071  __Context_init_unchained() */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1069  __Context_init_unchained */\n      tag_337\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1071  __Context_init_unchained() */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1107  __Ownable_init_unchained() */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1105  __Ownable_init_unchained */\n      tag_339\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1107  __Ownable_init_unchained() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:844  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1114  function __Ownable_init() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2536:2723  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2609:2625  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2609:2634  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2653:2661  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2644:2650  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2644:2661  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2707:2715  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2697:2705  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2536:2723  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_343\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":888:893  token */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":918:941  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":943:945  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":947:952  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":895:953  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_344\n      swap3\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:887  _callOptionalReturn */\n      tag_346\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3462:3558  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3520:3527  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3550:3551  b */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3547  a */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3551  a * b */\n      tag_348\n      swap2\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3539:3551  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3462:3558  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3847:3943  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3905:3912  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3935:3936  b */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3932  a */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3936  a / b */\n      tag_351\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3924:3936  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3847:3943  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3119:3215  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3177:3184  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3207:3208  b */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3204  a */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3208  a - b */\n      tag_354\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3196:3208  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3119:3215  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/helperLogic.sol\":3564:4472  function adjustFarm() internal {... */\n    tag_294:\n        /* \"contracts/helperLogic.sol\":3605:3624  address pairAddress */\n      0x00\n        /* \"contracts/helperLogic.sol\":3627:3634  Factory */\n      0x6d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3627:3642  Factory.getPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe6a43905\n        /* \"contracts/helperLogic.sol\":3651:3655  usdc */\n      0x67\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3666:3669  usc */\n      0x66\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3627:3671  Factory.getPair(address(usdc), address(usc)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap3\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_359\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_359:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_361\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_361:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_362\n      swap2\n      swap1\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"contracts/helperLogic.sol\":3605:3671  address pairAddress = Factory.getPair(address(usdc), address(usc)) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3681:3701  uint256 uscBalanceOf */\n      0x00\n        /* \"contracts/helperLogic.sol\":3704:3707  usc */\n      0x66\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3704:3717  usc.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/helperLogic.sol\":3718:3729  pairAddress */\n      dup4\n        /* \"contracts/helperLogic.sol\":3704:3730  usc.balanceOf(pairAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_364:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_365\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_365:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_367\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_367:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_368\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_368:\n        /* \"contracts/helperLogic.sol\":3681:3730  uint256 uscBalanceOf = usc.balanceOf(pairAddress) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3740:3761  uint256 usdcBalanceOf */\n      0x00\n        /* \"contracts/helperLogic.sol\":3764:3768  usdc */\n      0x67\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":3764:3778  usdc.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/helperLogic.sol\":3779:3790  pairAddress */\n      dup5\n        /* \"contracts/helperLogic.sol\":3764:3791  usdc.balanceOf(pairAddress) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_369\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_369:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_370\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_370:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_372\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_372:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_373\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_373:\n        /* \"contracts/helperLogic.sol\":3740:3791  uint256 usdcBalanceOf = usdc.balanceOf(pairAddress) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3801:3812  uint256 e18 */\n      0x00\n        /* \"contracts/helperLogic.sol\":3815:3819  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":3801:3819  uint256 e18 = 1e18 */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3829:3845  uint256 uscPrice */\n      0x00\n        /* \"contracts/helperLogic.sol\":3848:3888  usdcBalanceOf.mul(e18).div(uscBalanceOf) */\n      tag_374\n        /* \"contracts/helperLogic.sol\":3875:3887  uscBalanceOf */\n      dup5\n        /* \"contracts/helperLogic.sol\":3848:3870  usdcBalanceOf.mul(e18) */\n      tag_375\n        /* \"contracts/helperLogic.sol\":3866:3869  e18 */\n      dup5\n        /* \"contracts/helperLogic.sol\":3848:3861  usdcBalanceOf */\n      dup7\n        /* \"contracts/helperLogic.sol\":3848:3865  usdcBalanceOf.mul */\n      tag_282\n      swap1\n        /* \"contracts/helperLogic.sol\":3848:3870  usdcBalanceOf.mul(e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_375:\n        /* \"contracts/helperLogic.sol\":3848:3874  usdcBalanceOf.mul(e18).div */\n      tag_283\n      swap1\n        /* \"contracts/helperLogic.sol\":3848:3888  usdcBalanceOf.mul(e18).div(uscBalanceOf) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_374:\n        /* \"contracts/helperLogic.sol\":3829:3888  uint256 uscPrice = usdcBalanceOf.mul(e18).div(uscBalanceOf) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":3898:3927  uint256 USDC_USC_LP_farmPoint */\n      0x00\n        /* \"contracts/helperLogic.sol\":3937:3954  uint256 diffPoint */\n      dup1\n        /* \"contracts/helperLogic.sol\":3979:3983  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":3968:3976  uscPrice */\n      dup4\n        /* \"contracts/helperLogic.sol\":3968:3983  uscPrice > 1e18 */\n      gt\n        /* \"contracts/helperLogic.sol\":3964:4410  if (uscPrice > 1e18) {... */\n      iszero\n      tag_376\n      jumpi\n        /* \"contracts/helperLogic.sol\":4032:4062  (uscPrice.sub(1e18)).div(1e14) */\n      tag_377\n        /* \"contracts/helperLogic.sol\":4057:4061  1e14 */\n      0x5af3107a4000\n        /* \"contracts/helperLogic.sol\":4033:4051  uscPrice.sub(1e18) */\n      tag_378\n        /* \"contracts/helperLogic.sol\":4046:4050  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":4033:4041  uscPrice */\n      dup7\n        /* \"contracts/helperLogic.sol\":4033:4045  uscPrice.sub */\n      tag_288\n      swap1\n        /* \"contracts/helperLogic.sol\":4033:4051  uscPrice.sub(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_378:\n        /* \"contracts/helperLogic.sol\":4032:4056  (uscPrice.sub(1e18)).div */\n      tag_283\n      swap1\n        /* \"contracts/helperLogic.sol\":4032:4062  (uscPrice.sub(1e18)).div(1e14) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_377:\n        /* \"contracts/helperLogic.sol\":4020:4062  diffPoint = (uscPrice.sub(1e18)).div(1e14) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4092:4101  basePoint */\n      sload(0x72)\n        /* \"contracts/helperLogic.sol\":4080:4089  diffPoint */\n      dup2\n        /* \"contracts/helperLogic.sol\":4080:4101  diffPoint > basePoint */\n      gt\n        /* \"contracts/helperLogic.sol\":4076:4248  if (diffPoint > basePoint) {... */\n      iszero\n      tag_379\n      jumpi\n        /* \"contracts/helperLogic.sol\":4145:4146  0 */\n      0x00\n        /* \"contracts/helperLogic.sol\":4121:4146  USDC_USC_LP_farmPoint = 0 */\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":4076:4248  if (diffPoint > basePoint) {... */\n      jump(tag_380)\n    tag_379:\n        /* \"contracts/helperLogic.sol\":4209:4233  basePoint.sub(diffPoint) */\n      tag_381\n        /* \"contracts/helperLogic.sol\":4223:4232  diffPoint */\n      dup2\n        /* \"contracts/helperLogic.sol\":4209:4218  basePoint */\n      sload(0x72)\n        /* \"contracts/helperLogic.sol\":4209:4222  basePoint.sub */\n      tag_288\n      swap1\n        /* \"contracts/helperLogic.sol\":4209:4233  basePoint.sub(diffPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_381:\n        /* \"contracts/helperLogic.sol\":4185:4233  USDC_USC_LP_farmPoint = basePoint.sub(diffPoint) */\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":4076:4248  if (diffPoint > basePoint) {... */\n    tag_380:\n        /* \"contracts/helperLogic.sol\":3964:4410  if (uscPrice > 1e18) {... */\n      jump(tag_382)\n    tag_376:\n        /* \"contracts/helperLogic.sol\":4310:4337  (1e18 - uscPrice).div(1e14) */\n      tag_383\n        /* \"contracts/helperLogic.sol\":4332:4336  1e14 */\n      0x5af3107a4000\n        /* \"contracts/helperLogic.sol\":4318:4326  uscPrice */\n      dup5\n        /* \"contracts/helperLogic.sol\":4311:4315  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/helperLogic.sol\":4311:4326  1e18 - uscPrice */\n      tag_384\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_384:\n        /* \"contracts/helperLogic.sol\":4310:4331  (1e18 - uscPrice).div */\n      tag_283\n      swap1\n        /* \"contracts/helperLogic.sol\":4310:4337  (1e18 - uscPrice).div(1e14) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_383:\n        /* \"contracts/helperLogic.sol\":4298:4337  diffPoint = (1e18 - uscPrice).div(1e14) */\n      swap1\n      pop\n        /* \"contracts/helperLogic.sol\":4375:4399  basePoint.add(diffPoint) */\n      tag_385\n        /* \"contracts/helperLogic.sol\":4389:4398  diffPoint */\n      dup2\n        /* \"contracts/helperLogic.sol\":4375:4384  basePoint */\n      sload(0x72)\n        /* \"contracts/helperLogic.sol\":4375:4388  basePoint.add */\n      tag_386\n      swap1\n        /* \"contracts/helperLogic.sol\":4375:4399  basePoint.add(diffPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_385:\n        /* \"contracts/helperLogic.sol\":4351:4399  USDC_USC_LP_farmPoint = basePoint.add(diffPoint) */\n      swap2\n      pop\n        /* \"contracts/helperLogic.sol\":3964:4410  if (uscPrice > 1e18) {... */\n    tag_382:\n        /* \"contracts/helperLogic.sol\":4419:4423  farm */\n      0x74\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/helperLogic.sol\":4419:4431  farm.setPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x46ca6bea\n        /* \"contracts/helperLogic.sol\":4432:4435  pid */\n      sload(0x73)\n        /* \"contracts/helperLogic.sol\":4437:4458  USDC_USC_LP_farmPoint */\n      dup5\n        /* \"contracts/helperLogic.sol\":4460:4464  true */\n      0x01\n        /* \"contracts/helperLogic.sol\":4419:4465  farm.setPool(pid, USDC_USC_LP_farmPoint, true) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_388\n      jump\t// in\n    tag_387:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_389\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_389:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_391\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_391:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/helperLogic.sol\":3564:4472  function adjustFarm() internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":807:871  function __Context_init_unchained() internal initializer {... */\n    tag_337:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      dup1\n      tag_393\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_393:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_394\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_395\n      swap1\n      tag_210\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:667  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":681:695  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      iszero\n      tag_396\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":760:764  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:757  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_398\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:844  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n    tag_398:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":807:871  function __Context_init_unchained() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1120:1226  function __Ownable_init_unchained() internal initializer {... */\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      dup1\n      tag_400\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_400:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_401\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_402\n      swap1\n      tag_210\n      jump\t// in\n    tag_402:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:667  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":681:695  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":760:764  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:757  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_403:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1219  _transferOwnership(_msgSender()) */\n      tag_405\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1218  _msgSender() */\n      tag_406\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1216  _msgSender */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1218  _msgSender() */\n      jump\t// in\n    tag_406:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1205  _transferOwnership */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1219  _transferOwnership(_msgSender()) */\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:844  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n    tag_407:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1120:1226  function __Ownable_init_unchained() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3306:4023  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n    tag_346:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3759  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_409\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3790:3794  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3770:3775  token */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3789  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_410\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3831  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3865:3866  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3855  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3862  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3866  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3841:4017  if (returndata.length > 0) {... */\n      iszero\n      tag_411\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3940:3950  returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3929:3959  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_412\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3921:4006  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_414\n      swap1\n      tag_415\n      jump\t// in\n    tag_414:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_413:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3841:4017  if (returndata.length > 0) {... */\n    tag_411:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3306:4023  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2752:2848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2810:2817  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2840:2841  b */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2837  a */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2841  a + b */\n      tag_417\n      swap2\n      swap1\n      tag_418\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2829:2841  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2752:2848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3525:3748  function functionCall(... */\n    tag_410:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3658:3670  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3741  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_420\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3711:3717  target */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3719:3723  data */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3725:3726  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3728:3740  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3710  functionCallWithValue */\n      tag_421\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3741  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_420:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3682:3741  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3525:3748  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4612:5111  function functionCallWithValue(... */\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4777:4789  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4834:4839  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4809:4830  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4809:4839  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4801:4882  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_423\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_424\n      swap1\n      tag_425\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_423:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4918  isContract(target) */\n      tag_426\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4911:4917  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4910  isContract */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4918  isContract(target) */\n      jump\t// in\n    tag_426:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4892:4952  require(isContract(target), \"Address: call to non-contract\") */\n      tag_428\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_429\n      swap1\n      tag_430\n      jump\t// in\n    tag_429:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4964:4976  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4978:5001  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5011  target */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5016  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5024:5029  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5031:5035  data */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5036  target.call{value: value}(data) */\n      mload(0x40)\n      tag_431\n      swap2\n      swap1\n      tag_432\n      jump\t// in\n    tag_431:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_435\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_434)\n    tag_435:\n      0x60\n      swap2\n      pop\n    tag_434:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4963:5036  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5104  verifyCallResult(success, returndata, errorMessage) */\n      tag_436\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5070:5077  success */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5079:5089  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5091:5103  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5069  verifyCallResult */\n      tag_437\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5104  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_436:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5046:5104  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4612:5111  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":782:1159  function isContract(address account) internal view returns (bool) {... */\n    tag_427:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":842:846  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1045:1057  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1110:1117  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1098:1118  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1090:1118  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1151:1152  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1144:1148  size */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1144:1152  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1137:1152  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":782:1159  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6275:6967  function verifyCallResult(... */\n    tag_437:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6421:6433  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6449:6456  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6445:6961  if (success) {... */\n      iszero\n      tag_440\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6479:6489  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6472:6489  return returndata */\n      swap1\n      pop\n      jump(tag_439)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6445:6961  if (success) {... */\n    tag_440:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6610:6611  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6600  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6607  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6611  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6586:6951  if (returndata.length > 0) {... */\n      iszero\n      tag_442\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6784:6794  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6778:6795  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6844:6859  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6831:6841  returndata */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6827:6829  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6823:6842  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6816:6860  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6733:6878  {... */\n    tag_442:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6923:6935  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6916:6936  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_444\n      swap2\n      swap1\n      tag_445\n      jump\t// in\n    tag_444:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6275:6967  function verifyCallResult(... */\n    tag_439:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_447:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_449\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_450\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:295   */\n    tag_451:\n      0x00\n        /* \"#utility.yul\":240:246   */\n      dup2\n        /* \"#utility.yul\":234:247   */\n      mload\n        /* \"#utility.yul\":225:247   */\n      swap1\n      pop\n        /* \"#utility.yul\":256:289   */\n      tag_453\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":256:289   */\n      tag_450\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":215:295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":301:434   */\n    tag_454:\n      0x00\n        /* \"#utility.yul\":382:388   */\n      dup2\n        /* \"#utility.yul\":369:389   */\n      calldataload\n        /* \"#utility.yul\":360:389   */\n      swap1\n      pop\n        /* \"#utility.yul\":398:428   */\n      tag_456\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":398:428   */\n      tag_457\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":350:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:577   */\n    tag_458:\n      0x00\n        /* \"#utility.yul\":525:531   */\n      dup2\n        /* \"#utility.yul\":519:532   */\n      mload\n        /* \"#utility.yul\":510:532   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:571   */\n      tag_460\n        /* \"#utility.yul\":565:570   */\n      dup2\n        /* \"#utility.yul\":541:571   */\n      tag_457\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":500:577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":583:772   */\n    tag_461:\n      0x00\n        /* \"#utility.yul\":692:698   */\n      dup2\n        /* \"#utility.yul\":679:699   */\n      calldataload\n        /* \"#utility.yul\":670:699   */\n      swap1\n      pop\n        /* \"#utility.yul\":708:766   */\n      tag_463\n        /* \"#utility.yul\":760:765   */\n      dup2\n        /* \"#utility.yul\":708:766   */\n      tag_464\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":660:772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":778:945   */\n    tag_465:\n      0x00\n        /* \"#utility.yul\":876:882   */\n      dup2\n        /* \"#utility.yul\":863:883   */\n      calldataload\n        /* \"#utility.yul\":854:883   */\n      swap1\n      pop\n        /* \"#utility.yul\":892:939   */\n      tag_467\n        /* \"#utility.yul\":933:938   */\n      dup2\n        /* \"#utility.yul\":892:939   */\n      tag_468\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":844:945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":951:1142   */\n    tag_469:\n      0x00\n        /* \"#utility.yul\":1061:1067   */\n      dup2\n        /* \"#utility.yul\":1048:1068   */\n      calldataload\n        /* \"#utility.yul\":1039:1068   */\n      swap1\n      pop\n        /* \"#utility.yul\":1077:1136   */\n      tag_471\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1077:1136   */\n      tag_472\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":1029:1142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1148:1341   */\n    tag_473:\n      0x00\n        /* \"#utility.yul\":1259:1265   */\n      dup2\n        /* \"#utility.yul\":1246:1266   */\n      calldataload\n        /* \"#utility.yul\":1237:1266   */\n      swap1\n      pop\n        /* \"#utility.yul\":1275:1335   */\n      tag_475\n        /* \"#utility.yul\":1329:1334   */\n      dup2\n        /* \"#utility.yul\":1275:1335   */\n      tag_476\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":1227:1341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1347:1486   */\n    tag_477:\n      0x00\n        /* \"#utility.yul\":1431:1437   */\n      dup2\n        /* \"#utility.yul\":1418:1438   */\n      calldataload\n        /* \"#utility.yul\":1409:1438   */\n      swap1\n      pop\n        /* \"#utility.yul\":1447:1480   */\n      tag_479\n        /* \"#utility.yul\":1474:1479   */\n      dup2\n        /* \"#utility.yul\":1447:1480   */\n      tag_480\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":1399:1486   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1492:1635   */\n    tag_481:\n      0x00\n        /* \"#utility.yul\":1580:1586   */\n      dup2\n        /* \"#utility.yul\":1574:1587   */\n      mload\n        /* \"#utility.yul\":1565:1587   */\n      swap1\n      pop\n        /* \"#utility.yul\":1596:1629   */\n      tag_483\n        /* \"#utility.yul\":1623:1628   */\n      dup2\n        /* \"#utility.yul\":1596:1629   */\n      tag_480\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":1555:1635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1641:1903   */\n    tag_95:\n      0x00\n        /* \"#utility.yul\":1749:1751   */\n      0x20\n        /* \"#utility.yul\":1737:1746   */\n      dup3\n        /* \"#utility.yul\":1728:1735   */\n      dup5\n        /* \"#utility.yul\":1724:1747   */\n      sub\n        /* \"#utility.yul\":1720:1752   */\n      slt\n        /* \"#utility.yul\":1717:1719   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":1765:1766   */\n      0x00\n        /* \"#utility.yul\":1762:1763   */\n      dup1\n        /* \"#utility.yul\":1755:1767   */\n      revert\n        /* \"#utility.yul\":1717:1719   */\n    tag_485:\n        /* \"#utility.yul\":1808:1809   */\n      0x00\n        /* \"#utility.yul\":1833:1886   */\n      tag_486\n        /* \"#utility.yul\":1878:1885   */\n      dup5\n        /* \"#utility.yul\":1869:1875   */\n      dup3\n        /* \"#utility.yul\":1858:1867   */\n      dup6\n        /* \"#utility.yul\":1854:1876   */\n      add\n        /* \"#utility.yul\":1833:1886   */\n      tag_447\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":1823:1886   */\n      swap2\n      pop\n        /* \"#utility.yul\":1779:1896   */\n      pop\n        /* \"#utility.yul\":1707:1903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1909:2193   */\n    tag_363:\n      0x00\n        /* \"#utility.yul\":2028:2030   */\n      0x20\n        /* \"#utility.yul\":2016:2025   */\n      dup3\n        /* \"#utility.yul\":2007:2014   */\n      dup5\n        /* \"#utility.yul\":2003:2026   */\n      sub\n        /* \"#utility.yul\":1999:2031   */\n      slt\n        /* \"#utility.yul\":1996:1998   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":2044:2045   */\n      0x00\n        /* \"#utility.yul\":2041:2042   */\n      dup1\n        /* \"#utility.yul\":2034:2046   */\n      revert\n        /* \"#utility.yul\":1996:1998   */\n    tag_488:\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2112:2176   */\n      tag_489\n        /* \"#utility.yul\":2168:2175   */\n      dup5\n        /* \"#utility.yul\":2159:2165   */\n      dup3\n        /* \"#utility.yul\":2148:2157   */\n      dup6\n        /* \"#utility.yul\":2144:2166   */\n      add\n        /* \"#utility.yul\":2112:2176   */\n      tag_451\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":2102:2176   */\n      swap2\n      pop\n        /* \"#utility.yul\":2058:2186   */\n      pop\n        /* \"#utility.yul\":1986:2193   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2199:2600   */\n    tag_59:\n      0x00\n      dup1\n        /* \"#utility.yul\":2321:2323   */\n      0x40\n        /* \"#utility.yul\":2309:2318   */\n      dup4\n        /* \"#utility.yul\":2300:2307   */\n      dup6\n        /* \"#utility.yul\":2296:2319   */\n      sub\n        /* \"#utility.yul\":2292:2324   */\n      slt\n        /* \"#utility.yul\":2289:2291   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":2337:2338   */\n      0x00\n        /* \"#utility.yul\":2334:2335   */\n      dup1\n        /* \"#utility.yul\":2327:2339   */\n      revert\n        /* \"#utility.yul\":2289:2291   */\n    tag_491:\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2405:2458   */\n      tag_492\n        /* \"#utility.yul\":2450:2457   */\n      dup6\n        /* \"#utility.yul\":2441:2447   */\n      dup3\n        /* \"#utility.yul\":2430:2439   */\n      dup7\n        /* \"#utility.yul\":2426:2448   */\n      add\n        /* \"#utility.yul\":2405:2458   */\n      tag_447\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":2395:2458   */\n      swap3\n      pop\n        /* \"#utility.yul\":2351:2468   */\n      pop\n        /* \"#utility.yul\":2507:2509   */\n      0x20\n        /* \"#utility.yul\":2533:2583   */\n      tag_493\n        /* \"#utility.yul\":2575:2582   */\n      dup6\n        /* \"#utility.yul\":2566:2572   */\n      dup3\n        /* \"#utility.yul\":2555:2564   */\n      dup7\n        /* \"#utility.yul\":2551:2573   */\n      add\n        /* \"#utility.yul\":2533:2583   */\n      tag_454\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":2523:2583   */\n      swap2\n      pop\n        /* \"#utility.yul\":2478:2593   */\n      pop\n        /* \"#utility.yul\":2279:2600   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2606:3013   */\n    tag_125:\n      0x00\n      dup1\n        /* \"#utility.yul\":2731:2733   */\n      0x40\n        /* \"#utility.yul\":2719:2728   */\n      dup4\n        /* \"#utility.yul\":2710:2717   */\n      dup6\n        /* \"#utility.yul\":2706:2729   */\n      sub\n        /* \"#utility.yul\":2702:2734   */\n      slt\n        /* \"#utility.yul\":2699:2701   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":2747:2748   */\n      0x00\n        /* \"#utility.yul\":2744:2745   */\n      dup1\n        /* \"#utility.yul\":2737:2749   */\n      revert\n        /* \"#utility.yul\":2699:2701   */\n    tag_495:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_496\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_447\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_497\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_477\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2689:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3275   */\n    tag_90:\n      0x00\n        /* \"#utility.yul\":3124:3126   */\n      0x20\n        /* \"#utility.yul\":3112:3121   */\n      dup3\n        /* \"#utility.yul\":3103:3110   */\n      dup5\n        /* \"#utility.yul\":3099:3122   */\n      sub\n        /* \"#utility.yul\":3095:3127   */\n      slt\n        /* \"#utility.yul\":3092:3094   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":3140:3141   */\n      0x00\n        /* \"#utility.yul\":3137:3138   */\n      dup1\n        /* \"#utility.yul\":3130:3142   */\n      revert\n        /* \"#utility.yul\":3092:3094   */\n    tag_499:\n        /* \"#utility.yul\":3183:3184   */\n      0x00\n        /* \"#utility.yul\":3208:3258   */\n      tag_500\n        /* \"#utility.yul\":3250:3257   */\n      dup5\n        /* \"#utility.yul\":3241:3247   */\n      dup3\n        /* \"#utility.yul\":3230:3239   */\n      dup6\n        /* \"#utility.yul\":3226:3248   */\n      add\n        /* \"#utility.yul\":3208:3258   */\n      tag_454\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":3198:3258   */\n      swap2\n      pop\n        /* \"#utility.yul\":3154:3268   */\n      pop\n        /* \"#utility.yul\":3082:3275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3281:3559   */\n    tag_300:\n      0x00\n        /* \"#utility.yul\":3397:3399   */\n      0x20\n        /* \"#utility.yul\":3385:3394   */\n      dup3\n        /* \"#utility.yul\":3376:3383   */\n      dup5\n        /* \"#utility.yul\":3372:3395   */\n      sub\n        /* \"#utility.yul\":3368:3400   */\n      slt\n        /* \"#utility.yul\":3365:3367   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":3413:3414   */\n      0x00\n        /* \"#utility.yul\":3410:3411   */\n      dup1\n        /* \"#utility.yul\":3403:3415   */\n      revert\n        /* \"#utility.yul\":3365:3367   */\n    tag_502:\n        /* \"#utility.yul\":3456:3457   */\n      0x00\n        /* \"#utility.yul\":3481:3542   */\n      tag_503\n        /* \"#utility.yul\":3534:3541   */\n      dup5\n        /* \"#utility.yul\":3525:3531   */\n      dup3\n        /* \"#utility.yul\":3514:3523   */\n      dup6\n        /* \"#utility.yul\":3510:3532   */\n      add\n        /* \"#utility.yul\":3481:3542   */\n      tag_458\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":3471:3542   */\n      swap2\n      pop\n        /* \"#utility.yul\":3427:3552   */\n      pop\n        /* \"#utility.yul\":3355:3559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3565:3877   */\n    tag_137:\n      0x00\n        /* \"#utility.yul\":3698:3700   */\n      0x20\n        /* \"#utility.yul\":3686:3695   */\n      dup3\n        /* \"#utility.yul\":3677:3684   */\n      dup5\n        /* \"#utility.yul\":3673:3696   */\n      sub\n        /* \"#utility.yul\":3669:3701   */\n      slt\n        /* \"#utility.yul\":3666:3668   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":3714:3715   */\n      0x00\n        /* \"#utility.yul\":3711:3712   */\n      dup1\n        /* \"#utility.yul\":3704:3716   */\n      revert\n        /* \"#utility.yul\":3666:3668   */\n    tag_505:\n        /* \"#utility.yul\":3757:3758   */\n      0x00\n        /* \"#utility.yul\":3782:3860   */\n      tag_506\n        /* \"#utility.yul\":3852:3859   */\n      dup5\n        /* \"#utility.yul\":3843:3849   */\n      dup3\n        /* \"#utility.yul\":3832:3841   */\n      dup6\n        /* \"#utility.yul\":3828:3850   */\n      add\n        /* \"#utility.yul\":3782:3860   */\n      tag_461\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":3772:3860   */\n      swap2\n      pop\n        /* \"#utility.yul\":3728:3870   */\n      pop\n        /* \"#utility.yul\":3656:3877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4173   */\n    tag_166:\n      0x00\n        /* \"#utility.yul\":4005:4007   */\n      0x20\n        /* \"#utility.yul\":3993:4002   */\n      dup3\n        /* \"#utility.yul\":3984:3991   */\n      dup5\n        /* \"#utility.yul\":3980:4003   */\n      sub\n        /* \"#utility.yul\":3976:4008   */\n      slt\n        /* \"#utility.yul\":3973:3975   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":4021:4022   */\n      0x00\n        /* \"#utility.yul\":4018:4019   */\n      dup1\n        /* \"#utility.yul\":4011:4023   */\n      revert\n        /* \"#utility.yul\":3973:3975   */\n    tag_508:\n        /* \"#utility.yul\":4064:4065   */\n      0x00\n        /* \"#utility.yul\":4089:4156   */\n      tag_509\n        /* \"#utility.yul\":4148:4155   */\n      dup5\n        /* \"#utility.yul\":4139:4145   */\n      dup3\n        /* \"#utility.yul\":4128:4137   */\n      dup6\n        /* \"#utility.yul\":4124:4146   */\n      add\n        /* \"#utility.yul\":4089:4156   */\n      tag_465\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":4079:4156   */\n      swap2\n      pop\n        /* \"#utility.yul\":4035:4166   */\n      pop\n        /* \"#utility.yul\":3963:4173   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4179:5649   */\n    tag_75:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":4556:4559   */\n      0xe0\n        /* \"#utility.yul\":4544:4553   */\n      dup9\n        /* \"#utility.yul\":4535:4542   */\n      dup11\n        /* \"#utility.yul\":4531:4554   */\n      sub\n        /* \"#utility.yul\":4527:4560   */\n      slt\n        /* \"#utility.yul\":4524:4526   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":4573:4574   */\n      0x00\n        /* \"#utility.yul\":4570:4571   */\n      dup1\n        /* \"#utility.yul\":4563:4575   */\n      revert\n        /* \"#utility.yul\":4524:4526   */\n    tag_511:\n        /* \"#utility.yul\":4616:4617   */\n      0x00\n        /* \"#utility.yul\":4641:4720   */\n      tag_512\n        /* \"#utility.yul\":4712:4719   */\n      dup11\n        /* \"#utility.yul\":4703:4709   */\n      dup3\n        /* \"#utility.yul\":4692:4701   */\n      dup12\n        /* \"#utility.yul\":4688:4710   */\n      add\n        /* \"#utility.yul\":4641:4720   */\n      tag_469\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4631:4720   */\n      swap8\n      pop\n        /* \"#utility.yul\":4587:4730   */\n      pop\n        /* \"#utility.yul\":4769:4771   */\n      0x20\n        /* \"#utility.yul\":4795:4875   */\n      tag_513\n        /* \"#utility.yul\":4867:4874   */\n      dup11\n        /* \"#utility.yul\":4858:4864   */\n      dup3\n        /* \"#utility.yul\":4847:4856   */\n      dup12\n        /* \"#utility.yul\":4843:4865   */\n      add\n        /* \"#utility.yul\":4795:4875   */\n      tag_473\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":4785:4875   */\n      swap7\n      pop\n        /* \"#utility.yul\":4740:4885   */\n      pop\n        /* \"#utility.yul\":4924:4926   */\n      0x40\n        /* \"#utility.yul\":4950:5028   */\n      tag_514\n        /* \"#utility.yul\":5020:5027   */\n      dup11\n        /* \"#utility.yul\":5011:5017   */\n      dup3\n        /* \"#utility.yul\":5000:5009   */\n      dup12\n        /* \"#utility.yul\":4996:5018   */\n      add\n        /* \"#utility.yul\":4950:5028   */\n      tag_461\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":4940:5028   */\n      swap6\n      pop\n        /* \"#utility.yul\":4895:5038   */\n      pop\n        /* \"#utility.yul\":5077:5079   */\n      0x60\n        /* \"#utility.yul\":5103:5181   */\n      tag_515\n        /* \"#utility.yul\":5173:5180   */\n      dup11\n        /* \"#utility.yul\":5164:5170   */\n      dup3\n        /* \"#utility.yul\":5153:5162   */\n      dup12\n        /* \"#utility.yul\":5149:5171   */\n      add\n        /* \"#utility.yul\":5103:5181   */\n      tag_461\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":5093:5181   */\n      swap5\n      pop\n        /* \"#utility.yul\":5048:5191   */\n      pop\n        /* \"#utility.yul\":5230:5233   */\n      0x80\n        /* \"#utility.yul\":5257:5335   */\n      tag_516\n        /* \"#utility.yul\":5327:5334   */\n      dup11\n        /* \"#utility.yul\":5318:5324   */\n      dup3\n        /* \"#utility.yul\":5307:5316   */\n      dup12\n        /* \"#utility.yul\":5303:5325   */\n      add\n        /* \"#utility.yul\":5257:5335   */\n      tag_461\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":5247:5335   */\n      swap4\n      pop\n        /* \"#utility.yul\":5201:5345   */\n      pop\n        /* \"#utility.yul\":5384:5387   */\n      0xa0\n        /* \"#utility.yul\":5411:5489   */\n      tag_517\n        /* \"#utility.yul\":5481:5488   */\n      dup11\n        /* \"#utility.yul\":5472:5478   */\n      dup3\n        /* \"#utility.yul\":5461:5470   */\n      dup12\n        /* \"#utility.yul\":5457:5479   */\n      add\n        /* \"#utility.yul\":5411:5489   */\n      tag_461\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":5401:5489   */\n      swap3\n      pop\n        /* \"#utility.yul\":5355:5499   */\n      pop\n        /* \"#utility.yul\":5538:5541   */\n      0xc0\n        /* \"#utility.yul\":5565:5632   */\n      tag_518\n        /* \"#utility.yul\":5624:5631   */\n      dup11\n        /* \"#utility.yul\":5615:5621   */\n      dup3\n        /* \"#utility.yul\":5604:5613   */\n      dup12\n        /* \"#utility.yul\":5600:5622   */\n      add\n        /* \"#utility.yul\":5565:5632   */\n      tag_465\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5555:5632   */\n      swap2\n      pop\n        /* \"#utility.yul\":5509:5642   */\n      pop\n        /* \"#utility.yul\":4514:5649   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5655:5917   */\n    tag_53:\n      0x00\n        /* \"#utility.yul\":5763:5765   */\n      0x20\n        /* \"#utility.yul\":5751:5760   */\n      dup3\n        /* \"#utility.yul\":5742:5749   */\n      dup5\n        /* \"#utility.yul\":5738:5761   */\n      sub\n        /* \"#utility.yul\":5734:5766   */\n      slt\n        /* \"#utility.yul\":5731:5733   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":5779:5780   */\n      0x00\n        /* \"#utility.yul\":5776:5777   */\n      dup1\n        /* \"#utility.yul\":5769:5781   */\n      revert\n        /* \"#utility.yul\":5731:5733   */\n    tag_520:\n        /* \"#utility.yul\":5822:5823   */\n      0x00\n        /* \"#utility.yul\":5847:5900   */\n      tag_521\n        /* \"#utility.yul\":5892:5899   */\n      dup5\n        /* \"#utility.yul\":5883:5889   */\n      dup3\n        /* \"#utility.yul\":5872:5881   */\n      dup6\n        /* \"#utility.yul\":5868:5890   */\n      add\n        /* \"#utility.yul\":5847:5900   */\n      tag_477\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":5837:5900   */\n      swap2\n      pop\n        /* \"#utility.yul\":5793:5910   */\n      pop\n        /* \"#utility.yul\":5721:5917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5923:6207   */\n    tag_279:\n      0x00\n        /* \"#utility.yul\":6042:6044   */\n      0x20\n        /* \"#utility.yul\":6030:6039   */\n      dup3\n        /* \"#utility.yul\":6021:6028   */\n      dup5\n        /* \"#utility.yul\":6017:6040   */\n      sub\n        /* \"#utility.yul\":6013:6045   */\n      slt\n        /* \"#utility.yul\":6010:6012   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":6058:6059   */\n      0x00\n        /* \"#utility.yul\":6055:6056   */\n      dup1\n        /* \"#utility.yul\":6048:6060   */\n      revert\n        /* \"#utility.yul\":6010:6012   */\n    tag_523:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6190   */\n      tag_524\n        /* \"#utility.yul\":6182:6189   */\n      dup5\n        /* \"#utility.yul\":6173:6179   */\n      dup3\n        /* \"#utility.yul\":6162:6171   */\n      dup6\n        /* \"#utility.yul\":6158:6180   */\n      add\n        /* \"#utility.yul\":6126:6190   */\n      tag_481\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":6116:6190   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6200   */\n      pop\n        /* \"#utility.yul\":6000:6207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6213:6331   */\n    tag_525:\n        /* \"#utility.yul\":6300:6324   */\n      tag_527\n        /* \"#utility.yul\":6318:6323   */\n      dup2\n        /* \"#utility.yul\":6300:6324   */\n      tag_528\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":6295:6298   */\n      dup3\n        /* \"#utility.yul\":6288:6325   */\n      mstore\n        /* \"#utility.yul\":6278:6331   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6337:6446   */\n    tag_529:\n        /* \"#utility.yul\":6418:6439   */\n      tag_531\n        /* \"#utility.yul\":6433:6438   */\n      dup2\n        /* \"#utility.yul\":6418:6439   */\n      tag_532\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":6413:6416   */\n      dup3\n        /* \"#utility.yul\":6406:6440   */\n      mstore\n        /* \"#utility.yul\":6396:6446   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6452:6825   */\n    tag_533:\n      0x00\n        /* \"#utility.yul\":6584:6622   */\n      tag_535\n        /* \"#utility.yul\":6616:6621   */\n      dup3\n        /* \"#utility.yul\":6584:6622   */\n      tag_536\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":6638:6726   */\n      tag_537\n        /* \"#utility.yul\":6719:6725   */\n      dup2\n        /* \"#utility.yul\":6714:6717   */\n      dup6\n        /* \"#utility.yul\":6638:6726   */\n      tag_538\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":6631:6726   */\n      swap4\n      pop\n        /* \"#utility.yul\":6735:6787   */\n      tag_539\n        /* \"#utility.yul\":6780:6786   */\n      dup2\n        /* \"#utility.yul\":6775:6778   */\n      dup6\n        /* \"#utility.yul\":6768:6772   */\n      0x20\n        /* \"#utility.yul\":6761:6766   */\n      dup7\n        /* \"#utility.yul\":6757:6773   */\n      add\n        /* \"#utility.yul\":6735:6787   */\n      tag_540\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":6812:6818   */\n      dup1\n        /* \"#utility.yul\":6807:6810   */\n      dup5\n        /* \"#utility.yul\":6803:6819   */\n      add\n        /* \"#utility.yul\":6796:6819   */\n      swap2\n      pop\n        /* \"#utility.yul\":6560:6825   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6831:7012   */\n    tag_541:\n        /* \"#utility.yul\":6943:7005   */\n      tag_543\n        /* \"#utility.yul\":6999:7004   */\n      dup2\n        /* \"#utility.yul\":6943:7005   */\n      tag_544\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":6938:6941   */\n      dup3\n        /* \"#utility.yul\":6931:7006   */\n      mstore\n        /* \"#utility.yul\":6921:7012   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7018:7177   */\n    tag_545:\n        /* \"#utility.yul\":7119:7170   */\n      tag_547\n        /* \"#utility.yul\":7164:7169   */\n      dup2\n        /* \"#utility.yul\":7119:7170   */\n      tag_548\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":7114:7117   */\n      dup3\n        /* \"#utility.yul\":7107:7171   */\n      mstore\n        /* \"#utility.yul\":7097:7177   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7183:7366   */\n    tag_549:\n        /* \"#utility.yul\":7296:7359   */\n      tag_551\n        /* \"#utility.yul\":7353:7358   */\n      dup2\n        /* \"#utility.yul\":7296:7359   */\n      tag_552\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":7291:7294   */\n      dup3\n        /* \"#utility.yul\":7284:7360   */\n      mstore\n        /* \"#utility.yul\":7274:7366   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7372:7557   */\n    tag_553:\n        /* \"#utility.yul\":7486:7550   */\n      tag_555\n        /* \"#utility.yul\":7544:7549   */\n      dup2\n        /* \"#utility.yul\":7486:7550   */\n      tag_556\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":7481:7484   */\n      dup3\n        /* \"#utility.yul\":7474:7551   */\n      mstore\n        /* \"#utility.yul\":7464:7557   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7563:7927   */\n    tag_557:\n      0x00\n        /* \"#utility.yul\":7679:7718   */\n      tag_559\n        /* \"#utility.yul\":7712:7717   */\n      dup3\n        /* \"#utility.yul\":7679:7718   */\n      tag_560\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":7734:7805   */\n      tag_561\n        /* \"#utility.yul\":7798:7804   */\n      dup2\n        /* \"#utility.yul\":7793:7796   */\n      dup6\n        /* \"#utility.yul\":7734:7805   */\n      tag_562\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":7727:7805   */\n      swap4\n      pop\n        /* \"#utility.yul\":7814:7866   */\n      tag_563\n        /* \"#utility.yul\":7859:7865   */\n      dup2\n        /* \"#utility.yul\":7854:7857   */\n      dup6\n        /* \"#utility.yul\":7847:7851   */\n      0x20\n        /* \"#utility.yul\":7840:7845   */\n      dup7\n        /* \"#utility.yul\":7836:7852   */\n      add\n        /* \"#utility.yul\":7814:7866   */\n      tag_540\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":7891:7920   */\n      tag_564\n        /* \"#utility.yul\":7913:7919   */\n      dup2\n        /* \"#utility.yul\":7891:7920   */\n      tag_565\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":7886:7889   */\n      dup5\n        /* \"#utility.yul\":7882:7921   */\n      add\n        /* \"#utility.yul\":7875:7921   */\n      swap2\n      pop\n        /* \"#utility.yul\":7655:7927   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7933:8303   */\n    tag_566:\n      0x00\n        /* \"#utility.yul\":8096:8163   */\n      tag_568\n        /* \"#utility.yul\":8160:8162   */\n      0x26\n        /* \"#utility.yul\":8155:8158   */\n      dup4\n        /* \"#utility.yul\":8096:8163   */\n      tag_562\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":8089:8163   */\n      swap2\n      pop\n        /* \"#utility.yul\":8193:8227   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8189:8190   */\n      0x00\n        /* \"#utility.yul\":8184:8187   */\n      dup4\n        /* \"#utility.yul\":8180:8191   */\n      add\n        /* \"#utility.yul\":8173:8228   */\n      mstore\n        /* \"#utility.yul\":8259:8267   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8254:8256   */\n      0x20\n        /* \"#utility.yul\":8249:8252   */\n      dup4\n        /* \"#utility.yul\":8245:8257   */\n      add\n        /* \"#utility.yul\":8238:8268   */\n      mstore\n        /* \"#utility.yul\":8294:8296   */\n      0x40\n        /* \"#utility.yul\":8289:8292   */\n      dup3\n        /* \"#utility.yul\":8285:8297   */\n      add\n        /* \"#utility.yul\":8278:8297   */\n      swap1\n      pop\n        /* \"#utility.yul\":8079:8303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8309:8677   */\n    tag_569:\n      0x00\n        /* \"#utility.yul\":8472:8539   */\n      tag_571\n        /* \"#utility.yul\":8536:8538   */\n      0x24\n        /* \"#utility.yul\":8531:8534   */\n      dup4\n        /* \"#utility.yul\":8472:8539   */\n      tag_562\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":8465:8539   */\n      swap2\n      pop\n        /* \"#utility.yul\":8569:8603   */\n      0x6578656375746f723a2063616c6c6572206973206e6f74207468652065786563\n        /* \"#utility.yul\":8565:8566   */\n      0x00\n        /* \"#utility.yul\":8560:8563   */\n      dup4\n        /* \"#utility.yul\":8556:8567   */\n      add\n        /* \"#utility.yul\":8549:8604   */\n      mstore\n        /* \"#utility.yul\":8635:8641   */\n      0x75746f7200000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8630:8632   */\n      0x20\n        /* \"#utility.yul\":8625:8628   */\n      dup4\n        /* \"#utility.yul\":8621:8633   */\n      add\n        /* \"#utility.yul\":8614:8642   */\n      mstore\n        /* \"#utility.yul\":8668:8670   */\n      0x40\n        /* \"#utility.yul\":8663:8666   */\n      dup3\n        /* \"#utility.yul\":8659:8671   */\n      add\n        /* \"#utility.yul\":8652:8671   */\n      swap1\n      pop\n        /* \"#utility.yul\":8455:8677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8683:9053   */\n    tag_572:\n      0x00\n        /* \"#utility.yul\":8846:8913   */\n      tag_574\n        /* \"#utility.yul\":8910:8912   */\n      0x26\n        /* \"#utility.yul\":8905:8908   */\n      dup4\n        /* \"#utility.yul\":8846:8913   */\n      tag_562\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":8839:8913   */\n      swap2\n      pop\n        /* \"#utility.yul\":8943:8977   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":8939:8940   */\n      0x00\n        /* \"#utility.yul\":8934:8937   */\n      dup4\n        /* \"#utility.yul\":8930:8941   */\n      add\n        /* \"#utility.yul\":8923:8978   */\n      mstore\n        /* \"#utility.yul\":9009:9017   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9004:9006   */\n      0x20\n        /* \"#utility.yul\":8999:9002   */\n      dup4\n        /* \"#utility.yul\":8995:9007   */\n      add\n        /* \"#utility.yul\":8988:9018   */\n      mstore\n        /* \"#utility.yul\":9044:9046   */\n      0x40\n        /* \"#utility.yul\":9039:9042   */\n      dup3\n        /* \"#utility.yul\":9035:9047   */\n      add\n        /* \"#utility.yul\":9028:9047   */\n      swap1\n      pop\n        /* \"#utility.yul\":8829:9053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9059:9437   */\n    tag_575:\n      0x00\n        /* \"#utility.yul\":9222:9289   */\n      tag_577\n        /* \"#utility.yul\":9286:9288   */\n      0x2e\n        /* \"#utility.yul\":9281:9284   */\n      dup4\n        /* \"#utility.yul\":9222:9289   */\n      tag_562\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":9215:9289   */\n      swap2\n      pop\n        /* \"#utility.yul\":9319:9353   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":9315:9316   */\n      0x00\n        /* \"#utility.yul\":9310:9313   */\n      dup4\n        /* \"#utility.yul\":9306:9317   */\n      add\n        /* \"#utility.yul\":9299:9354   */\n      mstore\n        /* \"#utility.yul\":9385:9401   */\n      0x647920696e697469616c697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":9380:9382   */\n      0x20\n        /* \"#utility.yul\":9375:9378   */\n      dup4\n        /* \"#utility.yul\":9371:9383   */\n      add\n        /* \"#utility.yul\":9364:9402   */\n      mstore\n        /* \"#utility.yul\":9428:9430   */\n      0x40\n        /* \"#utility.yul\":9423:9426   */\n      dup3\n        /* \"#utility.yul\":9419:9431   */\n      add\n        /* \"#utility.yul\":9412:9431   */\n      swap1\n      pop\n        /* \"#utility.yul\":9205:9437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9443:9773   */\n    tag_578:\n      0x00\n        /* \"#utility.yul\":9606:9673   */\n      tag_580\n        /* \"#utility.yul\":9670:9672   */\n      0x20\n        /* \"#utility.yul\":9665:9668   */\n      dup4\n        /* \"#utility.yul\":9606:9673   */\n      tag_562\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":9599:9673   */\n      swap2\n      pop\n        /* \"#utility.yul\":9703:9737   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9699:9700   */\n      0x00\n        /* \"#utility.yul\":9694:9697   */\n      dup4\n        /* \"#utility.yul\":9690:9701   */\n      add\n        /* \"#utility.yul\":9683:9738   */\n      mstore\n        /* \"#utility.yul\":9764:9766   */\n      0x20\n        /* \"#utility.yul\":9759:9762   */\n      dup3\n        /* \"#utility.yul\":9755:9767   */\n      add\n        /* \"#utility.yul\":9748:9767   */\n      swap1\n      pop\n        /* \"#utility.yul\":9589:9773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9779:10106   */\n    tag_581:\n      0x00\n        /* \"#utility.yul\":9942:10009   */\n      tag_583\n        /* \"#utility.yul\":10006:10008   */\n      0x1d\n        /* \"#utility.yul\":10001:10004   */\n      dup4\n        /* \"#utility.yul\":9942:10009   */\n      tag_562\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":9935:10009   */\n      swap2\n      pop\n        /* \"#utility.yul\":10039:10070   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":10035:10036   */\n      0x00\n        /* \"#utility.yul\":10030:10033   */\n      dup4\n        /* \"#utility.yul\":10026:10037   */\n      add\n        /* \"#utility.yul\":10019:10071   */\n      mstore\n        /* \"#utility.yul\":10097:10099   */\n      0x20\n        /* \"#utility.yul\":10092:10095   */\n      dup3\n        /* \"#utility.yul\":10088:10100   */\n      add\n        /* \"#utility.yul\":10081:10100   */\n      swap1\n      pop\n        /* \"#utility.yul\":9925:10106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10112:10486   */\n    tag_584:\n      0x00\n        /* \"#utility.yul\":10275:10342   */\n      tag_586\n        /* \"#utility.yul\":10339:10341   */\n      0x2a\n        /* \"#utility.yul\":10334:10337   */\n      dup4\n        /* \"#utility.yul\":10275:10342   */\n      tag_562\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":10268:10342   */\n      swap2\n      pop\n        /* \"#utility.yul\":10372:10406   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":10368:10369   */\n      0x00\n        /* \"#utility.yul\":10363:10366   */\n      dup4\n        /* \"#utility.yul\":10359:10370   */\n      add\n        /* \"#utility.yul\":10352:10407   */\n      mstore\n        /* \"#utility.yul\":10438:10450   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10433:10435   */\n      0x20\n        /* \"#utility.yul\":10428:10431   */\n      dup4\n        /* \"#utility.yul\":10424:10436   */\n      add\n        /* \"#utility.yul\":10417:10451   */\n      mstore\n        /* \"#utility.yul\":10477:10479   */\n      0x40\n        /* \"#utility.yul\":10472:10475   */\n      dup3\n        /* \"#utility.yul\":10468:10480   */\n      add\n        /* \"#utility.yul\":10461:10480   */\n      swap1\n      pop\n        /* \"#utility.yul\":10258:10486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10492:10610   */\n    tag_587:\n        /* \"#utility.yul\":10579:10603   */\n      tag_589\n        /* \"#utility.yul\":10597:10602   */\n      dup2\n        /* \"#utility.yul\":10579:10603   */\n      tag_590\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":10574:10577   */\n      dup3\n        /* \"#utility.yul\":10567:10604   */\n      mstore\n        /* \"#utility.yul\":10557:10610   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10616:10887   */\n    tag_432:\n      0x00\n        /* \"#utility.yul\":10768:10861   */\n      tag_592\n        /* \"#utility.yul\":10857:10860   */\n      dup3\n        /* \"#utility.yul\":10848:10854   */\n      dup5\n        /* \"#utility.yul\":10768:10861   */\n      tag_533\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":10761:10861   */\n      swap2\n      pop\n        /* \"#utility.yul\":10878:10881   */\n      dup2\n        /* \"#utility.yul\":10871:10881   */\n      swap1\n      pop\n        /* \"#utility.yul\":10750:10887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10893:11115   */\n    tag_116:\n      0x00\n        /* \"#utility.yul\":11024:11026   */\n      0x20\n        /* \"#utility.yul\":11013:11022   */\n      dup3\n        /* \"#utility.yul\":11009:11027   */\n      add\n        /* \"#utility.yul\":11001:11027   */\n      swap1\n      pop\n        /* \"#utility.yul\":11037:11108   */\n      tag_594\n        /* \"#utility.yul\":11105:11106   */\n      0x00\n        /* \"#utility.yul\":11094:11103   */\n      dup4\n        /* \"#utility.yul\":11090:11107   */\n      add\n        /* \"#utility.yul\":11081:11087   */\n      dup5\n        /* \"#utility.yul\":11037:11108   */\n      tag_525\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":10991:11115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11121:11453   */\n    tag_358:\n      0x00\n        /* \"#utility.yul\":11280:11282   */\n      0x40\n        /* \"#utility.yul\":11269:11278   */\n      dup3\n        /* \"#utility.yul\":11265:11283   */\n      add\n        /* \"#utility.yul\":11257:11283   */\n      swap1\n      pop\n        /* \"#utility.yul\":11293:11364   */\n      tag_596\n        /* \"#utility.yul\":11361:11362   */\n      0x00\n        /* \"#utility.yul\":11350:11359   */\n      dup4\n        /* \"#utility.yul\":11346:11363   */\n      add\n        /* \"#utility.yul\":11337:11343   */\n      dup6\n        /* \"#utility.yul\":11293:11364   */\n      tag_525\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":11374:11446   */\n      tag_597\n        /* \"#utility.yul\":11442:11444   */\n      0x20\n        /* \"#utility.yul\":11431:11440   */\n      dup4\n        /* \"#utility.yul\":11427:11445   */\n      add\n        /* \"#utility.yul\":11418:11424   */\n      dup5\n        /* \"#utility.yul\":11374:11446   */\n      tag_525\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":11247:11453   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11459:11791   */\n    tag_345:\n      0x00\n        /* \"#utility.yul\":11618:11620   */\n      0x40\n        /* \"#utility.yul\":11607:11616   */\n      dup3\n        /* \"#utility.yul\":11603:11621   */\n      add\n        /* \"#utility.yul\":11595:11621   */\n      swap1\n      pop\n        /* \"#utility.yul\":11631:11702   */\n      tag_599\n        /* \"#utility.yul\":11699:11700   */\n      0x00\n        /* \"#utility.yul\":11688:11697   */\n      dup4\n        /* \"#utility.yul\":11684:11701   */\n      add\n        /* \"#utility.yul\":11675:11681   */\n      dup6\n        /* \"#utility.yul\":11631:11702   */\n      tag_525\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":11712:11784   */\n      tag_600\n        /* \"#utility.yul\":11780:11782   */\n      0x20\n        /* \"#utility.yul\":11769:11778   */\n      dup4\n        /* \"#utility.yul\":11765:11783   */\n      add\n        /* \"#utility.yul\":11756:11762   */\n      dup5\n        /* \"#utility.yul\":11712:11784   */\n      tag_587\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":11585:11791   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11797:12007   */\n    tag_56:\n      0x00\n        /* \"#utility.yul\":11922:11924   */\n      0x20\n        /* \"#utility.yul\":11911:11920   */\n      dup3\n        /* \"#utility.yul\":11907:11925   */\n      add\n        /* \"#utility.yul\":11899:11925   */\n      swap1\n      pop\n        /* \"#utility.yul\":11935:12000   */\n      tag_602\n        /* \"#utility.yul\":11997:11998   */\n      0x00\n        /* \"#utility.yul\":11986:11995   */\n      dup4\n        /* \"#utility.yul\":11982:11999   */\n      add\n        /* \"#utility.yul\":11973:11979   */\n      dup5\n        /* \"#utility.yul\":11935:12000   */\n      tag_529\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":11889:12007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12013:12285   */\n    tag_72:\n      0x00\n        /* \"#utility.yul\":12169:12171   */\n      0x20\n        /* \"#utility.yul\":12158:12167   */\n      dup3\n        /* \"#utility.yul\":12154:12172   */\n      add\n        /* \"#utility.yul\":12146:12172   */\n      swap1\n      pop\n        /* \"#utility.yul\":12182:12278   */\n      tag_604\n        /* \"#utility.yul\":12275:12276   */\n      0x00\n        /* \"#utility.yul\":12264:12273   */\n      dup4\n        /* \"#utility.yul\":12260:12277   */\n      add\n        /* \"#utility.yul\":12251:12257   */\n      dup5\n        /* \"#utility.yul\":12182:12278   */\n      tag_541\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":12136:12285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12291:12541   */\n    tag_80:\n      0x00\n        /* \"#utility.yul\":12436:12438   */\n      0x20\n        /* \"#utility.yul\":12425:12434   */\n      dup3\n        /* \"#utility.yul\":12421:12439   */\n      add\n        /* \"#utility.yul\":12413:12439   */\n      swap1\n      pop\n        /* \"#utility.yul\":12449:12534   */\n      tag_606\n        /* \"#utility.yul\":12531:12532   */\n      0x00\n        /* \"#utility.yul\":12520:12529   */\n      dup4\n        /* \"#utility.yul\":12516:12533   */\n      add\n        /* \"#utility.yul\":12507:12513   */\n      dup5\n        /* \"#utility.yul\":12449:12534   */\n      tag_545\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":12403:12541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12547:12821   */\n    tag_156:\n      0x00\n        /* \"#utility.yul\":12704:12706   */\n      0x20\n        /* \"#utility.yul\":12693:12702   */\n      dup3\n        /* \"#utility.yul\":12689:12707   */\n      add\n        /* \"#utility.yul\":12681:12707   */\n      swap1\n      pop\n        /* \"#utility.yul\":12717:12814   */\n      tag_608\n        /* \"#utility.yul\":12811:12812   */\n      0x00\n        /* \"#utility.yul\":12800:12809   */\n      dup4\n        /* \"#utility.yul\":12796:12813   */\n      add\n        /* \"#utility.yul\":12787:12793   */\n      dup5\n        /* \"#utility.yul\":12717:12814   */\n      tag_549\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":12671:12821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12827:13103   */\n    tag_185:\n      0x00\n        /* \"#utility.yul\":12985:12987   */\n      0x20\n        /* \"#utility.yul\":12974:12983   */\n      dup3\n        /* \"#utility.yul\":12970:12988   */\n      add\n        /* \"#utility.yul\":12962:12988   */\n      swap1\n      pop\n        /* \"#utility.yul\":12998:13096   */\n      tag_610\n        /* \"#utility.yul\":13093:13094   */\n      0x00\n        /* \"#utility.yul\":13082:13091   */\n      dup4\n        /* \"#utility.yul\":13078:13095   */\n      add\n        /* \"#utility.yul\":13069:13075   */\n      dup5\n        /* \"#utility.yul\":12998:13096   */\n      tag_553\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":12952:13103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13109:13422   */\n    tag_445:\n      0x00\n        /* \"#utility.yul\":13260:13262   */\n      0x20\n        /* \"#utility.yul\":13249:13258   */\n      dup3\n        /* \"#utility.yul\":13245:13263   */\n      add\n        /* \"#utility.yul\":13237:13263   */\n      swap1\n      pop\n        /* \"#utility.yul\":13309:13318   */\n      dup2\n        /* \"#utility.yul\":13303:13307   */\n      dup2\n        /* \"#utility.yul\":13299:13319   */\n      sub\n        /* \"#utility.yul\":13295:13296   */\n      0x00\n        /* \"#utility.yul\":13284:13293   */\n      dup4\n        /* \"#utility.yul\":13280:13297   */\n      add\n        /* \"#utility.yul\":13273:13320   */\n      mstore\n        /* \"#utility.yul\":13337:13415   */\n      tag_612\n        /* \"#utility.yul\":13410:13414   */\n      dup2\n        /* \"#utility.yul\":13401:13407   */\n      dup5\n        /* \"#utility.yul\":13337:13415   */\n      tag_557\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":13329:13415   */\n      swap1\n      pop\n        /* \"#utility.yul\":13227:13422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13428:13847   */\n    tag_327:\n      0x00\n        /* \"#utility.yul\":13632:13634   */\n      0x20\n        /* \"#utility.yul\":13621:13630   */\n      dup3\n        /* \"#utility.yul\":13617:13635   */\n      add\n        /* \"#utility.yul\":13609:13635   */\n      swap1\n      pop\n        /* \"#utility.yul\":13681:13690   */\n      dup2\n        /* \"#utility.yul\":13675:13679   */\n      dup2\n        /* \"#utility.yul\":13671:13691   */\n      sub\n        /* \"#utility.yul\":13667:13668   */\n      0x00\n        /* \"#utility.yul\":13656:13665   */\n      dup4\n        /* \"#utility.yul\":13652:13669   */\n      add\n        /* \"#utility.yul\":13645:13692   */\n      mstore\n        /* \"#utility.yul\":13709:13840   */\n      tag_614\n        /* \"#utility.yul\":13835:13839   */\n      dup2\n        /* \"#utility.yul\":13709:13840   */\n      tag_566\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":13701:13840   */\n      swap1\n      pop\n        /* \"#utility.yul\":13599:13847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13853:14272   */\n    tag_272:\n      0x00\n        /* \"#utility.yul\":14057:14059   */\n      0x20\n        /* \"#utility.yul\":14046:14055   */\n      dup3\n        /* \"#utility.yul\":14042:14060   */\n      add\n        /* \"#utility.yul\":14034:14060   */\n      swap1\n      pop\n        /* \"#utility.yul\":14106:14115   */\n      dup2\n        /* \"#utility.yul\":14100:14104   */\n      dup2\n        /* \"#utility.yul\":14096:14116   */\n      sub\n        /* \"#utility.yul\":14092:14093   */\n      0x00\n        /* \"#utility.yul\":14081:14090   */\n      dup4\n        /* \"#utility.yul\":14077:14094   */\n      add\n        /* \"#utility.yul\":14070:14117   */\n      mstore\n        /* \"#utility.yul\":14134:14265   */\n      tag_616\n        /* \"#utility.yul\":14260:14264   */\n      dup2\n        /* \"#utility.yul\":14134:14265   */\n      tag_569\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":14126:14265   */\n      swap1\n      pop\n        /* \"#utility.yul\":14024:14272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14278:14697   */\n    tag_425:\n      0x00\n        /* \"#utility.yul\":14482:14484   */\n      0x20\n        /* \"#utility.yul\":14471:14480   */\n      dup3\n        /* \"#utility.yul\":14467:14485   */\n      add\n        /* \"#utility.yul\":14459:14485   */\n      swap1\n      pop\n        /* \"#utility.yul\":14531:14540   */\n      dup2\n        /* \"#utility.yul\":14525:14529   */\n      dup2\n        /* \"#utility.yul\":14521:14541   */\n      sub\n        /* \"#utility.yul\":14517:14518   */\n      0x00\n        /* \"#utility.yul\":14506:14515   */\n      dup4\n        /* \"#utility.yul\":14502:14519   */\n      add\n        /* \"#utility.yul\":14495:14542   */\n      mstore\n        /* \"#utility.yul\":14559:14690   */\n      tag_618\n        /* \"#utility.yul\":14685:14689   */\n      dup2\n        /* \"#utility.yul\":14559:14690   */\n      tag_572\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":14551:14690   */\n      swap1\n      pop\n        /* \"#utility.yul\":14449:14697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14703:15122   */\n    tag_210:\n      0x00\n        /* \"#utility.yul\":14907:14909   */\n      0x20\n        /* \"#utility.yul\":14896:14905   */\n      dup3\n        /* \"#utility.yul\":14892:14910   */\n      add\n        /* \"#utility.yul\":14884:14910   */\n      swap1\n      pop\n        /* \"#utility.yul\":14956:14965   */\n      dup2\n        /* \"#utility.yul\":14950:14954   */\n      dup2\n        /* \"#utility.yul\":14946:14966   */\n      sub\n        /* \"#utility.yul\":14942:14943   */\n      0x00\n        /* \"#utility.yul\":14931:14940   */\n      dup4\n        /* \"#utility.yul\":14927:14944   */\n      add\n        /* \"#utility.yul\":14920:14967   */\n      mstore\n        /* \"#utility.yul\":14984:15115   */\n      tag_620\n        /* \"#utility.yul\":15110:15114   */\n      dup2\n        /* \"#utility.yul\":14984:15115   */\n      tag_575\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":14976:15115   */\n      swap1\n      pop\n        /* \"#utility.yul\":14874:15122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15128:15547   */\n    tag_192:\n      0x00\n        /* \"#utility.yul\":15332:15334   */\n      0x20\n        /* \"#utility.yul\":15321:15330   */\n      dup3\n        /* \"#utility.yul\":15317:15335   */\n      add\n        /* \"#utility.yul\":15309:15335   */\n      swap1\n      pop\n        /* \"#utility.yul\":15381:15390   */\n      dup2\n        /* \"#utility.yul\":15375:15379   */\n      dup2\n        /* \"#utility.yul\":15371:15391   */\n      sub\n        /* \"#utility.yul\":15367:15368   */\n      0x00\n        /* \"#utility.yul\":15356:15365   */\n      dup4\n        /* \"#utility.yul\":15352:15369   */\n      add\n        /* \"#utility.yul\":15345:15392   */\n      mstore\n        /* \"#utility.yul\":15409:15540   */\n      tag_622\n        /* \"#utility.yul\":15535:15539   */\n      dup2\n        /* \"#utility.yul\":15409:15540   */\n      tag_578\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":15401:15540   */\n      swap1\n      pop\n        /* \"#utility.yul\":15299:15547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15553:15972   */\n    tag_430:\n      0x00\n        /* \"#utility.yul\":15757:15759   */\n      0x20\n        /* \"#utility.yul\":15746:15755   */\n      dup3\n        /* \"#utility.yul\":15742:15760   */\n      add\n        /* \"#utility.yul\":15734:15760   */\n      swap1\n      pop\n        /* \"#utility.yul\":15806:15815   */\n      dup2\n        /* \"#utility.yul\":15800:15804   */\n      dup2\n        /* \"#utility.yul\":15796:15816   */\n      sub\n        /* \"#utility.yul\":15792:15793   */\n      0x00\n        /* \"#utility.yul\":15781:15790   */\n      dup4\n        /* \"#utility.yul\":15777:15794   */\n      add\n        /* \"#utility.yul\":15770:15817   */\n      mstore\n        /* \"#utility.yul\":15834:15965   */\n      tag_624\n        /* \"#utility.yul\":15960:15964   */\n      dup2\n        /* \"#utility.yul\":15834:15965   */\n      tag_581\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":15826:15965   */\n      swap1\n      pop\n        /* \"#utility.yul\":15724:15972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15978:16397   */\n    tag_415:\n      0x00\n        /* \"#utility.yul\":16182:16184   */\n      0x20\n        /* \"#utility.yul\":16171:16180   */\n      dup3\n        /* \"#utility.yul\":16167:16185   */\n      add\n        /* \"#utility.yul\":16159:16185   */\n      swap1\n      pop\n        /* \"#utility.yul\":16231:16240   */\n      dup2\n        /* \"#utility.yul\":16225:16229   */\n      dup2\n        /* \"#utility.yul\":16221:16241   */\n      sub\n        /* \"#utility.yul\":16217:16218   */\n      0x00\n        /* \"#utility.yul\":16206:16215   */\n      dup4\n        /* \"#utility.yul\":16202:16219   */\n      add\n        /* \"#utility.yul\":16195:16242   */\n      mstore\n        /* \"#utility.yul\":16259:16390   */\n      tag_626\n        /* \"#utility.yul\":16385:16389   */\n      dup2\n        /* \"#utility.yul\":16259:16390   */\n      tag_584\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":16251:16390   */\n      swap1\n      pop\n        /* \"#utility.yul\":16149:16397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16403:16625   */\n    tag_50:\n      0x00\n        /* \"#utility.yul\":16534:16536   */\n      0x20\n        /* \"#utility.yul\":16523:16532   */\n      dup3\n        /* \"#utility.yul\":16519:16537   */\n      add\n        /* \"#utility.yul\":16511:16537   */\n      swap1\n      pop\n        /* \"#utility.yul\":16547:16618   */\n      tag_628\n        /* \"#utility.yul\":16615:16616   */\n      0x00\n        /* \"#utility.yul\":16604:16613   */\n      dup4\n        /* \"#utility.yul\":16600:16617   */\n      add\n        /* \"#utility.yul\":16591:16597   */\n      dup5\n        /* \"#utility.yul\":16547:16618   */\n      tag_587\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":16501:16625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16631:17061   */\n    tag_388:\n      0x00\n        /* \"#utility.yul\":16812:16814   */\n      0x60\n        /* \"#utility.yul\":16801:16810   */\n      dup3\n        /* \"#utility.yul\":16797:16815   */\n      add\n        /* \"#utility.yul\":16789:16815   */\n      swap1\n      pop\n        /* \"#utility.yul\":16825:16896   */\n      tag_630\n        /* \"#utility.yul\":16893:16894   */\n      0x00\n        /* \"#utility.yul\":16882:16891   */\n      dup4\n        /* \"#utility.yul\":16878:16895   */\n      add\n        /* \"#utility.yul\":16869:16875   */\n      dup7\n        /* \"#utility.yul\":16825:16896   */\n      tag_587\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":16906:16978   */\n      tag_631\n        /* \"#utility.yul\":16974:16976   */\n      0x20\n        /* \"#utility.yul\":16963:16972   */\n      dup4\n        /* \"#utility.yul\":16959:16977   */\n      add\n        /* \"#utility.yul\":16950:16956   */\n      dup6\n        /* \"#utility.yul\":16906:16978   */\n      tag_587\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":16988:17054   */\n      tag_632\n        /* \"#utility.yul\":17050:17052   */\n      0x40\n        /* \"#utility.yul\":17039:17048   */\n      dup4\n        /* \"#utility.yul\":17035:17053   */\n      add\n        /* \"#utility.yul\":17026:17032   */\n      dup5\n        /* \"#utility.yul\":16988:17054   */\n      tag_529\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":16779:17061   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17067:17165   */\n    tag_536:\n      0x00\n        /* \"#utility.yul\":17152:17157   */\n      dup2\n        /* \"#utility.yul\":17146:17158   */\n      mload\n        /* \"#utility.yul\":17136:17158   */\n      swap1\n      pop\n        /* \"#utility.yul\":17125:17165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17171:17270   */\n    tag_560:\n      0x00\n        /* \"#utility.yul\":17257:17262   */\n      dup2\n        /* \"#utility.yul\":17251:17263   */\n      mload\n        /* \"#utility.yul\":17241:17263   */\n      swap1\n      pop\n        /* \"#utility.yul\":17230:17270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17276:17423   */\n    tag_538:\n      0x00\n        /* \"#utility.yul\":17414:17417   */\n      dup2\n        /* \"#utility.yul\":17399:17417   */\n      swap1\n      pop\n        /* \"#utility.yul\":17389:17423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17429:17598   */\n    tag_562:\n      0x00\n        /* \"#utility.yul\":17547:17553   */\n      dup3\n        /* \"#utility.yul\":17542:17545   */\n      dup3\n        /* \"#utility.yul\":17535:17554   */\n      mstore\n        /* \"#utility.yul\":17587:17591   */\n      0x20\n        /* \"#utility.yul\":17582:17585   */\n      dup3\n        /* \"#utility.yul\":17578:17592   */\n      add\n        /* \"#utility.yul\":17563:17592   */\n      swap1\n      pop\n        /* \"#utility.yul\":17525:17598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17604:17909   */\n    tag_418:\n      0x00\n        /* \"#utility.yul\":17663:17683   */\n      tag_638\n        /* \"#utility.yul\":17681:17682   */\n      dup3\n        /* \"#utility.yul\":17663:17683   */\n      tag_590\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":17658:17683   */\n      swap2\n      pop\n        /* \"#utility.yul\":17697:17717   */\n      tag_639\n        /* \"#utility.yul\":17715:17716   */\n      dup4\n        /* \"#utility.yul\":17697:17717   */\n      tag_590\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":17692:17717   */\n      swap3\n      pop\n        /* \"#utility.yul\":17851:17852   */\n      dup3\n        /* \"#utility.yul\":17783:17849   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17779:17853   */\n      sub\n        /* \"#utility.yul\":17776:17777   */\n      dup3\n        /* \"#utility.yul\":17773:17854   */\n      gt\n        /* \"#utility.yul\":17770:17772   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":17857:17875   */\n      tag_641\n      tag_642\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":17770:17772   */\n    tag_640:\n        /* \"#utility.yul\":17901:17902   */\n      dup3\n        /* \"#utility.yul\":17898:17899   */\n      dup3\n        /* \"#utility.yul\":17894:17903   */\n      add\n        /* \"#utility.yul\":17887:17903   */\n      swap1\n      pop\n        /* \"#utility.yul\":17648:17909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17915:18100   */\n    tag_352:\n      0x00\n        /* \"#utility.yul\":17972:17992   */\n      tag_644\n        /* \"#utility.yul\":17990:17991   */\n      dup3\n        /* \"#utility.yul\":17972:17992   */\n      tag_590\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":17967:17992   */\n      swap2\n      pop\n        /* \"#utility.yul\":18006:18026   */\n      tag_645\n        /* \"#utility.yul\":18024:18025   */\n      dup4\n        /* \"#utility.yul\":18006:18026   */\n      tag_590\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":18001:18026   */\n      swap3\n      pop\n        /* \"#utility.yul\":18045:18046   */\n      dup3\n        /* \"#utility.yul\":18035:18037   */\n      tag_646\n      jumpi\n        /* \"#utility.yul\":18050:18068   */\n      tag_647\n      tag_648\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":18035:18037   */\n    tag_646:\n        /* \"#utility.yul\":18092:18093   */\n      dup3\n        /* \"#utility.yul\":18089:18090   */\n      dup3\n        /* \"#utility.yul\":18085:18094   */\n      div\n        /* \"#utility.yul\":18080:18094   */\n      swap1\n      pop\n        /* \"#utility.yul\":17957:18100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18106:18454   */\n    tag_349:\n      0x00\n        /* \"#utility.yul\":18169:18189   */\n      tag_650\n        /* \"#utility.yul\":18187:18188   */\n      dup3\n        /* \"#utility.yul\":18169:18189   */\n      tag_590\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":18164:18189   */\n      swap2\n      pop\n        /* \"#utility.yul\":18203:18223   */\n      tag_651\n        /* \"#utility.yul\":18221:18222   */\n      dup4\n        /* \"#utility.yul\":18203:18223   */\n      tag_590\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":18198:18223   */\n      swap3\n      pop\n        /* \"#utility.yul\":18391:18392   */\n      dup2\n        /* \"#utility.yul\":18323:18389   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18319:18393   */\n      div\n        /* \"#utility.yul\":18316:18317   */\n      dup4\n        /* \"#utility.yul\":18313:18394   */\n      gt\n        /* \"#utility.yul\":18308:18309   */\n      dup3\n        /* \"#utility.yul\":18301:18310   */\n      iszero\n        /* \"#utility.yul\":18294:18311   */\n      iszero\n        /* \"#utility.yul\":18290:18395   */\n      and\n        /* \"#utility.yul\":18287:18289   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":18398:18416   */\n      tag_653\n      tag_642\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":18287:18289   */\n    tag_652:\n        /* \"#utility.yul\":18446:18447   */\n      dup3\n        /* \"#utility.yul\":18443:18444   */\n      dup3\n        /* \"#utility.yul\":18439:18448   */\n      mul\n        /* \"#utility.yul\":18428:18448   */\n      swap1\n      pop\n        /* \"#utility.yul\":18154:18454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18460:18651   */\n    tag_355:\n      0x00\n        /* \"#utility.yul\":18520:18540   */\n      tag_655\n        /* \"#utility.yul\":18538:18539   */\n      dup3\n        /* \"#utility.yul\":18520:18540   */\n      tag_590\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":18515:18540   */\n      swap2\n      pop\n        /* \"#utility.yul\":18554:18574   */\n      tag_656\n        /* \"#utility.yul\":18572:18573   */\n      dup4\n        /* \"#utility.yul\":18554:18574   */\n      tag_590\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":18549:18574   */\n      swap3\n      pop\n        /* \"#utility.yul\":18593:18594   */\n      dup3\n        /* \"#utility.yul\":18590:18591   */\n      dup3\n        /* \"#utility.yul\":18587:18595   */\n      lt\n        /* \"#utility.yul\":18584:18586   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":18598:18616   */\n      tag_658\n      tag_642\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":18584:18586   */\n    tag_657:\n        /* \"#utility.yul\":18643:18644   */\n      dup3\n        /* \"#utility.yul\":18640:18641   */\n      dup3\n        /* \"#utility.yul\":18636:18645   */\n      sub\n        /* \"#utility.yul\":18628:18645   */\n      swap1\n      pop\n        /* \"#utility.yul\":18505:18651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18657:18753   */\n    tag_528:\n      0x00\n        /* \"#utility.yul\":18723:18747   */\n      tag_660\n        /* \"#utility.yul\":18741:18746   */\n      dup3\n        /* \"#utility.yul\":18723:18747   */\n      tag_661\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":18712:18747   */\n      swap1\n      pop\n        /* \"#utility.yul\":18702:18753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18759:18849   */\n    tag_532:\n      0x00\n        /* \"#utility.yul\":18836:18841   */\n      dup2\n        /* \"#utility.yul\":18829:18842   */\n      iszero\n        /* \"#utility.yul\":18822:18843   */\n      iszero\n        /* \"#utility.yul\":18811:18843   */\n      swap1\n      pop\n        /* \"#utility.yul\":18801:18849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18855:18976   */\n    tag_663:\n      0x00\n        /* \"#utility.yul\":18946:18970   */\n      tag_665\n        /* \"#utility.yul\":18964:18969   */\n      dup3\n        /* \"#utility.yul\":18946:18970   */\n      tag_528\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":18935:18970   */\n      swap1\n      pop\n        /* \"#utility.yul\":18925:18976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18982:19092   */\n    tag_666:\n      0x00\n        /* \"#utility.yul\":19062:19086   */\n      tag_668\n        /* \"#utility.yul\":19080:19085   */\n      dup3\n        /* \"#utility.yul\":19062:19086   */\n      tag_528\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":19051:19086   */\n      swap1\n      pop\n        /* \"#utility.yul\":19041:19092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19098:19220   */\n    tag_669:\n      0x00\n        /* \"#utility.yul\":19190:19214   */\n      tag_671\n        /* \"#utility.yul\":19208:19213   */\n      dup3\n        /* \"#utility.yul\":19190:19214   */\n      tag_528\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":19179:19214   */\n      swap1\n      pop\n        /* \"#utility.yul\":19169:19220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19226:19349   */\n    tag_672:\n      0x00\n        /* \"#utility.yul\":19319:19343   */\n      tag_674\n        /* \"#utility.yul\":19337:19342   */\n      dup3\n        /* \"#utility.yul\":19319:19343   */\n      tag_528\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":19308:19343   */\n      swap1\n      pop\n        /* \"#utility.yul\":19298:19349   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19355:19481   */\n    tag_661:\n      0x00\n        /* \"#utility.yul\":19432:19474   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19425:19430   */\n      dup3\n        /* \"#utility.yul\":19421:19475   */\n      and\n        /* \"#utility.yul\":19410:19475   */\n      swap1\n      pop\n        /* \"#utility.yul\":19400:19481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19487:19564   */\n    tag_590:\n      0x00\n        /* \"#utility.yul\":19553:19558   */\n      dup2\n        /* \"#utility.yul\":19542:19558   */\n      swap1\n      pop\n        /* \"#utility.yul\":19532:19564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19570:19746   */\n    tag_544:\n      0x00\n        /* \"#utility.yul\":19678:19740   */\n      tag_678\n        /* \"#utility.yul\":19734:19739   */\n      dup3\n        /* \"#utility.yul\":19678:19740   */\n      tag_679\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":19665:19740   */\n      swap1\n      pop\n        /* \"#utility.yul\":19655:19746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19752:19890   */\n    tag_679:\n      0x00\n        /* \"#utility.yul\":19860:19884   */\n      tag_681\n        /* \"#utility.yul\":19878:19883   */\n      dup3\n        /* \"#utility.yul\":19860:19884   */\n      tag_661\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":19847:19884   */\n      swap1\n      pop\n        /* \"#utility.yul\":19837:19890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19896:20050   */\n    tag_548:\n      0x00\n        /* \"#utility.yul\":19993:20044   */\n      tag_683\n        /* \"#utility.yul\":20038:20043   */\n      dup3\n        /* \"#utility.yul\":19993:20044   */\n      tag_684\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":19980:20044   */\n      swap1\n      pop\n        /* \"#utility.yul\":19970:20050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20056:20183   */\n    tag_684:\n      0x00\n        /* \"#utility.yul\":20153:20177   */\n      tag_686\n        /* \"#utility.yul\":20171:20176   */\n      dup3\n        /* \"#utility.yul\":20153:20177   */\n      tag_661\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":20140:20177   */\n      swap1\n      pop\n        /* \"#utility.yul\":20130:20183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20189:20367   */\n    tag_552:\n      0x00\n        /* \"#utility.yul\":20298:20361   */\n      tag_688\n        /* \"#utility.yul\":20355:20360   */\n      dup3\n        /* \"#utility.yul\":20298:20361   */\n      tag_689\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":20285:20361   */\n      swap1\n      pop\n        /* \"#utility.yul\":20275:20367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20373:20512   */\n    tag_689:\n      0x00\n        /* \"#utility.yul\":20482:20506   */\n      tag_691\n        /* \"#utility.yul\":20500:20505   */\n      dup3\n        /* \"#utility.yul\":20482:20506   */\n      tag_661\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":20469:20506   */\n      swap1\n      pop\n        /* \"#utility.yul\":20459:20512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20518:20698   */\n    tag_556:\n      0x00\n        /* \"#utility.yul\":20628:20692   */\n      tag_693\n        /* \"#utility.yul\":20686:20691   */\n      dup3\n        /* \"#utility.yul\":20628:20692   */\n      tag_694\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":20615:20692   */\n      swap1\n      pop\n        /* \"#utility.yul\":20605:20698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20704:20844   */\n    tag_694:\n      0x00\n        /* \"#utility.yul\":20814:20838   */\n      tag_696\n        /* \"#utility.yul\":20832:20837   */\n      dup3\n        /* \"#utility.yul\":20814:20838   */\n      tag_661\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":20801:20838   */\n      swap1\n      pop\n        /* \"#utility.yul\":20791:20844   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20850:21157   */\n    tag_540:\n        /* \"#utility.yul\":20918:20919   */\n      0x00\n        /* \"#utility.yul\":20928:21041   */\n    tag_698:\n        /* \"#utility.yul\":20942:20948   */\n      dup4\n        /* \"#utility.yul\":20939:20940   */\n      dup2\n        /* \"#utility.yul\":20936:20949   */\n      lt\n        /* \"#utility.yul\":20928:21041   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":21027:21028   */\n      dup1\n        /* \"#utility.yul\":21022:21025   */\n      dup3\n        /* \"#utility.yul\":21018:21029   */\n      add\n        /* \"#utility.yul\":21012:21030   */\n      mload\n        /* \"#utility.yul\":21008:21009   */\n      dup2\n        /* \"#utility.yul\":21003:21006   */\n      dup5\n        /* \"#utility.yul\":20999:21010   */\n      add\n        /* \"#utility.yul\":20992:21031   */\n      mstore\n        /* \"#utility.yul\":20964:20966   */\n      0x20\n        /* \"#utility.yul\":20961:20962   */\n      dup2\n        /* \"#utility.yul\":20957:20967   */\n      add\n        /* \"#utility.yul\":20952:20967   */\n      swap1\n      pop\n        /* \"#utility.yul\":20928:21041   */\n      jump(tag_698)\n    tag_700:\n        /* \"#utility.yul\":21059:21065   */\n      dup4\n        /* \"#utility.yul\":21056:21057   */\n      dup2\n        /* \"#utility.yul\":21053:21066   */\n      gt\n        /* \"#utility.yul\":21050:21052   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":21139:21140   */\n      0x00\n        /* \"#utility.yul\":21130:21136   */\n      dup5\n        /* \"#utility.yul\":21125:21128   */\n      dup5\n        /* \"#utility.yul\":21121:21137   */\n      add\n        /* \"#utility.yul\":21114:21141   */\n      mstore\n        /* \"#utility.yul\":21050:21052   */\n    tag_701:\n        /* \"#utility.yul\":20899:21157   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21163:21343   */\n    tag_642:\n        /* \"#utility.yul\":21211:21288   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21208:21209   */\n      0x00\n        /* \"#utility.yul\":21201:21289   */\n      mstore\n        /* \"#utility.yul\":21308:21312   */\n      0x11\n        /* \"#utility.yul\":21305:21306   */\n      0x04\n        /* \"#utility.yul\":21298:21313   */\n      mstore\n        /* \"#utility.yul\":21332:21336   */\n      0x24\n        /* \"#utility.yul\":21329:21330   */\n      0x00\n        /* \"#utility.yul\":21322:21337   */\n      revert\n        /* \"#utility.yul\":21349:21529   */\n    tag_648:\n        /* \"#utility.yul\":21397:21474   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21394:21395   */\n      0x00\n        /* \"#utility.yul\":21387:21475   */\n      mstore\n        /* \"#utility.yul\":21494:21498   */\n      0x12\n        /* \"#utility.yul\":21491:21492   */\n      0x04\n        /* \"#utility.yul\":21484:21499   */\n      mstore\n        /* \"#utility.yul\":21518:21522   */\n      0x24\n        /* \"#utility.yul\":21515:21516   */\n      0x00\n        /* \"#utility.yul\":21508:21523   */\n      revert\n        /* \"#utility.yul\":21535:21637   */\n    tag_565:\n      0x00\n        /* \"#utility.yul\":21627:21629   */\n      0x1f\n        /* \"#utility.yul\":21623:21630   */\n      not\n        /* \"#utility.yul\":21618:21620   */\n      0x1f\n        /* \"#utility.yul\":21611:21616   */\n      dup4\n        /* \"#utility.yul\":21607:21621   */\n      add\n        /* \"#utility.yul\":21603:21631   */\n      and\n        /* \"#utility.yul\":21593:21631   */\n      swap1\n      pop\n        /* \"#utility.yul\":21583:21637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21643:21765   */\n    tag_450:\n        /* \"#utility.yul\":21716:21740   */\n      tag_706\n        /* \"#utility.yul\":21734:21739   */\n      dup2\n        /* \"#utility.yul\":21716:21740   */\n      tag_528\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":21709:21714   */\n      dup2\n        /* \"#utility.yul\":21706:21741   */\n      eq\n        /* \"#utility.yul\":21696:21698   */\n      tag_707\n      jumpi\n        /* \"#utility.yul\":21755:21756   */\n      0x00\n        /* \"#utility.yul\":21752:21753   */\n      dup1\n        /* \"#utility.yul\":21745:21757   */\n      revert\n        /* \"#utility.yul\":21696:21698   */\n    tag_707:\n        /* \"#utility.yul\":21686:21765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21771:21887   */\n    tag_457:\n        /* \"#utility.yul\":21841:21862   */\n      tag_709\n        /* \"#utility.yul\":21856:21861   */\n      dup2\n        /* \"#utility.yul\":21841:21862   */\n      tag_532\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":21834:21839   */\n      dup2\n        /* \"#utility.yul\":21831:21863   */\n      eq\n        /* \"#utility.yul\":21821:21823   */\n      tag_710\n      jumpi\n        /* \"#utility.yul\":21877:21878   */\n      0x00\n        /* \"#utility.yul\":21874:21875   */\n      dup1\n        /* \"#utility.yul\":21867:21879   */\n      revert\n        /* \"#utility.yul\":21821:21823   */\n    tag_710:\n        /* \"#utility.yul\":21811:21887   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21893:22065   */\n    tag_464:\n        /* \"#utility.yul\":21991:22040   */\n      tag_712\n        /* \"#utility.yul\":22034:22039   */\n      dup2\n        /* \"#utility.yul\":21991:22040   */\n      tag_663\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":21984:21989   */\n      dup2\n        /* \"#utility.yul\":21981:22041   */\n      eq\n        /* \"#utility.yul\":21971:21973   */\n      tag_713\n      jumpi\n        /* \"#utility.yul\":22055:22056   */\n      0x00\n        /* \"#utility.yul\":22052:22053   */\n      dup1\n        /* \"#utility.yul\":22045:22057   */\n      revert\n        /* \"#utility.yul\":21971:21973   */\n    tag_713:\n        /* \"#utility.yul\":21961:22065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22071:22221   */\n    tag_468:\n        /* \"#utility.yul\":22158:22196   */\n      tag_715\n        /* \"#utility.yul\":22190:22195   */\n      dup2\n        /* \"#utility.yul\":22158:22196   */\n      tag_666\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":22151:22156   */\n      dup2\n        /* \"#utility.yul\":22148:22197   */\n      eq\n        /* \"#utility.yul\":22138:22140   */\n      tag_716\n      jumpi\n        /* \"#utility.yul\":22211:22212   */\n      0x00\n        /* \"#utility.yul\":22208:22209   */\n      dup1\n        /* \"#utility.yul\":22201:22213   */\n      revert\n        /* \"#utility.yul\":22138:22140   */\n    tag_716:\n        /* \"#utility.yul\":22128:22221   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22227:22401   */\n    tag_472:\n        /* \"#utility.yul\":22326:22376   */\n      tag_718\n        /* \"#utility.yul\":22370:22375   */\n      dup2\n        /* \"#utility.yul\":22326:22376   */\n      tag_669\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":22319:22324   */\n      dup2\n        /* \"#utility.yul\":22316:22377   */\n      eq\n        /* \"#utility.yul\":22306:22308   */\n      tag_719\n      jumpi\n        /* \"#utility.yul\":22391:22392   */\n      0x00\n        /* \"#utility.yul\":22388:22389   */\n      dup1\n        /* \"#utility.yul\":22381:22393   */\n      revert\n        /* \"#utility.yul\":22306:22308   */\n    tag_719:\n        /* \"#utility.yul\":22296:22401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22407:22583   */\n    tag_476:\n        /* \"#utility.yul\":22507:22558   */\n      tag_721\n        /* \"#utility.yul\":22552:22557   */\n      dup2\n        /* \"#utility.yul\":22507:22558   */\n      tag_672\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":22500:22505   */\n      dup2\n        /* \"#utility.yul\":22497:22559   */\n      eq\n        /* \"#utility.yul\":22487:22489   */\n      tag_722\n      jumpi\n        /* \"#utility.yul\":22573:22574   */\n      0x00\n        /* \"#utility.yul\":22570:22571   */\n      dup1\n        /* \"#utility.yul\":22563:22575   */\n      revert\n        /* \"#utility.yul\":22487:22489   */\n    tag_722:\n        /* \"#utility.yul\":22477:22583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22589:22711   */\n    tag_480:\n        /* \"#utility.yul\":22662:22686   */\n      tag_724\n        /* \"#utility.yul\":22680:22685   */\n      dup2\n        /* \"#utility.yul\":22662:22686   */\n      tag_590\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":22655:22660   */\n      dup2\n        /* \"#utility.yul\":22652:22687   */\n      eq\n        /* \"#utility.yul\":22642:22644   */\n      tag_725\n      jumpi\n        /* \"#utility.yul\":22701:22702   */\n      0x00\n        /* \"#utility.yul\":22698:22699   */\n      dup1\n        /* \"#utility.yul\":22691:22703   */\n      revert\n        /* \"#utility.yul\":22642:22644   */\n    tag_725:\n        /* \"#utility.yul\":22632:22711   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fd248191e56cc7b8697ff9d7d4c9dee6ca8abca04fa6d345ee1147d71bc7f80764736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506132d5806100206000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80638da5cb5b11610130578063bd0b1f44116100b8578063db7f521a1161007c578063db7f521a146106c0578063ec1f1f69146106f0578063f10684541461070e578063f2fde38b1461072c578063f6d7eade1461074857610227565b8063bd0b1f4414610606578063c83dd23114610624578063d10c06a214610642578063d477f05f14610660578063d4f26c511461069057610227565b8063a36a7526116100ff578063a36a75261461053a578063aaf5bfc31461056a578063aaf5eb681461059a578063af5518c4146105b8578063b8bb97a1146105e857610227565b80638da5cb5b146104b057806391cca3db146104ce578063930ed033146104ec5780639da5b0d51461051c57610227565b80633e413bee116101b35780634ecaac41116101825780634ecaac411461041c57806355c746d11461043a57806358de5de81461046a578063715018a6146104885780637e47961c1461049257610227565b80633e413bee146103805780634591db501461039e57806348c7e528146103ce5780634ae6a027146103fe57610227565b80632c535a52116101fa5780632c535a52146102da5780633011d3d5146102f8578063358764761461031657806336e9332d146103325780633c850e1e1461035057610227565b806316d039931461022c5780631b0d8aab1461024a5780631e1bff3f1461027a57806327c42a50146102aa575b600080fd5b610234610766565b6040516102419190612ea3565b60405180910390f35b610264600480360381019061025f91906128f3565b61076c565b6040516102719190612d1a565b60405180910390f35b610294600480360381019061028f9190612739565b6107fa565b6040516102a19190612d1a565b60405180910390f35b6102c460048036038101906102bf91906128f3565b6108d9565b6040516102d19190612d1a565b60405180910390f35b6102e2610967565b6040516102ef9190612ea3565b60405180910390f35b61030061096d565b60405161030d9190612d35565b60405180910390f35b610330600480360381019061032b9190612855565b610993565b005b61033a610d27565b6040516103479190612d50565b60405180910390f35b61036a600480360381019061036591906128f3565b610d4d565b6040516103779190612d1a565b60405180910390f35b610388610ddb565b6040516103959190612d35565b60405180910390f35b6103b860048036038101906103b391906127b1565b610e01565b6040516103c59190612d1a565b60405180910390f35b6103e860048036038101906103e391906126e7565b610ea2565b6040516103f59190612d1a565b60405180910390f35b610406610ec2565b6040516104139190612ea3565b60405180910390f35b610424610ec8565b6040516104319190612d35565b60405180910390f35b610454600480360381019061044f91906127b1565b610eee565b6040516104619190612d1a565b60405180910390f35b610472610f8f565b60405161047f9190612d1a565b60405180910390f35b610490610fa2565b005b61049a61102a565b6040516104a79190612cad565b60405180910390f35b6104b8611050565b6040516104c59190612cad565b60405180910390f35b6104d661107a565b6040516104e39190612cad565b60405180910390f35b61050660048036038101906105019190612775565b6110a0565b6040516105139190612d1a565b60405180910390f35b610524611153565b6040516105319190612d1a565b60405180910390f35b610554600480360381019061054f91906126e7565b611166565b6040516105619190612d1a565b60405180910390f35b610584600480360381019061057f9190612803565b61122e565b6040516105919190612d1a565b60405180910390f35b6105a26112f6565b6040516105af9190612ea3565b60405180910390f35b6105d260048036038101906105cd91906128f3565b6112fc565b6040516105df9190612d1a565b60405180910390f35b6105f061138a565b6040516105fd9190612d35565b60405180910390f35b61060e6113b0565b60405161061b9190612ea3565b60405180910390f35b61062c6113b6565b6040516106399190612d6b565b60405180910390f35b61064a6113dc565b6040516106579190612d1a565b60405180910390f35b61067a600480360381019061067591906126e7565b6117cb565b6040516106879190612d1a565b60405180910390f35b6106aa60048036038101906106a5919061282c565b611893565b6040516106b79190612d1a565b60405180910390f35b6106da60048036038101906106d591906126e7565b61195b565b6040516106e79190612d1a565b60405180910390f35b6106f8611a23565b6040516107059190612cad565b60405180910390f35b610716611a49565b6040516107239190612ea3565b60405180910390f35b610746600480360381019061074191906126e7565b611a4f565b005b610750611b47565b60405161075d9190612d86565b60405180910390f35b60725481565b6000610776611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610794611050565b73ffffffffffffffffffffffffffffffffffffffff16146107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190612e43565b60405180910390fd5b8160738190555060019050919050565b6000610804611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610822611050565b73ffffffffffffffffffffffffffffffffffffffff1614610878576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086f90612e43565b60405180910390fd5b81606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001905092915050565b60006108e3611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610901611050565b73ffffffffffffffffffffffffffffffffffffffff1614610957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094e90612e43565b60405180910390fd5b81606e8190555060019050919050565b606f5481565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff16806109b9575060008054906101000a900460ff16155b6109f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ef90612e23565b60405180910390fd5b60008060019054906101000a900460ff161590508015610a48576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610a50611b75565b86606c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087606d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033606a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033606b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611388606e819055506109c4606f819055506109c46070819055506127106071819055506103e86072819055506001607460146101000a81548160ff0219169083151502179055506000607460156101000a81548160ff02191690831515021790555081607460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610d1d5760008060016101000a81548160ff0219169083151502179055505b5050505050505050565b607460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d57611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610d75611050565b73ffffffffffffffffffffffffffffffffffffffff1614610dcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc290612e43565b60405180910390fd5b8160708190555060019050919050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610e0b611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610e29611050565b73ffffffffffffffffffffffffffffffffffffffff1614610e7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7690612e43565b60405180910390fd5b81607460146101000a81548160ff02191690831515021790555060019050919050565b60656020528060005260406000206000915054906101000a900460ff1681565b60705481565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610ef8611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610f16611050565b73ffffffffffffffffffffffffffffffffffffffff1614610f6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6390612e43565b60405180910390fd5b81607460156101000a81548160ff02191690831515021790555060019050919050565b607460159054906101000a900460ff1681565b610faa611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610fc8611050565b73ffffffffffffffffffffffffffffffffffffffff161461101e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101590612e43565b60405180910390fd5b6110286000611c5e565b565b607560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006110aa611b6d565b73ffffffffffffffffffffffffffffffffffffffff166110c8611050565b73ffffffffffffffffffffffffffffffffffffffff161461111e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111590612e43565b60405180910390fd5b61114933838573ffffffffffffffffffffffffffffffffffffffff16611d249092919063ffffffff16565b6001905092915050565b607460149054906101000a900460ff1681565b6000611170611b6d565b73ffffffffffffffffffffffffffffffffffffffff1661118e611050565b73ffffffffffffffffffffffffffffffffffffffff16146111e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111db90612e43565b60405180910390fd5b81606a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000611238611b6d565b73ffffffffffffffffffffffffffffffffffffffff16611256611050565b73ffffffffffffffffffffffffffffffffffffffff16146112ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a390612e43565b60405180910390fd5b81606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b60715481565b6000611306611b6d565b73ffffffffffffffffffffffffffffffffffffffff16611324611050565b73ffffffffffffffffffffffffffffffffffffffff161461137a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137190612e43565b60405180910390fd5b81606f8190555060019050919050565b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606e5481565b606d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661146a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146190612de3565b60405180910390fd5b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114c79190612cad565b60206040518083038186803b1580156114df57600080fd5b505afa1580156114f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611517919061291c565b90506000611544607154611536606e5485611daa90919063ffffffff16565b611dc090919063ffffffff16565b90506000611571607154611563606f5486611daa90919063ffffffff16565b611dc090919063ffffffff16565b9050600061159a8261158c8587611dd690919063ffffffff16565b611dd690919063ffffffff16565b905061160b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d249092919063ffffffff16565b61167a606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d249092919063ffffffff16565b6116e9606b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d249092919063ffffffff16565b607460149054906101000a900460ff161561170757611706611dec565b5b607460159054906101000a900460ff16156117c057607560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663796c7be76040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561178657600080fd5b505af115801561179a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117be91906127da565b505b600194505050505090565b60006117d5611b6d565b73ffffffffffffffffffffffffffffffffffffffff166117f3611050565b73ffffffffffffffffffffffffffffffffffffffff1614611849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184090612e43565b60405180910390fd5b81606b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600061189d611b6d565b73ffffffffffffffffffffffffffffffffffffffff166118bb611050565b73ffffffffffffffffffffffffffffffffffffffff1614611911576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190890612e43565b60405180910390fd5b81607460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000611965611b6d565b73ffffffffffffffffffffffffffffffffffffffff16611983611050565b73ffffffffffffffffffffffffffffffffffffffff16146119d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d090612e43565b60405180910390fd5b81607560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60735481565b611a57611b6d565b73ffffffffffffffffffffffffffffffffffffffff16611a75611050565b73ffffffffffffffffffffffffffffffffffffffff1614611acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac290612e43565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611b3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3290612dc3565b60405180910390fd5b611b4481611c5e565b50565b606c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600060019054906101000a900460ff1680611b9b575060008054906101000a900460ff16155b611bda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bd190612e23565b60405180910390fd5b60008060019054906101000a900460ff161590508015611c2a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611c326121d0565b611c3a6122a9565b8015611c5b5760008060016101000a81548160ff0219169083151502179055505b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611da58363a9059cbb60e01b8484604051602401611d43929190612cf1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612392565b505050565b60008183611db89190612fae565b905092915050565b60008183611dce9190612f7d565b905092915050565b60008183611de49190613008565b905092915050565b6000606d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a43905606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401611e8f929190612cc8565b60206040518083038186803b158015611ea757600080fd5b505afa158015611ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edf9190612710565b90506000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401611f3e9190612cad565b60206040518083038186803b158015611f5657600080fd5b505afa158015611f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8e919061291c565b90506000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401611fed9190612cad565b60206040518083038186803b15801561200557600080fd5b505afa158015612019573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061203d919061291c565b90506000670de0b6b3a764000090506000612073846120658486611daa90919063ffffffff16565b611dc090919063ffffffff16565b9050600080670de0b6b3a76400008311156120ed576120bb655af3107a40006120ad670de0b6b3a764000086611dd690919063ffffffff16565b611dc090919063ffffffff16565b90506072548111156120d057600091506120e8565b6120e581607254611dd690919063ffffffff16565b91505b612133565b612119655af3107a400084670de0b6b3a764000061210b9190613008565b611dc090919063ffffffff16565b90506121308160725461245990919063ffffffff16565b91505b607460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346ca6bea6073548460016040518463ffffffff1660e01b815260040161219593929190612ebe565b600060405180830381600087803b1580156121af57600080fd5b505af11580156121c3573d6000803e3d6000fd5b5050505050505050505050565b600060019054906101000a900460ff16806121f6575060008054906101000a900460ff16155b612235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222c90612e23565b60405180910390fd5b60008060019054906101000a900460ff161590508015612285576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156122a65760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806122cf575060008054906101000a900460ff16155b61230e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230590612e23565b60405180910390fd5b60008060019054906101000a900460ff16159050801561235e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61236e612369611b6d565b611c5e565b801561238f5760008060016101000a81548160ff0219169083151502179055505b50565b60006123f4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661246f9092919063ffffffff16565b9050600081511115612454578080602001905181019061241491906127da565b612453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244a90612e83565b60405180910390fd5b5b505050565b600081836124679190612f27565b905092915050565b606061247e8484600085612487565b90509392505050565b6060824710156124cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124c390612e03565b60405180910390fd5b6124d58561259b565b612514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161250b90612e63565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161253d9190612c96565b60006040518083038185875af1925050503d806000811461257a576040519150601f19603f3d011682016040523d82523d6000602084013e61257f565b606091505b509150915061258f8282866125ae565b92505050949350505050565b600080823b905060008111915050919050565b606083156125be5782905061260e565b6000835111156125d15782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126059190612da1565b60405180910390fd5b9392505050565b600081359050612624816131fe565b92915050565b600081519050612639816131fe565b92915050565b60008135905061264e81613215565b92915050565b60008151905061266381613215565b92915050565b6000813590506126788161322c565b92915050565b60008135905061268d81613243565b92915050565b6000813590506126a28161325a565b92915050565b6000813590506126b781613271565b92915050565b6000813590506126cc81613288565b92915050565b6000815190506126e181613288565b92915050565b6000602082840312156126f957600080fd5b600061270784828501612615565b91505092915050565b60006020828403121561272257600080fd5b60006127308482850161262a565b91505092915050565b6000806040838503121561274c57600080fd5b600061275a85828601612615565b925050602061276b8582860161263f565b9150509250929050565b6000806040838503121561278857600080fd5b600061279685828601612615565b92505060206127a7858286016126bd565b9150509250929050565b6000602082840312156127c357600080fd5b60006127d18482850161263f565b91505092915050565b6000602082840312156127ec57600080fd5b60006127fa84828501612654565b91505092915050565b60006020828403121561281557600080fd5b600061282384828501612669565b91505092915050565b60006020828403121561283e57600080fd5b600061284c8482850161267e565b91505092915050565b600080600080600080600060e0888a03121561287057600080fd5b600061287e8a828b01612693565b975050602061288f8a828b016126a8565b96505060406128a08a828b01612669565b95505060606128b18a828b01612669565b94505060806128c28a828b01612669565b93505060a06128d38a828b01612669565b92505060c06128e48a828b0161267e565b91505092959891949750929550565b60006020828403121561290557600080fd5b6000612913848285016126bd565b91505092915050565b60006020828403121561292e57600080fd5b600061293c848285016126d2565b91505092915050565b61294e8161303c565b82525050565b61295d8161304e565b82525050565b600061296e82612ef5565b6129788185612f0b565b935061298881856020860161315c565b80840191505092915050565b61299d816130cc565b82525050565b6129ac816130f0565b82525050565b6129bb81613114565b82525050565b6129ca81613138565b82525050565b60006129db82612f00565b6129e58185612f16565b93506129f581856020860161315c565b6129fe816131ed565b840191505092915050565b6000612a16602683612f16565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a7c602483612f16565b91507f6578656375746f723a2063616c6c6572206973206e6f7420746865206578656360008301527f75746f72000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ae2602683612f16565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b48602e83612f16565b91507f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008301527f647920696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b6000612bae602083612f16565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000612bee601d83612f16565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6000612c2e602a83612f16565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b612c90816130c2565b82525050565b6000612ca28284612963565b915081905092915050565b6000602082019050612cc26000830184612945565b92915050565b6000604082019050612cdd6000830185612945565b612cea6020830184612945565b9392505050565b6000604082019050612d066000830185612945565b612d136020830184612c87565b9392505050565b6000602082019050612d2f6000830184612954565b92915050565b6000602082019050612d4a6000830184612994565b92915050565b6000602082019050612d6560008301846129a3565b92915050565b6000602082019050612d8060008301846129b2565b92915050565b6000602082019050612d9b60008301846129c1565b92915050565b60006020820190508181036000830152612dbb81846129d0565b905092915050565b60006020820190508181036000830152612ddc81612a09565b9050919050565b60006020820190508181036000830152612dfc81612a6f565b9050919050565b60006020820190508181036000830152612e1c81612ad5565b9050919050565b60006020820190508181036000830152612e3c81612b3b565b9050919050565b60006020820190508181036000830152612e5c81612ba1565b9050919050565b60006020820190508181036000830152612e7c81612be1565b9050919050565b60006020820190508181036000830152612e9c81612c21565b9050919050565b6000602082019050612eb86000830184612c87565b92915050565b6000606082019050612ed36000830186612c87565b612ee06020830185612c87565b612eed6040830184612954565b949350505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000612f32826130c2565b9150612f3d836130c2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612f7257612f7161318f565b5b828201905092915050565b6000612f88826130c2565b9150612f93836130c2565b925082612fa357612fa26131be565b5b828204905092915050565b6000612fb9826130c2565b9150612fc4836130c2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612ffd57612ffc61318f565b5b828202905092915050565b6000613013826130c2565b915061301e836130c2565b9250828210156130315761303061318f565b5b828203905092915050565b6000613047826130a2565b9050919050565b60008115159050919050565b60006130658261303c565b9050919050565b60006130778261303c565b9050919050565b60006130898261303c565b9050919050565b600061309b8261303c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006130d7826130de565b9050919050565b60006130e9826130a2565b9050919050565b60006130fb82613102565b9050919050565b600061310d826130a2565b9050919050565b600061311f82613126565b9050919050565b6000613131826130a2565b9050919050565b60006131438261314a565b9050919050565b6000613155826130a2565b9050919050565b60005b8381101561317a57808201518184015260208101905061315f565b83811115613189576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6132078161303c565b811461321257600080fd5b50565b61321e8161304e565b811461322957600080fd5b50565b6132358161305a565b811461324057600080fd5b50565b61324c8161306c565b811461325757600080fd5b50565b6132638161307e565b811461326e57600080fd5b50565b61327a81613090565b811461328557600080fd5b50565b613291816130c2565b811461329c57600080fd5b5056fea2646970667358221220fd248191e56cc7b8697ff9d7d4c9dee6ca8abca04fa6d345ee1147d71bc7f80764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xBD0B1F44 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDB7F521A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDB7F521A EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x6F0 JUMPI DUP1 PUSH4 0xF1068454 EQ PUSH2 0x70E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0xF6D7EADE EQ PUSH2 0x748 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xBD0B1F44 EQ PUSH2 0x606 JUMPI DUP1 PUSH4 0xC83DD231 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0xD10C06A2 EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xD477F05F EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0xD4F26C51 EQ PUSH2 0x690 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xA36A7526 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xAAF5BFC3 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0xAF5518C4 EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xB8BB97A1 EQ PUSH2 0x5E8 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x91CCA3DB EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x930ED033 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x9DA5B0D5 EQ PUSH2 0x51C JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x4ECAAC41 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4ECAAC41 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x55C746D1 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x58DE5DE8 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x7E47961C EQ PUSH2 0x492 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x4591DB50 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x48C7E528 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x4AE6A027 EQ PUSH2 0x3FE JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x2C535A52 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x2C535A52 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x3011D3D5 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x35876476 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x36E9332D EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x3C850E1E EQ PUSH2 0x350 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x16D03993 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x1B0D8AAB EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x27C42A50 EQ PUSH2 0x2AA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x2739 JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33A PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x2D50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x406 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x424 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH2 0xFA2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49A PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x2775 JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x524 PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A2 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F0 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60E PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62C PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x2D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64A PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x17CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x282C JUMP JUMPDEST PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x195B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F8 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x716 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x746 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x1A4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x750 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x776 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x794 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x73 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x804 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x822 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x878 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86F SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E3 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x901 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94E SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6E DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9B9 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x9F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EF SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0xA48 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xA50 PUSH2 0x1B75 JUMP JUMPDEST DUP7 PUSH1 0x6C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x6D PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x66 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x68 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x69 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6A PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1388 PUSH1 0x6E DUP2 SWAP1 SSTORE POP PUSH2 0x9C4 PUSH1 0x6F DUP2 SWAP1 SSTORE POP PUSH2 0x9C4 PUSH1 0x70 DUP2 SWAP1 SSTORE POP PUSH2 0x2710 PUSH1 0x71 DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 PUSH1 0x72 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x74 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x74 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x74 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x67 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x74 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD57 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD75 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC2 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x70 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0B PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE29 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE76 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x74 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF8 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF16 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF63 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x74 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x74 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xFAA PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFC8 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x101E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1015 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1028 PUSH1 0x0 PUSH2 0x1C5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x75 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AA PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10C8 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1115 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1149 CALLER DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D24 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x74 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1170 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x118E PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DB SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6A PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1238 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1256 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A3 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x67 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1306 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1324 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1371 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6F DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6D PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x146A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1461 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C7 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1517 SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1544 PUSH1 0x71 SLOAD PUSH2 0x1536 PUSH1 0x6E SLOAD DUP6 PUSH2 0x1DAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1571 PUSH1 0x71 SLOAD PUSH2 0x1563 PUSH1 0x6F SLOAD DUP7 PUSH2 0x1DAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x159A DUP3 PUSH2 0x158C DUP6 DUP8 PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x160B PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D24 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x167A PUSH1 0x6A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D24 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16E9 PUSH1 0x6B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D24 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x74 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1707 JUMPI PUSH2 0x1706 PUSH2 0x1DEC JUMP JUMPDEST JUMPDEST PUSH1 0x74 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x17C0 JUMPI PUSH1 0x75 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x796C7BE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x179A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17BE SWAP2 SWAP1 PUSH2 0x27DA JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D5 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17F3 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1840 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189D PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18BB PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1911 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1908 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x74 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1965 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1983 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D0 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x75 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A57 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A75 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1ACB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC2 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B32 SWAP1 PUSH2 0x2DC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x1C5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6C PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1B9B JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1BDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD1 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x1C2A JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1C32 PUSH2 0x21D0 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x22A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1DA5 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D43 SWAP3 SWAP2 SWAP1 PUSH2 0x2CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2392 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1DB8 SWAP2 SWAP1 PUSH2 0x2FAE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1DCE SWAP2 SWAP1 PUSH2 0x2F7D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1DE4 SWAP2 SWAP1 PUSH2 0x3008 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6D PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE6A43905 PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8F SWAP3 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EDF SWAP2 SWAP1 PUSH2 0x2710 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3E SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F8E SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FED SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2019 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x203D SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH2 0x2073 DUP5 PUSH2 0x2065 DUP5 DUP7 PUSH2 0x1DAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 GT ISZERO PUSH2 0x20ED JUMPI PUSH2 0x20BB PUSH6 0x5AF3107A4000 PUSH2 0x20AD PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x72 SLOAD DUP2 GT ISZERO PUSH2 0x20D0 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x20E8 JUMP JUMPDEST PUSH2 0x20E5 DUP2 PUSH1 0x72 SLOAD PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x2133 JUMP JUMPDEST PUSH2 0x2119 PUSH6 0x5AF3107A4000 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x210B SWAP2 SWAP1 PUSH2 0x3008 JUMP JUMPDEST PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2130 DUP2 PUSH1 0x72 SLOAD PUSH2 0x2459 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x74 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46CA6BEA PUSH1 0x73 SLOAD DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2195 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EBE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x21F6 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2235 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222C SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x2285 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 ISZERO PUSH2 0x22A6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x22CF JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x230E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2305 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x235E JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x236E PUSH2 0x2369 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0x1C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x238F JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x246F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2454 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2414 SWAP2 SWAP1 PUSH2 0x27DA JUMP JUMPDEST PUSH2 0x2453 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x244A SWAP1 PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2467 SWAP2 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x247E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2487 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x24CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C3 SWAP1 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24D5 DUP6 PUSH2 0x259B JUMP JUMPDEST PUSH2 0x2514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250B SWAP1 PUSH2 0x2E63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x253D SWAP2 SWAP1 PUSH2 0x2C96 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x257A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x257F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x258F DUP3 DUP3 DUP7 PUSH2 0x25AE JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x25BE JUMPI DUP3 SWAP1 POP PUSH2 0x260E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x25D1 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2605 SWAP2 SWAP1 PUSH2 0x2DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2624 DUP2 PUSH2 0x31FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2639 DUP2 PUSH2 0x31FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x264E DUP2 PUSH2 0x3215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2663 DUP2 PUSH2 0x3215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2678 DUP2 PUSH2 0x322C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x268D DUP2 PUSH2 0x3243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26A2 DUP2 PUSH2 0x325A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26B7 DUP2 PUSH2 0x3271 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26CC DUP2 PUSH2 0x3288 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26E1 DUP2 PUSH2 0x3288 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2707 DUP5 DUP3 DUP6 ADD PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2730 DUP5 DUP3 DUP6 ADD PUSH2 0x262A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x274C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x275A DUP6 DUP3 DUP7 ADD PUSH2 0x2615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x276B DUP6 DUP3 DUP7 ADD PUSH2 0x263F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2796 DUP6 DUP3 DUP7 ADD PUSH2 0x2615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27A7 DUP6 DUP3 DUP7 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27D1 DUP5 DUP3 DUP6 ADD PUSH2 0x263F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27FA DUP5 DUP3 DUP6 ADD PUSH2 0x2654 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2823 DUP5 DUP3 DUP6 ADD PUSH2 0x2669 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x283E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x284C DUP5 DUP3 DUP6 ADD PUSH2 0x267E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x287E DUP11 DUP3 DUP12 ADD PUSH2 0x2693 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x288F DUP11 DUP3 DUP12 ADD PUSH2 0x26A8 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x28A0 DUP11 DUP3 DUP12 ADD PUSH2 0x2669 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x28B1 DUP11 DUP3 DUP12 ADD PUSH2 0x2669 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x28C2 DUP11 DUP3 DUP12 ADD PUSH2 0x2669 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x28D3 DUP11 DUP3 DUP12 ADD PUSH2 0x2669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x28E4 DUP11 DUP3 DUP12 ADD PUSH2 0x267E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2913 DUP5 DUP3 DUP6 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x292E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x293C DUP5 DUP3 DUP6 ADD PUSH2 0x26D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x294E DUP2 PUSH2 0x303C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x295D DUP2 PUSH2 0x304E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296E DUP3 PUSH2 0x2EF5 JUMP JUMPDEST PUSH2 0x2978 DUP2 DUP6 PUSH2 0x2F0B JUMP JUMPDEST SWAP4 POP PUSH2 0x2988 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x315C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x299D DUP2 PUSH2 0x30CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29AC DUP2 PUSH2 0x30F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29BB DUP2 PUSH2 0x3114 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29CA DUP2 PUSH2 0x3138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29DB DUP3 PUSH2 0x2F00 JUMP JUMPDEST PUSH2 0x29E5 DUP2 DUP6 PUSH2 0x2F16 JUMP JUMPDEST SWAP4 POP PUSH2 0x29F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x315C JUMP JUMPDEST PUSH2 0x29FE DUP2 PUSH2 0x31ED JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A16 PUSH1 0x26 DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7C PUSH1 0x24 DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x6578656375746F723A2063616C6C6572206973206E6F74207468652065786563 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x75746F7200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE2 PUSH1 0x26 DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B48 PUSH1 0x2E DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BAE PUSH1 0x20 DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BEE PUSH1 0x1D DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2E PUSH1 0x2A DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C90 DUP2 PUSH2 0x30C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA2 DUP3 DUP5 PUSH2 0x2963 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2945 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CDD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x2CEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2945 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D06 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x2D13 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C87 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D2F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2954 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2994 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D9B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DBB DUP2 DUP5 PUSH2 0x29D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DDC DUP2 PUSH2 0x2A09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DFC DUP2 PUSH2 0x2A6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E1C DUP2 PUSH2 0x2AD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E3C DUP2 PUSH2 0x2B3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E5C DUP2 PUSH2 0x2BA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E7C DUP2 PUSH2 0x2BE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E9C DUP2 PUSH2 0x2C21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EB8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2ED3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2C87 JUMP JUMPDEST PUSH2 0x2EE0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2C87 JUMP JUMPDEST PUSH2 0x2EED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2954 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F32 DUP3 PUSH2 0x30C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F3D DUP4 PUSH2 0x30C2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2F72 JUMPI PUSH2 0x2F71 PUSH2 0x318F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F88 DUP3 PUSH2 0x30C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F93 DUP4 PUSH2 0x30C2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2FA3 JUMPI PUSH2 0x2FA2 PUSH2 0x31BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB9 DUP3 PUSH2 0x30C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC4 DUP4 PUSH2 0x30C2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2FFD JUMPI PUSH2 0x2FFC PUSH2 0x318F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3013 DUP3 PUSH2 0x30C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x301E DUP4 PUSH2 0x30C2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3031 JUMPI PUSH2 0x3030 PUSH2 0x318F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3047 DUP3 PUSH2 0x30A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3065 DUP3 PUSH2 0x303C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3077 DUP3 PUSH2 0x303C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3089 DUP3 PUSH2 0x303C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x309B DUP3 PUSH2 0x303C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D7 DUP3 PUSH2 0x30DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E9 DUP3 PUSH2 0x30A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30FB DUP3 PUSH2 0x3102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310D DUP3 PUSH2 0x30A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x311F DUP3 PUSH2 0x3126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3131 DUP3 PUSH2 0x30A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3143 DUP3 PUSH2 0x314A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3155 DUP3 PUSH2 0x30A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x317A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x315F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3189 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3207 DUP2 PUSH2 0x303C JUMP JUMPDEST DUP2 EQ PUSH2 0x3212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x321E DUP2 PUSH2 0x304E JUMP JUMPDEST DUP2 EQ PUSH2 0x3229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3235 DUP2 PUSH2 0x305A JUMP JUMPDEST DUP2 EQ PUSH2 0x3240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x324C DUP2 PUSH2 0x306C JUMP JUMPDEST DUP2 EQ PUSH2 0x3257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3263 DUP2 PUSH2 0x307E JUMP JUMPDEST DUP2 EQ PUSH2 0x326E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x327A DUP2 PUSH2 0x3090 JUMP JUMPDEST DUP2 EQ PUSH2 0x3285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3291 DUP2 PUSH2 0x30C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x329C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0x24 DUP2 SWAP2 0xE5 PUSH13 0xC7B8697FF9D7D4C9DEE6CA8ABC LOG0 0x4F 0xA6 0xD3 GASLIMIT 0xEE GT SELFBALANCE 0xD7 SHL 0xC7 0xF8 SMOD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "909:5267:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22714:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "7:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "240:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "234:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "256:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:12",
														"type": ""
													}
												],
												"src": "152:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "350:84:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "360:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "382:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "369:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "398:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "398:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "398:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "328:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "336:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "344:5:12",
														"type": ""
													}
												],
												"src": "301:133:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "500:77:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "510:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "525:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "519:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "510:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "565:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "541:23:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "541:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "541:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "478:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "486:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "494:5:12",
														"type": ""
													}
												],
												"src": "440:137:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "660:112:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "670:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "692:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "679:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "670:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20Upgradeable_$248",
																	"nodeType": "YulIdentifier",
																	"src": "708:51:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "708:58:12"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20Upgradeable_$248",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "638:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "646:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "654:5:12",
														"type": ""
													}
												],
												"src": "583:189:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "844:101:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "854:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "876:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "863:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "854:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "933:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IFarm_$1804",
																	"nodeType": "YulIdentifier",
																	"src": "892:40:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "892:47:12"
														}
													]
												},
												"name": "abi_decode_t_contract$_IFarm_$1804",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "822:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "830:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "838:5:12",
														"type": ""
													}
												],
												"src": "778:167:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1029:113:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1039:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1061:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1048:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1039:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1130:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IUniswapV2Factory_$1146",
																	"nodeType": "YulIdentifier",
																	"src": "1077:52:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1077:59:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1077:59:12"
														}
													]
												},
												"name": "abi_decode_t_contract$_IUniswapV2Factory_$1146",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1007:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1015:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1023:5:12",
														"type": ""
													}
												],
												"src": "951:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:114:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1237:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1259:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1246:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1237:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1329:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IUniswapV2Router02_$1784",
																	"nodeType": "YulIdentifier",
																	"src": "1275:53:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1275:60:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1275:60:12"
														}
													]
												},
												"name": "abi_decode_t_contract$_IUniswapV2Router02_$1784",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1205:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1213:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1221:5:12",
														"type": ""
													}
												],
												"src": "1148:193:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1399:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1409:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1431:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1418:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1474:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1447:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1447:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1377:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1385:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1393:5:12",
														"type": ""
													}
												],
												"src": "1347:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1555:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1565:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1580:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1574:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1565:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1623:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1596:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1596:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1596:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1533:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1541:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1549:5:12",
														"type": ""
													}
												],
												"src": "1492:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1707:196:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1753:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1762:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1765:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1755:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1755:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1755:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1728:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1737:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1724:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1749:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:32:12"
															},
															"nodeType": "YulIf",
															"src": "1717:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "1779:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1794:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1798:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1823:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1858:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1869:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1854:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1854:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1878:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1833:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1833:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1823:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1677:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1688:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1700:6:12",
														"type": ""
													}
												],
												"src": "1641:262:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1986:207:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2032:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2041:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2044:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2034:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2034:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2007:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2016:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2028:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1999:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1999:32:12"
															},
															"nodeType": "YulIf",
															"src": "1996:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2058:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2073:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2087:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2077:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2102:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2148:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2159:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2144:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2144:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2168:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2112:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2112:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2102:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1956:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1967:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1979:6:12",
														"type": ""
													}
												],
												"src": "1909:284:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:321:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2325:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2334:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2327:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2327:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2327:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2296:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2321:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:32:12"
															},
															"nodeType": "YulIf",
															"src": "2289:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2351:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2366:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2380:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2370:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2395:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2430:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2441:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2426:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2426:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2450:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2405:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2405:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2395:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2478:115:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2493:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2507:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2497:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2523:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2555:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2566:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2551:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2551:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2575:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2533:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2533:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2523:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2241:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2252:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2264:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2272:6:12",
														"type": ""
													}
												],
												"src": "2199:401:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2689:324:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2735:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2744:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2747:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2737:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2737:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2737:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2710:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2719:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2706:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2706:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:32:12"
															},
															"nodeType": "YulIf",
															"src": "2699:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2651:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2662:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2674:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2682:6:12",
														"type": ""
													}
												],
												"src": "2606:407:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3082:193:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3128:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3137:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3140:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3130:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3130:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3130:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3103:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3099:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3099:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3124:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3095:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:32:12"
															},
															"nodeType": "YulIf",
															"src": "3092:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3154:114:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3169:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3183:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3173:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3198:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3230:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3241:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3226:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3226:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3250:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3208:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3208:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3198:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3052:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3063:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3075:6:12",
														"type": ""
													}
												],
												"src": "3019:256:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3355:204:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3401:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3410:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3413:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3403:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3403:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3403:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3376:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3385:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3372:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3372:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3397:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3368:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:32:12"
															},
															"nodeType": "YulIf",
															"src": "3365:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3427:125:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3442:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3446:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3471:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3514:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3525:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3510:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3534:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3481:28:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3481:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3471:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3325:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3336:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3348:6:12",
														"type": ""
													}
												],
												"src": "3281:278:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3656:221:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3702:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3711:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3714:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3704:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3704:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3704:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3677:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3686:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3673:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3673:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3698:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3669:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:32:12"
															},
															"nodeType": "YulIf",
															"src": "3666:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3728:142:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3743:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3757:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3747:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3772:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3832:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3828:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3852:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Upgradeable_$248",
																			"nodeType": "YulIdentifier",
																			"src": "3782:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3782:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3772:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20Upgradeable_$248",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3626:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3637:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3649:6:12",
														"type": ""
													}
												],
												"src": "3565:312:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3963:210:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4009:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4018:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4021:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4011:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4011:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4011:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3984:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3993:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3980:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3980:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4005:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3976:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:32:12"
															},
															"nodeType": "YulIf",
															"src": "3973:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4035:131:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4050:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4064:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4054:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4079:77:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4128:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4139:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4124:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4124:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4148:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IFarm_$1804",
																			"nodeType": "YulIdentifier",
																			"src": "4089:34:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4089:67:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4079:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IFarm_$1804",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3933:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3944:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3956:6:12",
														"type": ""
													}
												],
												"src": "3883:290:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:1135:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4561:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4570:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4573:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4563:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4563:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4563:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4535:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4544:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4531:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4531:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4556:3:12",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4527:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4527:33:12"
															},
															"nodeType": "YulIf",
															"src": "4524:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "4587:143:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4602:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4616:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4606:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4631:89:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4692:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4703:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4688:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4688:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4712:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IUniswapV2Factory_$1146",
																			"nodeType": "YulIdentifier",
																			"src": "4641:46:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4641:79:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4631:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4740:145:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4755:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4769:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4759:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4785:90:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4847:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4858:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4843:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4843:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4867:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IUniswapV2Router02_$1784",
																			"nodeType": "YulIdentifier",
																			"src": "4795:47:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4795:80:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4785:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4895:143:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4910:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4924:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4914:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4940:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5000:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5011:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4996:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4996:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5020:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Upgradeable_$248",
																			"nodeType": "YulIdentifier",
																			"src": "4950:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4950:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4940:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5048:143:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5063:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5077:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5067:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5093:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5153:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5164:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5149:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5149:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5173:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Upgradeable_$248",
																			"nodeType": "YulIdentifier",
																			"src": "5103:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5103:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5093:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5201:144:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5216:17:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5230:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5220:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5247:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5307:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5318:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5303:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5303:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5327:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Upgradeable_$248",
																			"nodeType": "YulIdentifier",
																			"src": "5257:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5257:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5247:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5355:144:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5370:17:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5384:3:12",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5374:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5401:88:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5461:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5472:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5457:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5457:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5481:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Upgradeable_$248",
																			"nodeType": "YulIdentifier",
																			"src": "5411:45:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5411:78:12"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "5401:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5509:133:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5524:17:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5538:3:12",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5528:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5555:77:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5604:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5615:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5600:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5600:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5624:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IFarm_$1804",
																			"nodeType": "YulIdentifier",
																			"src": "5565:34:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5565:67:12"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "5555:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IUniswapV2Factory_$1146t_contract$_IUniswapV2Router02_$1784t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IFarm_$1804",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4436:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4447:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4459:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4467:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4475:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4483:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4491:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4499:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4507:6:12",
														"type": ""
													}
												],
												"src": "4179:1470:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5721:196:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5767:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5776:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5779:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5769:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5769:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5769:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5742:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5751:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5738:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5738:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5763:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:32:12"
															},
															"nodeType": "YulIf",
															"src": "5731:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "5793:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5808:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5822:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5812:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5837:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5872:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5883:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5868:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5868:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5892:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5847:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5847:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5837:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5691:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5702:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5714:6:12",
														"type": ""
													}
												],
												"src": "5655:262:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6000:207:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6046:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6055:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6058:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6048:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6048:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6048:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6021:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6030:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6017:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6017:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6042:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6013:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6013:32:12"
															},
															"nodeType": "YulIf",
															"src": "6010:2:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "6072:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6116:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6162:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6173:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6158:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6158:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6182:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6126:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6126:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5970:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5981:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5993:6:12",
														"type": ""
													}
												],
												"src": "5923:284:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6278:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6295:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6318:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6300:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6300:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6288:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6288:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6266:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6273:3:12",
														"type": ""
													}
												],
												"src": "6213:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6396:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6413:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6433:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6418:14:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6418:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6406:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6406:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6406:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6384:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6391:3:12",
														"type": ""
													}
												],
												"src": "6337:109:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6560:265:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6570:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6616:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6584:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6584:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6574:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6631:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6714:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6719:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6638:75:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6638:88:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6631:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6761:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6768:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6757:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6757:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6775:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6780:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6735:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6735:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6735:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6796:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6807:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6812:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6803:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6803:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6796:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6541:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6548:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6556:3:12",
														"type": ""
													}
												],
												"src": "6452:373:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6921:91:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6938:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6999:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20Upgradeable_$248_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6943:55:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6943:62:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6931:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6931:75:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6931:75:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20Upgradeable_$248_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6909:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6916:3:12",
														"type": ""
													}
												],
												"src": "6831:181:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7097:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7114:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7164:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IFarm_$1804_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7119:44:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7119:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7107:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7107:64:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7107:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IFarm_$1804_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7085:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7092:3:12",
														"type": ""
													}
												],
												"src": "7018:159:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7274:92:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7291:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7353:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Factory_$1146_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7296:56:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7296:63:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7284:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7284:76:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7284:76:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Factory_$1146_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7262:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7269:3:12",
														"type": ""
													}
												],
												"src": "7183:183:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7464:93:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7481:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7544:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router02_$1784_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7486:57:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7486:64:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:77:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7474:77:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router02_$1784_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7452:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7459:3:12",
														"type": ""
													}
												],
												"src": "7372:185:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7655:272:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7665:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7712:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7679:32:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7679:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7669:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7727:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7793:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7798:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7734:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7734:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7727:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7840:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7847:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7836:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7836:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7854:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7859:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7814:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7814:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7875:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7886:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7913:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7891:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7891:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7882:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7875:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7636:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7643:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7651:3:12",
														"type": ""
													}
												],
												"src": "7563:364:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8079:224:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8089:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8155:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8160:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8096:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8089:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8184:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8189:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8180:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8180:11:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8193:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8173:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8173:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8173:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8249:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8254:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8245:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8245:12:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8259:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8238:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8238:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8238:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8278:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8289:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8294:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8285:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8285:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8278:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8067:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8075:3:12",
														"type": ""
													}
												],
												"src": "7933:370:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8455:222:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8465:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8531:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8536:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8472:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8472:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8465:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8560:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8565:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8556:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8556:11:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8569:34:12",
																		"type": "",
																		"value": "executor: caller is not the exec"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8549:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8549:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8549:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8625:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8630:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8621:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8621:12:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8635:6:12",
																		"type": "",
																		"value": "utor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8614:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8614:28:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8614:28:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8652:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8663:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8668:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8659:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8659:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8652:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8443:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8451:3:12",
														"type": ""
													}
												],
												"src": "8309:368:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8829:224:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8839:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8905:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8910:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8846:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8846:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8839:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8934:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8939:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8930:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8930:11:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8943:34:12",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8923:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8923:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8999:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9004:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8995:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8995:12:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9009:8:12",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8988:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8988:30:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8988:30:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9028:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9039:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9044:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9035:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9035:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9028:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8817:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8825:3:12",
														"type": ""
													}
												],
												"src": "8683:370:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9205:232:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9215:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9281:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9286:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9222:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9222:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9215:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9310:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9315:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9306:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9306:11:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9319:34:12",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9299:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9299:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9299:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9375:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9380:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9371:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9371:12:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9385:16:12",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9364:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9364:38:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9364:38:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9412:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9423:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9428:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9419:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9419:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9412:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9193:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9201:3:12",
														"type": ""
													}
												],
												"src": "9059:378:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9589:184:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9599:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9665:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9670:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9606:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9606:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9599:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9694:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9699:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9690:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9690:11:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9703:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9683:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9683:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9683:55:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9748:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9759:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9764:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9755:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9755:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9748:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9577:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9585:3:12",
														"type": ""
													}
												],
												"src": "9443:330:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9925:181:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9935:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10001:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10006:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9942:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "9942:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9935:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10030:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10035:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10026:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10026:11:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10039:31:12",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10019:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10019:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10019:52:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10081:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10092:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10097:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10088:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10081:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9913:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9921:3:12",
														"type": ""
													}
												],
												"src": "9779:327:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10258:228:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10268:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10334:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10339:2:12",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10275:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10275:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10268:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10363:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10368:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10359:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10359:11:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10372:34:12",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10352:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10352:55:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10352:55:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10428:3:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10433:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10424:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10424:12:12"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10438:12:12",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10417:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10417:34:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10417:34:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10461:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10472:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10477:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10468:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10468:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10461:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10246:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10254:3:12",
														"type": ""
													}
												],
												"src": "10112:374:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10557:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10574:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10597:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10579:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10579:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10567:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10567:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10567:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10545:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10552:3:12",
														"type": ""
													}
												],
												"src": "10492:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10750:137:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10761:100:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10848:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10857:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10768:79:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "10768:93:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10761:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10871:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10878:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10871:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10729:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10735:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10746:3:12",
														"type": ""
													}
												],
												"src": "10616:271:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10991:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11001:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11013:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11024:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11009:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11009:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11001:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11081:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11094:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11105:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11090:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11090:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11037:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11037:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11037:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10963:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10975:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10986:4:12",
														"type": ""
													}
												],
												"src": "10893:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11247:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11257:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11269:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11280:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11265:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11265:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11257:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11337:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11350:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11361:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11346:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11346:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11293:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11293:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11293:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11418:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11431:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11442:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11427:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11427:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11374:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11374:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11374:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11211:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11223:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11231:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11242:4:12",
														"type": ""
													}
												],
												"src": "11121:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11585:206:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11595:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11607:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11618:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11603:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11603:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11595:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11675:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11688:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11699:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11684:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11684:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11631:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11631:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11631:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11756:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11769:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11780:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11765:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11765:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11712:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11712:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11712:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11549:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11561:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11569:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11580:4:12",
														"type": ""
													}
												],
												"src": "11459:332:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11889:118:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11899:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11911:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11922:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11907:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11907:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11899:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11973:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11986:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11997:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11982:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11982:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11935:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "11935:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11935:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11861:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11873:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11884:4:12",
														"type": ""
													}
												],
												"src": "11797:210:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12136:149:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12146:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12158:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12169:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12154:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12154:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12146:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12251:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12264:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12275:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12260:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12260:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20Upgradeable_$248_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12182:68:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12182:96:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12182:96:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$248__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12108:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12120:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12131:4:12",
														"type": ""
													}
												],
												"src": "12013:272:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12403:138:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12413:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12425:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12436:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12421:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12421:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12413:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12507:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12520:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12531:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12516:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12516:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IFarm_$1804_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12449:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12449:85:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12449:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IFarm_$1804__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12375:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12387:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12398:4:12",
														"type": ""
													}
												],
												"src": "12291:250:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12671:150:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12681:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12693:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12704:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12689:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12689:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12681:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12787:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12800:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12811:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12796:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12796:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Factory_$1146_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12717:69:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12717:97:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12717:97:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Factory_$1146__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12643:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12655:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12666:4:12",
														"type": ""
													}
												],
												"src": "12547:274:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12952:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12962:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12974:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12985:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12970:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12970:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12962:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13069:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13082:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13093:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13078:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13078:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router02_$1784_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12998:70:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "12998:98:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12998:98:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1784__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12924:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12936:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12947:4:12",
														"type": ""
													}
												],
												"src": "12827:276:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13227:195:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13237:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13249:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13260:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13245:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13245:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13237:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13284:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13295:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13280:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13280:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13303:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13299:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13299:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13273:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13273:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13273:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13329:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13401:6:12"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13410:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13337:63:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13337:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13329:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13199:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13211:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13222:4:12",
														"type": ""
													}
												],
												"src": "13109:313:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13599:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13609:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13621:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13632:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13617:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13617:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13609:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13656:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13667:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13652:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13652:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13675:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13681:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13671:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13671:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13645:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13645:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13645:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13701:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13835:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13709:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "13709:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13701:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13579:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13594:4:12",
														"type": ""
													}
												],
												"src": "13428:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14024:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14034:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14046:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14057:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14042:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14042:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14034:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14081:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14092:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14077:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14077:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14100:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14106:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14096:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14096:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14070:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14070:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14070:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14126:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14260:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14134:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14134:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14126:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14004:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14019:4:12",
														"type": ""
													}
												],
												"src": "13853:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14449:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14459:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14471:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14482:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14467:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14467:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14459:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14506:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14517:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14502:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14502:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14525:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14531:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14521:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14521:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14495:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14495:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14495:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14551:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14685:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14559:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14559:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14551:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14429:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14444:4:12",
														"type": ""
													}
												],
												"src": "14278:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14874:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14884:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14896:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14907:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14892:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14892:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14884:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14931:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14942:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14927:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14927:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14950:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14956:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14946:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14946:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14920:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14920:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14920:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14976:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15110:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14984:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "14984:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14976:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14854:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14869:4:12",
														"type": ""
													}
												],
												"src": "14703:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15299:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15309:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15321:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15332:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15317:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15317:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15309:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15356:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15367:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15352:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15352:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15375:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15381:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15371:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15371:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15345:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15345:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15345:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15401:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15535:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15409:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15409:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15401:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15279:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15294:4:12",
														"type": ""
													}
												],
												"src": "15128:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15724:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15734:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15746:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15757:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15742:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15742:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15734:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15781:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15792:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15777:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15777:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15800:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15806:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15796:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15796:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15770:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15770:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15770:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15826:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15960:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15834:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "15834:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15826:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15704:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15719:4:12",
														"type": ""
													}
												],
												"src": "15553:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16149:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16159:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16171:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16182:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16167:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16167:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16159:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16206:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16217:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16202:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16202:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16225:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16231:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16221:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16221:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16195:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16195:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16195:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16251:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16385:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16259:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16259:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16251:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16129:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16144:4:12",
														"type": ""
													}
												],
												"src": "15978:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16501:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16511:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16523:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16534:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16519:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16519:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16511:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16591:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16604:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16615:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16600:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16600:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16547:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16547:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16547:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16473:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16485:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16496:4:12",
														"type": ""
													}
												],
												"src": "16403:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16779:282:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16789:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16801:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16812:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16797:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16797:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16789:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16869:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16882:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16893:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16878:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16878:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16825:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16825:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16825:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16950:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16963:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16974:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16959:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16959:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16906:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16906:72:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16906:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17026:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17039:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17050:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17035:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17035:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16988:37:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "16988:66:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16988:66:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16735:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16747:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16755:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16763:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16774:4:12",
														"type": ""
													}
												],
												"src": "16631:430:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17125:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17136:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17152:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17146:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17146:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17136:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17108:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17118:6:12",
														"type": ""
													}
												],
												"src": "17067:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17230:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17241:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17257:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17251:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17251:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17241:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17213:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17223:6:12",
														"type": ""
													}
												],
												"src": "17171:99:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17389:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17399:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17414:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17399:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17361:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17366:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17377:11:12",
														"type": ""
													}
												],
												"src": "17276:147:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17525:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17542:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17547:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17535:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17535:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17535:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17563:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17582:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17587:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17578:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17578:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17563:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17497:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17502:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17513:11:12",
														"type": ""
													}
												],
												"src": "17429:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17648:261:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17658:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17681:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17663:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17663:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17658:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17692:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17715:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17697:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17697:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "17692:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17855:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17857:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17857:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17857:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17776:1:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17783:66:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "17851:1:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17779:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17779:74:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17773:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17773:81:12"
															},
															"nodeType": "YulIf",
															"src": "17770:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17887:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17898:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17901:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17894:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17894:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17887:3:12"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17635:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17638:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17644:3:12",
														"type": ""
													}
												],
												"src": "17604:305:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17957:143:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17967:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17990:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17972:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "17972:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "17967:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18001:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18024:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18006:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18006:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18001:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18048:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "18050:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18050:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18050:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18045:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18038:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18038:9:12"
															},
															"nodeType": "YulIf",
															"src": "18035:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18080:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18089:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18092:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18085:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18085:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "18080:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17946:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17949:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17955:1:12",
														"type": ""
													}
												],
												"src": "17915:185:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18154:300:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18164:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18187:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18169:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18169:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18164:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18198:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18221:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18203:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18203:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18198:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18396:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18398:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18398:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18398:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18308:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18301:6:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18301:9:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18294:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18294:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18316:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18323:66:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18391:1:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "18319:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18319:74:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18313:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18313:81:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18290:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18290:105:12"
															},
															"nodeType": "YulIf",
															"src": "18287:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18428:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18443:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18446:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18439:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18439:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "18428:7:12"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18137:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18140:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18146:7:12",
														"type": ""
													}
												],
												"src": "18106:348:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18505:146:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18515:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18538:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18520:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18520:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18515:1:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18549:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18572:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18554:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18554:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18549:1:12"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18596:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18598:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18598:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18598:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18590:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18593:1:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18587:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18587:8:12"
															},
															"nodeType": "YulIf",
															"src": "18584:2:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18628:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18640:1:12"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18643:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18636:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18636:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "18628:4:12"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18491:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18494:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "18500:4:12",
														"type": ""
													}
												],
												"src": "18460:191:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18702:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18712:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18741:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "18723:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18723:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18712:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18684:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18694:7:12",
														"type": ""
													}
												],
												"src": "18657:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18801:48:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18811:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18836:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18829:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18829:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18822:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18822:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18811:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18783:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18793:7:12",
														"type": ""
													}
												],
												"src": "18759:90:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18925:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18935:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18964:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "18946:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "18946:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18935:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20Upgradeable_$248",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18907:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18917:7:12",
														"type": ""
													}
												],
												"src": "18855:121:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19041:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19051:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19080:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "19062:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19062:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19051:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IFarm_$1804",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19023:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19033:7:12",
														"type": ""
													}
												],
												"src": "18982:110:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19169:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19179:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19208:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "19190:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19190:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19179:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IUniswapV2Factory_$1146",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19151:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19161:7:12",
														"type": ""
													}
												],
												"src": "19098:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19298:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19308:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19337:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "19319:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19319:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19308:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IUniswapV2Router02_$1784",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19280:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19290:7:12",
														"type": ""
													}
												],
												"src": "19226:123:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19400:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19410:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19425:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19432:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19421:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19421:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19410:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19382:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19392:7:12",
														"type": ""
													}
												],
												"src": "19355:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19532:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19542:16:12",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19553:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19542:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19514:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19524:7:12",
														"type": ""
													}
												],
												"src": "19487:77:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19655:91:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19665:75:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19734:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20Upgradeable_$248_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19678:55:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19678:62:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19665:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20Upgradeable_$248_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19635:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19645:9:12",
														"type": ""
													}
												],
												"src": "19570:176:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19837:53:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19847:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19878:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19860:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19860:24:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19847:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20Upgradeable_$248_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19817:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19827:9:12",
														"type": ""
													}
												],
												"src": "19752:138:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19970:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19980:64:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20038:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IFarm_$1804_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19993:44:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "19993:51:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19980:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IFarm_$1804_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19950:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19960:9:12",
														"type": ""
													}
												],
												"src": "19896:154:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20130:53:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20140:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20171:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20153:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20153:24:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20140:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IFarm_$1804_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20110:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20120:9:12",
														"type": ""
													}
												],
												"src": "20056:127:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20275:92:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20285:76:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20355:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IUniswapV2Factory_$1146_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20298:56:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20298:63:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20285:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Factory_$1146_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20255:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20265:9:12",
														"type": ""
													}
												],
												"src": "20189:178:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20459:53:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20469:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20500:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20482:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20482:24:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20469:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Factory_$1146_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20439:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20449:9:12",
														"type": ""
													}
												],
												"src": "20373:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20605:93:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20615:77:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20686:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IUniswapV2Router02_$1784_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20628:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20628:64:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20615:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$1784_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20585:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20595:9:12",
														"type": ""
													}
												],
												"src": "20518:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20791:53:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20801:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20832:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20814:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20814:24:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20801:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$1784_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20771:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20781:9:12",
														"type": ""
													}
												],
												"src": "20704:140:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20899:258:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20909:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20918:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "20913:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20978:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21003:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "21008:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "20999:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20999:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "21022:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "21027:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "21018:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21018:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "21012:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21012:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20992:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20992:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20992:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20939:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20942:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20936:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "20936:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20950:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20952:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "20961:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20964:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20957:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20957:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "20952:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20932:3:12",
																"statements": []
															},
															"src": "20928:113:12"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21075:76:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21125:3:12"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "21130:6:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21121:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21121:16:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21139:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21114:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21114:27:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21114:27:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21056:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21059:6:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21053:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21053:13:12"
															},
															"nodeType": "YulIf",
															"src": "21050:2:12"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "20881:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "20886:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20891:6:12",
														"type": ""
													}
												],
												"src": "20850:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21191:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21208:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21211:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21201:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21201:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21201:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21305:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21308:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21298:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21298:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21298:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21329:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21332:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21322:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21322:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21322:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "21163:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21377:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21394:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21397:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21387:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21387:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21387:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21491:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21494:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21484:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21484:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21484:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21515:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21518:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21508:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21508:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21508:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21349:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21583:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21593:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21611:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21618:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21607:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21607:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21627:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "21623:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21623:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21603:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21603:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "21593:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21566:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "21576:6:12",
														"type": ""
													}
												],
												"src": "21535:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21686:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21743:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21752:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21755:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21745:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21745:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21745:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21709:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21734:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "21716:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21716:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21706:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21706:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21699:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21699:43:12"
															},
															"nodeType": "YulIf",
															"src": "21696:2:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21679:5:12",
														"type": ""
													}
												],
												"src": "21643:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21811:76:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21865:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21874:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21877:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21867:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21867:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21867:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21834:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21856:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "21841:14:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21841:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21831:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21831:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21824:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21824:40:12"
															},
															"nodeType": "YulIf",
															"src": "21821:2:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21804:5:12",
														"type": ""
													}
												],
												"src": "21771:116:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21961:104:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22043:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22052:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22055:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22045:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22045:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22045:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21984:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22034:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20Upgradeable_$248",
																					"nodeType": "YulIdentifier",
																					"src": "21991:42:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21991:49:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21981:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21981:60:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21974:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "21974:68:12"
															},
															"nodeType": "YulIf",
															"src": "21971:2:12"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20Upgradeable_$248",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21954:5:12",
														"type": ""
													}
												],
												"src": "21893:172:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22128:93:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22199:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22208:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22211:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22201:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22201:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22201:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22151:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22190:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IFarm_$1804",
																					"nodeType": "YulIdentifier",
																					"src": "22158:31:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22158:38:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22148:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22148:49:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22141:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22141:57:12"
															},
															"nodeType": "YulIf",
															"src": "22138:2:12"
														}
													]
												},
												"name": "validator_revert_t_contract$_IFarm_$1804",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22121:5:12",
														"type": ""
													}
												],
												"src": "22071:150:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22296:105:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22379:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22388:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22391:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22381:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22381:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22381:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22319:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22370:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IUniswapV2Factory_$1146",
																					"nodeType": "YulIdentifier",
																					"src": "22326:43:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22326:50:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22316:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22316:61:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22309:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22309:69:12"
															},
															"nodeType": "YulIf",
															"src": "22306:2:12"
														}
													]
												},
												"name": "validator_revert_t_contract$_IUniswapV2Factory_$1146",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22289:5:12",
														"type": ""
													}
												],
												"src": "22227:174:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22477:106:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22561:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22570:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22573:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22563:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22563:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22563:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22500:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22552:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IUniswapV2Router02_$1784",
																					"nodeType": "YulIdentifier",
																					"src": "22507:44:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22507:51:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22497:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22497:62:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22490:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22490:70:12"
															},
															"nodeType": "YulIf",
															"src": "22487:2:12"
														}
													]
												},
												"name": "validator_revert_t_contract$_IUniswapV2Router02_$1784",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22470:5:12",
														"type": ""
													}
												],
												"src": "22407:176:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22632:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22689:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22698:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22701:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22691:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22691:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22691:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22655:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22680:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "22662:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22662:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22652:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22652:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22645:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "22645:43:12"
															},
															"nodeType": "YulIf",
															"src": "22642:2:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22625:5:12",
														"type": ""
													}
												],
												"src": "22589:122:12"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_IERC20Upgradeable_$248(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20Upgradeable_$248(value)\n    }\n\n    function abi_decode_t_contract$_IFarm_$1804(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IFarm_$1804(value)\n    }\n\n    function abi_decode_t_contract$_IUniswapV2Factory_$1146(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IUniswapV2Factory_$1146(value)\n    }\n\n    function abi_decode_t_contract$_IUniswapV2Router02_$1784(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IUniswapV2Router02_$1784(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20Upgradeable_$248(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20Upgradeable_$248(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IFarm_$1804(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IFarm_$1804(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IUniswapV2Factory_$1146t_contract$_IUniswapV2Router02_$1784t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IERC20Upgradeable_$248t_contract$_IFarm_$1804(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IUniswapV2Factory_$1146(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IUniswapV2Router02_$1784(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20Upgradeable_$248(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_IERC20Upgradeable_$248(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_contract$_IERC20Upgradeable_$248(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_contract$_IERC20Upgradeable_$248(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_contract$_IFarm_$1804(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20Upgradeable_$248_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20Upgradeable_$248_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IFarm_$1804_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IFarm_$1804_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Factory_$1146_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Factory_$1146_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$1784_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$1784_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"executor: caller is not the exec\")\n\n        mstore(add(pos, 32), \"utor\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(pos, 32), \"r call\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n\n        mstore(add(pos, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(pos, 32), \"dy initialized\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"Address: call to non-contract\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n\n        mstore(add(pos, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(pos, 32), \"ot succeed\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$248__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20Upgradeable_$248_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IFarm_$1804__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IFarm_$1804_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Factory_$1146__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Factory_$1146_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1784__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Router02_$1784_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IERC20Upgradeable_$248(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IFarm_$1804(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IUniswapV2Factory_$1146(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IUniswapV2Router02_$1784(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20Upgradeable_$248_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20Upgradeable_$248_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20Upgradeable_$248_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IFarm_$1804_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IFarm_$1804_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IFarm_$1804_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Factory_$1146_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Factory_$1146_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Factory_$1146_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$1784_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Router02_$1784_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$1784_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20Upgradeable_$248(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20Upgradeable_$248(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IFarm_$1804(value) {\n        if iszero(eq(value, cleanup_t_contract$_IFarm_$1804(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IUniswapV2Factory_$1146(value) {\n        if iszero(eq(value, cleanup_t_contract$_IUniswapV2Factory_$1146(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IUniswapV2Router02_$1784(value) {\n        if iszero(eq(value, cleanup_t_contract$_IUniswapV2Router02_$1784(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102275760003560e01c80638da5cb5b11610130578063bd0b1f44116100b8578063db7f521a1161007c578063db7f521a146106c0578063ec1f1f69146106f0578063f10684541461070e578063f2fde38b1461072c578063f6d7eade1461074857610227565b8063bd0b1f4414610606578063c83dd23114610624578063d10c06a214610642578063d477f05f14610660578063d4f26c511461069057610227565b8063a36a7526116100ff578063a36a75261461053a578063aaf5bfc31461056a578063aaf5eb681461059a578063af5518c4146105b8578063b8bb97a1146105e857610227565b80638da5cb5b146104b057806391cca3db146104ce578063930ed033146104ec5780639da5b0d51461051c57610227565b80633e413bee116101b35780634ecaac41116101825780634ecaac411461041c57806355c746d11461043a57806358de5de81461046a578063715018a6146104885780637e47961c1461049257610227565b80633e413bee146103805780634591db501461039e57806348c7e528146103ce5780634ae6a027146103fe57610227565b80632c535a52116101fa5780632c535a52146102da5780633011d3d5146102f8578063358764761461031657806336e9332d146103325780633c850e1e1461035057610227565b806316d039931461022c5780631b0d8aab1461024a5780631e1bff3f1461027a57806327c42a50146102aa575b600080fd5b610234610766565b6040516102419190612ea3565b60405180910390f35b610264600480360381019061025f91906128f3565b61076c565b6040516102719190612d1a565b60405180910390f35b610294600480360381019061028f9190612739565b6107fa565b6040516102a19190612d1a565b60405180910390f35b6102c460048036038101906102bf91906128f3565b6108d9565b6040516102d19190612d1a565b60405180910390f35b6102e2610967565b6040516102ef9190612ea3565b60405180910390f35b61030061096d565b60405161030d9190612d35565b60405180910390f35b610330600480360381019061032b9190612855565b610993565b005b61033a610d27565b6040516103479190612d50565b60405180910390f35b61036a600480360381019061036591906128f3565b610d4d565b6040516103779190612d1a565b60405180910390f35b610388610ddb565b6040516103959190612d35565b60405180910390f35b6103b860048036038101906103b391906127b1565b610e01565b6040516103c59190612d1a565b60405180910390f35b6103e860048036038101906103e391906126e7565b610ea2565b6040516103f59190612d1a565b60405180910390f35b610406610ec2565b6040516104139190612ea3565b60405180910390f35b610424610ec8565b6040516104319190612d35565b60405180910390f35b610454600480360381019061044f91906127b1565b610eee565b6040516104619190612d1a565b60405180910390f35b610472610f8f565b60405161047f9190612d1a565b60405180910390f35b610490610fa2565b005b61049a61102a565b6040516104a79190612cad565b60405180910390f35b6104b8611050565b6040516104c59190612cad565b60405180910390f35b6104d661107a565b6040516104e39190612cad565b60405180910390f35b61050660048036038101906105019190612775565b6110a0565b6040516105139190612d1a565b60405180910390f35b610524611153565b6040516105319190612d1a565b60405180910390f35b610554600480360381019061054f91906126e7565b611166565b6040516105619190612d1a565b60405180910390f35b610584600480360381019061057f9190612803565b61122e565b6040516105919190612d1a565b60405180910390f35b6105a26112f6565b6040516105af9190612ea3565b60405180910390f35b6105d260048036038101906105cd91906128f3565b6112fc565b6040516105df9190612d1a565b60405180910390f35b6105f061138a565b6040516105fd9190612d35565b60405180910390f35b61060e6113b0565b60405161061b9190612ea3565b60405180910390f35b61062c6113b6565b6040516106399190612d6b565b60405180910390f35b61064a6113dc565b6040516106579190612d1a565b60405180910390f35b61067a600480360381019061067591906126e7565b6117cb565b6040516106879190612d1a565b60405180910390f35b6106aa60048036038101906106a5919061282c565b611893565b6040516106b79190612d1a565b60405180910390f35b6106da60048036038101906106d591906126e7565b61195b565b6040516106e79190612d1a565b60405180910390f35b6106f8611a23565b6040516107059190612cad565b60405180910390f35b610716611a49565b6040516107239190612ea3565b60405180910390f35b610746600480360381019061074191906126e7565b611a4f565b005b610750611b47565b60405161075d9190612d86565b60405180910390f35b60725481565b6000610776611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610794611050565b73ffffffffffffffffffffffffffffffffffffffff16146107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190612e43565b60405180910390fd5b8160738190555060019050919050565b6000610804611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610822611050565b73ffffffffffffffffffffffffffffffffffffffff1614610878576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086f90612e43565b60405180910390fd5b81606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001905092915050565b60006108e3611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610901611050565b73ffffffffffffffffffffffffffffffffffffffff1614610957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094e90612e43565b60405180910390fd5b81606e8190555060019050919050565b606f5481565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff16806109b9575060008054906101000a900460ff16155b6109f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ef90612e23565b60405180910390fd5b60008060019054906101000a900460ff161590508015610a48576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610a50611b75565b86606c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087606d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033606a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033606b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611388606e819055506109c4606f819055506109c46070819055506127106071819055506103e86072819055506001607460146101000a81548160ff0219169083151502179055506000607460156101000a81548160ff02191690831515021790555081607460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610d1d5760008060016101000a81548160ff0219169083151502179055505b5050505050505050565b607460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d57611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610d75611050565b73ffffffffffffffffffffffffffffffffffffffff1614610dcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc290612e43565b60405180910390fd5b8160708190555060019050919050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610e0b611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610e29611050565b73ffffffffffffffffffffffffffffffffffffffff1614610e7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7690612e43565b60405180910390fd5b81607460146101000a81548160ff02191690831515021790555060019050919050565b60656020528060005260406000206000915054906101000a900460ff1681565b60705481565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610ef8611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610f16611050565b73ffffffffffffffffffffffffffffffffffffffff1614610f6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6390612e43565b60405180910390fd5b81607460156101000a81548160ff02191690831515021790555060019050919050565b607460159054906101000a900460ff1681565b610faa611b6d565b73ffffffffffffffffffffffffffffffffffffffff16610fc8611050565b73ffffffffffffffffffffffffffffffffffffffff161461101e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101590612e43565b60405180910390fd5b6110286000611c5e565b565b607560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006110aa611b6d565b73ffffffffffffffffffffffffffffffffffffffff166110c8611050565b73ffffffffffffffffffffffffffffffffffffffff161461111e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111590612e43565b60405180910390fd5b61114933838573ffffffffffffffffffffffffffffffffffffffff16611d249092919063ffffffff16565b6001905092915050565b607460149054906101000a900460ff1681565b6000611170611b6d565b73ffffffffffffffffffffffffffffffffffffffff1661118e611050565b73ffffffffffffffffffffffffffffffffffffffff16146111e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111db90612e43565b60405180910390fd5b81606a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000611238611b6d565b73ffffffffffffffffffffffffffffffffffffffff16611256611050565b73ffffffffffffffffffffffffffffffffffffffff16146112ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a390612e43565b60405180910390fd5b81606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b60715481565b6000611306611b6d565b73ffffffffffffffffffffffffffffffffffffffff16611324611050565b73ffffffffffffffffffffffffffffffffffffffff161461137a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137190612e43565b60405180910390fd5b81606f8190555060019050919050565b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606e5481565b606d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661146a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146190612de3565b60405180910390fd5b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114c79190612cad565b60206040518083038186803b1580156114df57600080fd5b505afa1580156114f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611517919061291c565b90506000611544607154611536606e5485611daa90919063ffffffff16565b611dc090919063ffffffff16565b90506000611571607154611563606f5486611daa90919063ffffffff16565b611dc090919063ffffffff16565b9050600061159a8261158c8587611dd690919063ffffffff16565b611dd690919063ffffffff16565b905061160b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d249092919063ffffffff16565b61167a606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d249092919063ffffffff16565b6116e9606b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d249092919063ffffffff16565b607460149054906101000a900460ff161561170757611706611dec565b5b607460159054906101000a900460ff16156117c057607560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663796c7be76040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561178657600080fd5b505af115801561179a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117be91906127da565b505b600194505050505090565b60006117d5611b6d565b73ffffffffffffffffffffffffffffffffffffffff166117f3611050565b73ffffffffffffffffffffffffffffffffffffffff1614611849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184090612e43565b60405180910390fd5b81606b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600061189d611b6d565b73ffffffffffffffffffffffffffffffffffffffff166118bb611050565b73ffffffffffffffffffffffffffffffffffffffff1614611911576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190890612e43565b60405180910390fd5b81607460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b6000611965611b6d565b73ffffffffffffffffffffffffffffffffffffffff16611983611050565b73ffffffffffffffffffffffffffffffffffffffff16146119d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119d090612e43565b60405180910390fd5b81607560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b606a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60735481565b611a57611b6d565b73ffffffffffffffffffffffffffffffffffffffff16611a75611050565b73ffffffffffffffffffffffffffffffffffffffff1614611acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac290612e43565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611b3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b3290612dc3565b60405180910390fd5b611b4481611c5e565b50565b606c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600060019054906101000a900460ff1680611b9b575060008054906101000a900460ff16155b611bda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bd190612e23565b60405180910390fd5b60008060019054906101000a900460ff161590508015611c2a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611c326121d0565b611c3a6122a9565b8015611c5b5760008060016101000a81548160ff0219169083151502179055505b50565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611da58363a9059cbb60e01b8484604051602401611d43929190612cf1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612392565b505050565b60008183611db89190612fae565b905092915050565b60008183611dce9190612f7d565b905092915050565b60008183611de49190613008565b905092915050565b6000606d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e6a43905606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401611e8f929190612cc8565b60206040518083038186803b158015611ea757600080fd5b505afa158015611ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edf9190612710565b90506000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401611f3e9190612cad565b60206040518083038186803b158015611f5657600080fd5b505afa158015611f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8e919061291c565b90506000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401611fed9190612cad565b60206040518083038186803b15801561200557600080fd5b505afa158015612019573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061203d919061291c565b90506000670de0b6b3a764000090506000612073846120658486611daa90919063ffffffff16565b611dc090919063ffffffff16565b9050600080670de0b6b3a76400008311156120ed576120bb655af3107a40006120ad670de0b6b3a764000086611dd690919063ffffffff16565b611dc090919063ffffffff16565b90506072548111156120d057600091506120e8565b6120e581607254611dd690919063ffffffff16565b91505b612133565b612119655af3107a400084670de0b6b3a764000061210b9190613008565b611dc090919063ffffffff16565b90506121308160725461245990919063ffffffff16565b91505b607460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166346ca6bea6073548460016040518463ffffffff1660e01b815260040161219593929190612ebe565b600060405180830381600087803b1580156121af57600080fd5b505af11580156121c3573d6000803e3d6000fd5b5050505050505050505050565b600060019054906101000a900460ff16806121f6575060008054906101000a900460ff16155b612235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222c90612e23565b60405180910390fd5b60008060019054906101000a900460ff161590508015612285576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156122a65760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806122cf575060008054906101000a900460ff16155b61230e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161230590612e23565b60405180910390fd5b60008060019054906101000a900460ff16159050801561235e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61236e612369611b6d565b611c5e565b801561238f5760008060016101000a81548160ff0219169083151502179055505b50565b60006123f4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661246f9092919063ffffffff16565b9050600081511115612454578080602001905181019061241491906127da565b612453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161244a90612e83565b60405180910390fd5b5b505050565b600081836124679190612f27565b905092915050565b606061247e8484600085612487565b90509392505050565b6060824710156124cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124c390612e03565b60405180910390fd5b6124d58561259b565b612514576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161250b90612e63565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161253d9190612c96565b60006040518083038185875af1925050503d806000811461257a576040519150601f19603f3d011682016040523d82523d6000602084013e61257f565b606091505b509150915061258f8282866125ae565b92505050949350505050565b600080823b905060008111915050919050565b606083156125be5782905061260e565b6000835111156125d15782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126059190612da1565b60405180910390fd5b9392505050565b600081359050612624816131fe565b92915050565b600081519050612639816131fe565b92915050565b60008135905061264e81613215565b92915050565b60008151905061266381613215565b92915050565b6000813590506126788161322c565b92915050565b60008135905061268d81613243565b92915050565b6000813590506126a28161325a565b92915050565b6000813590506126b781613271565b92915050565b6000813590506126cc81613288565b92915050565b6000815190506126e181613288565b92915050565b6000602082840312156126f957600080fd5b600061270784828501612615565b91505092915050565b60006020828403121561272257600080fd5b60006127308482850161262a565b91505092915050565b6000806040838503121561274c57600080fd5b600061275a85828601612615565b925050602061276b8582860161263f565b9150509250929050565b6000806040838503121561278857600080fd5b600061279685828601612615565b92505060206127a7858286016126bd565b9150509250929050565b6000602082840312156127c357600080fd5b60006127d18482850161263f565b91505092915050565b6000602082840312156127ec57600080fd5b60006127fa84828501612654565b91505092915050565b60006020828403121561281557600080fd5b600061282384828501612669565b91505092915050565b60006020828403121561283e57600080fd5b600061284c8482850161267e565b91505092915050565b600080600080600080600060e0888a03121561287057600080fd5b600061287e8a828b01612693565b975050602061288f8a828b016126a8565b96505060406128a08a828b01612669565b95505060606128b18a828b01612669565b94505060806128c28a828b01612669565b93505060a06128d38a828b01612669565b92505060c06128e48a828b0161267e565b91505092959891949750929550565b60006020828403121561290557600080fd5b6000612913848285016126bd565b91505092915050565b60006020828403121561292e57600080fd5b600061293c848285016126d2565b91505092915050565b61294e8161303c565b82525050565b61295d8161304e565b82525050565b600061296e82612ef5565b6129788185612f0b565b935061298881856020860161315c565b80840191505092915050565b61299d816130cc565b82525050565b6129ac816130f0565b82525050565b6129bb81613114565b82525050565b6129ca81613138565b82525050565b60006129db82612f00565b6129e58185612f16565b93506129f581856020860161315c565b6129fe816131ed565b840191505092915050565b6000612a16602683612f16565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a7c602483612f16565b91507f6578656375746f723a2063616c6c6572206973206e6f7420746865206578656360008301527f75746f72000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ae2602683612f16565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612b48602e83612f16565b91507f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008301527f647920696e697469616c697a65640000000000000000000000000000000000006020830152604082019050919050565b6000612bae602083612f16565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000612bee601d83612f16565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6000612c2e602a83612f16565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b612c90816130c2565b82525050565b6000612ca28284612963565b915081905092915050565b6000602082019050612cc26000830184612945565b92915050565b6000604082019050612cdd6000830185612945565b612cea6020830184612945565b9392505050565b6000604082019050612d066000830185612945565b612d136020830184612c87565b9392505050565b6000602082019050612d2f6000830184612954565b92915050565b6000602082019050612d4a6000830184612994565b92915050565b6000602082019050612d6560008301846129a3565b92915050565b6000602082019050612d8060008301846129b2565b92915050565b6000602082019050612d9b60008301846129c1565b92915050565b60006020820190508181036000830152612dbb81846129d0565b905092915050565b60006020820190508181036000830152612ddc81612a09565b9050919050565b60006020820190508181036000830152612dfc81612a6f565b9050919050565b60006020820190508181036000830152612e1c81612ad5565b9050919050565b60006020820190508181036000830152612e3c81612b3b565b9050919050565b60006020820190508181036000830152612e5c81612ba1565b9050919050565b60006020820190508181036000830152612e7c81612be1565b9050919050565b60006020820190508181036000830152612e9c81612c21565b9050919050565b6000602082019050612eb86000830184612c87565b92915050565b6000606082019050612ed36000830186612c87565b612ee06020830185612c87565b612eed6040830184612954565b949350505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000612f32826130c2565b9150612f3d836130c2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612f7257612f7161318f565b5b828201905092915050565b6000612f88826130c2565b9150612f93836130c2565b925082612fa357612fa26131be565b5b828204905092915050565b6000612fb9826130c2565b9150612fc4836130c2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612ffd57612ffc61318f565b5b828202905092915050565b6000613013826130c2565b915061301e836130c2565b9250828210156130315761303061318f565b5b828203905092915050565b6000613047826130a2565b9050919050565b60008115159050919050565b60006130658261303c565b9050919050565b60006130778261303c565b9050919050565b60006130898261303c565b9050919050565b600061309b8261303c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006130d7826130de565b9050919050565b60006130e9826130a2565b9050919050565b60006130fb82613102565b9050919050565b600061310d826130a2565b9050919050565b600061311f82613126565b9050919050565b6000613131826130a2565b9050919050565b60006131438261314a565b9050919050565b6000613155826130a2565b9050919050565b60005b8381101561317a57808201518184015260208101905061315f565b83811115613189576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6132078161303c565b811461321257600080fd5b50565b61321e8161304e565b811461322957600080fd5b50565b6132358161305a565b811461324057600080fd5b50565b61324c8161306c565b811461325757600080fd5b50565b6132638161307e565b811461326e57600080fd5b50565b61327a81613090565b811461328557600080fd5b50565b613291816130c2565b811461329c57600080fd5b5056fea2646970667358221220fd248191e56cc7b8697ff9d7d4c9dee6ca8abca04fa6d345ee1147d71bc7f80764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x227 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xBD0B1F44 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xDB7F521A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDB7F521A EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xEC1F1F69 EQ PUSH2 0x6F0 JUMPI DUP1 PUSH4 0xF1068454 EQ PUSH2 0x70E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0xF6D7EADE EQ PUSH2 0x748 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xBD0B1F44 EQ PUSH2 0x606 JUMPI DUP1 PUSH4 0xC83DD231 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0xD10C06A2 EQ PUSH2 0x642 JUMPI DUP1 PUSH4 0xD477F05F EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0xD4F26C51 EQ PUSH2 0x690 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0xA36A7526 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA36A7526 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xAAF5BFC3 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0xAF5518C4 EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xB8BB97A1 EQ PUSH2 0x5E8 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B0 JUMPI DUP1 PUSH4 0x91CCA3DB EQ PUSH2 0x4CE JUMPI DUP1 PUSH4 0x930ED033 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0x9DA5B0D5 EQ PUSH2 0x51C JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE GT PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x4ECAAC41 GT PUSH2 0x182 JUMPI DUP1 PUSH4 0x4ECAAC41 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x55C746D1 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x58DE5DE8 EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x7E47961C EQ PUSH2 0x492 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x4591DB50 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x48C7E528 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x4AE6A027 EQ PUSH2 0x3FE JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x2C535A52 GT PUSH2 0x1FA JUMPI DUP1 PUSH4 0x2C535A52 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x3011D3D5 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x35876476 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x36E9332D EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x3C850E1E EQ PUSH2 0x350 JUMPI PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH4 0x16D03993 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x1B0D8AAB EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x27C42A50 EQ PUSH2 0x2AA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x234 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x2739 JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33A PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x2D50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH2 0xDDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x395 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x406 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x424 PUSH2 0xEC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x490 PUSH2 0xFA2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49A PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B8 PUSH2 0x1050 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x2775 JUMP JUMPDEST PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x524 PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x2803 JUMP JUMPDEST PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A2 PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CD SWAP2 SWAP1 PUSH2 0x28F3 JUMP JUMPDEST PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F0 PUSH2 0x138A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x2D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60E PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62C PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x2D6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64A PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x67A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x675 SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x17CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x687 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x282C JUMP JUMPDEST PUSH2 0x1893 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D5 SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x195B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x2D1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F8 PUSH2 0x1A23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x705 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x716 PUSH2 0x1A49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x746 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x1A4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x750 PUSH2 0x1B47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x72 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x776 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x794 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x73 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x804 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x822 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x878 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86F SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x65 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E3 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x901 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94E SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6E DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9B9 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x9F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EF SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0xA48 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xA50 PUSH2 0x1B75 JUMP JUMPDEST DUP7 PUSH1 0x6C PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x6D PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x66 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x68 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x69 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6A PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x6B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1388 PUSH1 0x6E DUP2 SWAP1 SSTORE POP PUSH2 0x9C4 PUSH1 0x6F DUP2 SWAP1 SSTORE POP PUSH2 0x9C4 PUSH1 0x70 DUP2 SWAP1 SSTORE POP PUSH2 0x2710 PUSH1 0x71 DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 PUSH1 0x72 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x74 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x74 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x74 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x67 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x74 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD57 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD75 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC2 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x70 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE0B PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE29 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE76 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x74 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x70 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF8 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF16 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF63 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x74 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x74 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xFAA PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFC8 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x101E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1015 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1028 PUSH1 0x0 PUSH2 0x1C5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x75 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AA PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10C8 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1115 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1149 CALLER DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D24 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x74 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1170 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x118E PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DB SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6A PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1238 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1256 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A3 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x67 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x71 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1306 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1324 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x137A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1371 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6F DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6E SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6D PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x65 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x146A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1461 SWAP1 PUSH2 0x2DE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C7 SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1517 SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1544 PUSH1 0x71 SLOAD PUSH2 0x1536 PUSH1 0x6E SLOAD DUP6 PUSH2 0x1DAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1571 PUSH1 0x71 SLOAD PUSH2 0x1563 PUSH1 0x6F SLOAD DUP7 PUSH2 0x1DAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x159A DUP3 PUSH2 0x158C DUP6 DUP8 PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x160B PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D24 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x167A PUSH1 0x6A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D24 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x16E9 PUSH1 0x6B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D24 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x74 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1707 JUMPI PUSH2 0x1706 PUSH2 0x1DEC JUMP JUMPDEST JUMPDEST PUSH1 0x74 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x17C0 JUMPI PUSH1 0x75 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x796C7BE7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x179A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17BE SWAP2 SWAP1 PUSH2 0x27DA JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D5 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17F3 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1840 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189D PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18BB PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1911 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1908 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x74 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1965 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1983 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D0 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x75 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6A PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x73 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A57 PUSH2 0x1B6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A75 PUSH2 0x1050 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1ACB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC2 SWAP1 PUSH2 0x2E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B32 SWAP1 PUSH2 0x2DC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x1C5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6C PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1B9B JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1BDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD1 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x1C2A JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1C32 PUSH2 0x21D0 JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x22A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1DA5 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D43 SWAP3 SWAP2 SWAP1 PUSH2 0x2CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2392 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1DB8 SWAP2 SWAP1 PUSH2 0x2FAE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1DCE SWAP2 SWAP1 PUSH2 0x2F7D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1DE4 SWAP2 SWAP1 PUSH2 0x3008 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6D PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE6A43905 PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8F SWAP3 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EDF SWAP2 SWAP1 PUSH2 0x2710 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3E SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F8E SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FED SWAP2 SWAP1 PUSH2 0x2CAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2019 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x203D SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 SWAP1 POP PUSH1 0x0 PUSH2 0x2073 DUP5 PUSH2 0x2065 DUP5 DUP7 PUSH2 0x1DAA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 DUP4 GT ISZERO PUSH2 0x20ED JUMPI PUSH2 0x20BB PUSH6 0x5AF3107A4000 PUSH2 0x20AD PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x72 SLOAD DUP2 GT ISZERO PUSH2 0x20D0 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x20E8 JUMP JUMPDEST PUSH2 0x20E5 DUP2 PUSH1 0x72 SLOAD PUSH2 0x1DD6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x2133 JUMP JUMPDEST PUSH2 0x2119 PUSH6 0x5AF3107A4000 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x210B SWAP2 SWAP1 PUSH2 0x3008 JUMP JUMPDEST PUSH2 0x1DC0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2130 DUP2 PUSH1 0x72 SLOAD PUSH2 0x2459 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x74 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x46CA6BEA PUSH1 0x73 SLOAD DUP5 PUSH1 0x1 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2195 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EBE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x21F6 JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2235 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x222C SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x2285 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 ISZERO PUSH2 0x22A6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x22CF JUMPI POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x230E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2305 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x235E JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x236E PUSH2 0x2369 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0x1C5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x238F JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23F4 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x246F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2454 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2414 SWAP2 SWAP1 PUSH2 0x27DA JUMP JUMPDEST PUSH2 0x2453 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x244A SWAP1 PUSH2 0x2E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2467 SWAP2 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x247E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2487 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x24CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C3 SWAP1 PUSH2 0x2E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24D5 DUP6 PUSH2 0x259B JUMP JUMPDEST PUSH2 0x2514 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250B SWAP1 PUSH2 0x2E63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x253D SWAP2 SWAP1 PUSH2 0x2C96 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x257A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x257F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x258F DUP3 DUP3 DUP7 PUSH2 0x25AE JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x25BE JUMPI DUP3 SWAP1 POP PUSH2 0x260E JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x25D1 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2605 SWAP2 SWAP1 PUSH2 0x2DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2624 DUP2 PUSH2 0x31FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2639 DUP2 PUSH2 0x31FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x264E DUP2 PUSH2 0x3215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2663 DUP2 PUSH2 0x3215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2678 DUP2 PUSH2 0x322C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x268D DUP2 PUSH2 0x3243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26A2 DUP2 PUSH2 0x325A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26B7 DUP2 PUSH2 0x3271 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x26CC DUP2 PUSH2 0x3288 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26E1 DUP2 PUSH2 0x3288 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2707 DUP5 DUP3 DUP6 ADD PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2730 DUP5 DUP3 DUP6 ADD PUSH2 0x262A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x274C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x275A DUP6 DUP3 DUP7 ADD PUSH2 0x2615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x276B DUP6 DUP3 DUP7 ADD PUSH2 0x263F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2796 DUP6 DUP3 DUP7 ADD PUSH2 0x2615 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27A7 DUP6 DUP3 DUP7 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27D1 DUP5 DUP3 DUP6 ADD PUSH2 0x263F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27FA DUP5 DUP3 DUP6 ADD PUSH2 0x2654 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2815 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2823 DUP5 DUP3 DUP6 ADD PUSH2 0x2669 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x283E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x284C DUP5 DUP3 DUP6 ADD PUSH2 0x267E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x287E DUP11 DUP3 DUP12 ADD PUSH2 0x2693 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x288F DUP11 DUP3 DUP12 ADD PUSH2 0x26A8 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x28A0 DUP11 DUP3 DUP12 ADD PUSH2 0x2669 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x28B1 DUP11 DUP3 DUP12 ADD PUSH2 0x2669 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x28C2 DUP11 DUP3 DUP12 ADD PUSH2 0x2669 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x28D3 DUP11 DUP3 DUP12 ADD PUSH2 0x2669 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x28E4 DUP11 DUP3 DUP12 ADD PUSH2 0x267E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2913 DUP5 DUP3 DUP6 ADD PUSH2 0x26BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x292E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x293C DUP5 DUP3 DUP6 ADD PUSH2 0x26D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x294E DUP2 PUSH2 0x303C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x295D DUP2 PUSH2 0x304E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x296E DUP3 PUSH2 0x2EF5 JUMP JUMPDEST PUSH2 0x2978 DUP2 DUP6 PUSH2 0x2F0B JUMP JUMPDEST SWAP4 POP PUSH2 0x2988 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x315C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x299D DUP2 PUSH2 0x30CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29AC DUP2 PUSH2 0x30F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29BB DUP2 PUSH2 0x3114 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29CA DUP2 PUSH2 0x3138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29DB DUP3 PUSH2 0x2F00 JUMP JUMPDEST PUSH2 0x29E5 DUP2 DUP6 PUSH2 0x2F16 JUMP JUMPDEST SWAP4 POP PUSH2 0x29F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x315C JUMP JUMPDEST PUSH2 0x29FE DUP2 PUSH2 0x31ED JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A16 PUSH1 0x26 DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7C PUSH1 0x24 DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x6578656375746F723A2063616C6C6572206973206E6F74207468652065786563 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x75746F7200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE2 PUSH1 0x26 DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B48 PUSH1 0x2E DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BAE PUSH1 0x20 DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BEE PUSH1 0x1D DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2E PUSH1 0x2A DUP4 PUSH2 0x2F16 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C90 DUP2 PUSH2 0x30C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA2 DUP3 DUP5 PUSH2 0x2963 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2945 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CDD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x2CEA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2945 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D06 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x2D13 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2C87 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D2F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2954 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2994 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D9B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DBB DUP2 DUP5 PUSH2 0x29D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DDC DUP2 PUSH2 0x2A09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DFC DUP2 PUSH2 0x2A6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E1C DUP2 PUSH2 0x2AD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E3C DUP2 PUSH2 0x2B3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E5C DUP2 PUSH2 0x2BA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E7C DUP2 PUSH2 0x2BE1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E9C DUP2 PUSH2 0x2C21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EB8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2ED3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2C87 JUMP JUMPDEST PUSH2 0x2EE0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2C87 JUMP JUMPDEST PUSH2 0x2EED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2954 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F32 DUP3 PUSH2 0x30C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F3D DUP4 PUSH2 0x30C2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2F72 JUMPI PUSH2 0x2F71 PUSH2 0x318F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F88 DUP3 PUSH2 0x30C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F93 DUP4 PUSH2 0x30C2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2FA3 JUMPI PUSH2 0x2FA2 PUSH2 0x31BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB9 DUP3 PUSH2 0x30C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC4 DUP4 PUSH2 0x30C2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2FFD JUMPI PUSH2 0x2FFC PUSH2 0x318F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3013 DUP3 PUSH2 0x30C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x301E DUP4 PUSH2 0x30C2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3031 JUMPI PUSH2 0x3030 PUSH2 0x318F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3047 DUP3 PUSH2 0x30A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3065 DUP3 PUSH2 0x303C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3077 DUP3 PUSH2 0x303C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3089 DUP3 PUSH2 0x303C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x309B DUP3 PUSH2 0x303C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D7 DUP3 PUSH2 0x30DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E9 DUP3 PUSH2 0x30A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30FB DUP3 PUSH2 0x3102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310D DUP3 PUSH2 0x30A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x311F DUP3 PUSH2 0x3126 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3131 DUP3 PUSH2 0x30A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3143 DUP3 PUSH2 0x314A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3155 DUP3 PUSH2 0x30A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x317A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x315F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3189 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3207 DUP2 PUSH2 0x303C JUMP JUMPDEST DUP2 EQ PUSH2 0x3212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x321E DUP2 PUSH2 0x304E JUMP JUMPDEST DUP2 EQ PUSH2 0x3229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3235 DUP2 PUSH2 0x305A JUMP JUMPDEST DUP2 EQ PUSH2 0x3240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x324C DUP2 PUSH2 0x306C JUMP JUMPDEST DUP2 EQ PUSH2 0x3257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3263 DUP2 PUSH2 0x307E JUMP JUMPDEST DUP2 EQ PUSH2 0x326E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x327A DUP2 PUSH2 0x3090 JUMP JUMPDEST DUP2 EQ PUSH2 0x3285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3291 DUP2 PUSH2 0x30C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x329C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0x24 DUP2 SWAP2 0xE5 PUSH13 0xC7B8697FF9D7D4C9DEE6CA8ABC LOG0 0x4F 0xA6 0xD3 GASLIMIT 0xEE GT SELFBALANCE 0xD7 SHL 0xC7 0xF8 SMOD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "909:5267:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1525:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5775:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2591:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4949:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1429:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1132:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1701:884;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1580:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5221:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1166:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5357:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1086:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1461:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5496:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1636:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1934:101:0;;;:::i;:::-;;1669:25:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1302:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1293:18:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4478:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1604:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4699:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5893:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1494:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5087:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1235:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1395:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1356:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2901:657;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4823:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6060:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5635:134;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1270:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1555:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2184:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1318:32:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1525:24;;;;:::o;5775:112::-;5833:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5855:4:11::1;5849:3;:10;;;;5876:4;5869:11;;5775:112:::0;;;:::o;2591:177::-;2694:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2735:5:11::1;2714:8;:18;2723:8;2714:18;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;2757:4;2750:11;;2591:177:::0;;;;:::o;4949:132::-;5017:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5049:4:11::1;5033:13;:20;;;;5070:4;5063:11;;4949:132:::0;;;:::o;1429:26::-;;;;:::o;1132:28::-;;;;;;;;;;;;;:::o;1701:884::-;539:13:1;;;;;;;;;;;:30;;;;557:12;;;;;;;;;;556:13;539:30;531:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;631:19;654:13;;;;;;;;;;;653:14;631:36;;681:14;677:98;;;727:4;711:13;;:20;;;;;;;;;;;;;;;;;;760:4;745:12;;:19;;;;;;;;;;;;;;;;;;677:98;2067:16:11::1;:14;:16::i;:::-;2146:7;2137:6;;:16;;;;;;;;;;;;;;;;;;2173:8;2163:7;;:18;;;;;;;;;;;;;;;;;;2197:4;2191:3;;:10;;;;;;;;;;;;;;;;;;2217:4;2211:3;;:10;;;;;;;;;;;;;;;;;;2238:5;2231:4;;:12;;;;;;;;;;;;;;;;;;2258:10;2253:2;;:15;;;;;;;;;;;;;;;;;;2284:10;2278:3;;:16;;;;;;;;;;;;;;;;;;2320:4;2304:13;:20;;;;2348:4;2334:11;:18;;;;2377:4;2362:12;:19;;;;2403:5;2391:9;:17;;;;2430:4;2418:9;:16;;;;2461:4;2444:14;;:21;;;;;;;;;;;;;;;;;;2492:5;2475:14;;:22;;;;;;;;;;;;;;;;;;2514:5;2507:4;;:12;;;;;;;;;;;;;;;;;;2536:5;2529:4;;:12;;;;;;;;;;;;;;;;;;801:14:1::0;797:66;;;847:5;831:13;;:21;;;;;;;;;;;;;;;;;;797:66;1701:884:11;;;;;;;;:::o;1580:17::-;;;;;;;;;;;;;:::o;5221:130::-;5288:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5319:4:11::1;5304:12;:19;;;;5340:4;5333:11;;5221:130:::0;;;:::o;1166:29::-;;;;;;;;;;;;;:::o;5357:133::-;5424:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5457:5:11::1;5440:14;;:22;;;;;;;;;;;;;;;;;;5479:4;5472:11;;5357:133:::0;;;:::o;1086:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;1461:27::-;;;;:::o;1201:28::-;;;;;;;;;;;;;:::o;5496:133::-;5563:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5596:5:11::1;5579:14;;:22;;;;;;;;;;;;;;;;;;5618:4;5611:11;;5496:133:::0;;;:::o;1636:26::-;;;;;;;;;;;;;:::o;1934:101:0:-;1525:12;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1998:30:::1;2025:1;1998:18;:30::i;:::-;1934:101::o:0;1669:25:11:-;;;;;;;;;;;;;:::o;1302:85:0:-;1348:7;1374:6;;;;;;;;;;;1367:13;;1302:85;:::o;1293:18:11:-;;;;;;;;;;;;;:::o;4478:215::-;4587:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4607:58:11::1;4648:10;4660:4;4625:8;4607:40;;;;:58;;;;;:::i;:::-;4682:4;4675:11;;4478:215:::0;;;;:::o;1604:26::-;;;;;;;;;;;;;:::o;4699:118::-;4760:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4781:8:11::1;4776:2;;:13;;;;;;;;;;;;;;;;;;4806:4;4799:11;;4699:118:::0;;;:::o;5893:161::-;5994:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6021:5:11::1;6014:4;;:12;;;;;;;;;;;;;;;;;;6043:4;6036:11;;5893:161:::0;;;:::o;1494:24::-;;;;:::o;5087:128::-;5153:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5183:4:11::1;5169:11;:18;;;;5204:4;5197:11;;5087:128:::0;;;:::o;1235:29::-;;;;;;;;;;;;;:::o;1395:28::-;;;;:::o;1356:32::-;;;;;;;;;;;;;:::o;2901:657::-;2958:4;2816:8;:20;2825:10;2816:20;;;;;;;;;;;;;;;;;;;;;;;;;2808:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2974:20:::1;2997:3;;;;;;;;;;;:13;;;3019:4;2997:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2974:51;;3035:14;3052:46;3088:9;;3052:31;3069:13;;3052:12;:16;;:31;;;;:::i;:::-;:35;;:46;;;;:::i;:::-;3035:63;;3108:12;3123:44;3157:9;;3123:29;3140:11;;3123:12;:16;;:29;;;;:::i;:::-;:33;;:44;;;;:::i;:::-;3108:59;;3177:13;3193:34;3222:4;3193:24;3210:6;3193:12;:16;;:24;;;;:::i;:::-;:28;;:34;;;;:::i;:::-;3177:50;;3238:39;3263:4;;;;;;;;;;;3270:6;3238:3;;;;;;;;;;;:16;;;;:39;;;;;:::i;:::-;3287:35;3312:2;;;;;;;;;;;3317:4;3287:3;;;;;;;;;;;:16;;;;:35;;;;;:::i;:::-;3332:37;3357:3;;;;;;;;;;;3363:5;3332:3;;;;;;;;;;;:16;;;;:37;;;;;:::i;:::-;3384:14;;;;;;;;;;;3380:57;;;3414:12;:10;:12::i;:::-;3380:57;3451:14;;;;;;;;;;;3447:83;;;3493:10;;;;;;;;;;;3481:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3447:83;3547:4;3540:11;;;;;;2901:657:::0;:::o;4823:120::-;4885:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4907:8:11::1;4901:3;;:14;;;;;;;;;;;;;;;;;;4932:4;4925:11;;4823:120:::0;;;:::o;6060:114::-;6118:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6141:5:11::1;6134:4;;:12;;;;;;;;;;;;;;;;;;6163:4;6156:11;;6060:114:::0;;;:::o;5635:134::-;5704:4;1525:12:0;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5733:8:11::1;5720:10;;:21;;;;;;;;;;;;;;;;;;5758:4;5751:11;;5635:134:::0;;;:::o;1270:17::-;;;;;;;;;;;;;:::o;1555:18::-;;;;:::o;2184:198:0:-;1525:12;:10;:12::i;:::-;1514:23;;:7;:5;:7::i;:::-;:23;;;1506:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2292:1:::1;2272:22;;:8;:22;;;;2264:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2347:28;2366:8;2347:18;:28::i;:::-;2184:198:::0;:::o;1318:32:11:-;;;;;;;;;;;;;:::o;876:96:5:-;929:7;955:10;948:17;;876:96;:::o;988:126:0:-;539:13:1;;;;;;;;;;;:30;;;;557:12;;;;;;;;;;556:13;539:30;531:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;631:19;654:13;;;;;;;;;;;653:14;631:36;;681:14;677:98;;;727:4;711:13;;:20;;;;;;;;;;;;;;;;;;760:4;745:12;;:19;;;;;;;;;;;;;;;;;;677:98;1045:26:0::1;:24;:26::i;:::-;1081;:24;:26::i;:::-;801:14:1::0;797:66;;;847:5;831:13;;:21;;;;;;;;;;;;;;;;;;797:66;988:126:0;:::o;2536:187::-;2609:16;2628:6;;;;;;;;;;;2609:25;;2653:8;2644:6;;:17;;;;;;;;;;;;;;;;;;2707:8;2676:40;;2697:8;2676:40;;;;;;;;;;;;2536:187;;:::o;745:216:3:-;868:86;888:5;918:23;;;943:2;947:5;895:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:19;:86::i;:::-;745:216;;;:::o;3462:96:6:-;3520:7;3550:1;3546;:5;;;;:::i;:::-;3539:12;;3462:96;;;;:::o;3847:::-;3905:7;3935:1;3931;:5;;;;:::i;:::-;3924:12;;3847:96;;;;:::o;3119:::-;3177:7;3207:1;3203;:5;;;;:::i;:::-;3196:12;;3119:96;;;;:::o;3564:908:11:-;3605:19;3627:7;;;;;;;;;;;:15;;;3651:4;;;;;;;;;;;3666:3;;;;;;;;;;;3627:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3605:66;;3681:20;3704:3;;;;;;;;;;;:13;;;3718:11;3704:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3681:49;;3740:21;3764:4;;;;;;;;;;;:14;;;3779:11;3764:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3740:51;;3801:11;3815:4;3801:18;;3829:16;3848:40;3875:12;3848:22;3866:3;3848:13;:17;;:22;;;;:::i;:::-;:26;;:40;;;;:::i;:::-;3829:59;;3898:29;3937:17;3979:4;3968:8;:15;3964:446;;;4032:30;4057:4;4033:18;4046:4;4033:8;:12;;:18;;;;:::i;:::-;4032:24;;:30;;;;:::i;:::-;4020:42;;4092:9;;4080;:21;4076:172;;;4145:1;4121:25;;4076:172;;;4209:24;4223:9;4209;;:13;;:24;;;;:::i;:::-;4185:48;;4076:172;3964:446;;;4310:27;4332:4;4318:8;4311:4;:15;;;;:::i;:::-;4310:21;;:27;;;;:::i;:::-;4298:39;;4375:24;4389:9;4375;;:13;;:24;;;;:::i;:::-;4351:48;;3964:446;4419:4;;;;;;;;;;;:12;;;4432:3;;4437:21;4460:4;4419:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3564:908;;;;;;;:::o;807:64:5:-;539:13:1;;;;;;;;;;;:30;;;;557:12;;;;;;;;;;556:13;539:30;531:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;631:19;654:13;;;;;;;;;;;653:14;631:36;;681:14;677:98;;;727:4;711:13;;:20;;;;;;;;;;;;;;;;;;760:4;745:12;;:19;;;;;;;;;;;;;;;;;;677:98;801:14;797:66;;;847:5;831:13;;:21;;;;;;;;;;;;;;;;;;797:66;807:64:5;:::o;1120:106:0:-;539:13:1;;;;;;;;;;;:30;;;;557:12;;;;;;;;;;556:13;539:30;531:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;631:19;654:13;;;;;;;;;;;653:14;631:36;;681:14;677:98;;;727:4;711:13;;:20;;;;;;;;;;;;;;;;;;760:4;745:12;;:19;;;;;;;;;;;;;;;;;;677:98;1187:32:0::1;1206:12;:10;:12::i;:::-;1187:18;:32::i;:::-;801:14:1::0;797:66;;;847:5;831:13;;:21;;;;;;;;;;;;;;;;;;797:66;1120:106:0;:::o;3306:717:3:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;3762:27;;;;:69;;;;;:::i;:::-;3736:95;;3865:1;3845:10;:17;:21;3841:176;;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3841:176;3306:717;;;:::o;2752:96:6:-;2810:7;2840:1;2836;:5;;;;:::i;:::-;2829:12;;2752:96;;;;:::o;3525:223:4:-;3658:12;3689:52;3711:6;3719:4;3725:1;3728:12;3689:21;:52::i;:::-;3682:59;;3525:223;;;;;:::o;4612:499::-;4777:12;4834:5;4809:21;:30;;4801:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4900:18;4911:6;4900:10;:18::i;:::-;4892:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4964:12;4978:23;5005:6;:11;;5024:5;5031:4;5005:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4963:73;;;;5053:51;5070:7;5079:10;5091:12;5053:16;:51::i;:::-;5046:58;;;;4612:499;;;;;;:::o;782:377::-;842:4;1045:12;1110:7;1098:20;1090:28;;1151:1;1144:4;:8;1137:15;;;782:377;;;:::o;6275:692::-;6421:12;6449:7;6445:516;;;6479:10;6472:17;;;;6445:516;6610:1;6590:10;:17;:21;6586:365;;;6784:10;6778:17;6844:15;6831:10;6827:2;6823:19;6816:44;6733:145;6923:12;6916:20;;;;;;;;;;;:::i;:::-;;;;;;;;6275:692;;;;;;:::o;7:139:12:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:143::-;;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;215:80;;;;:::o;301:133::-;;382:6;369:20;360:29;;398:30;422:5;398:30;:::i;:::-;350:84;;;;:::o;440:137::-;;525:6;519:13;510:22;;541:30;565:5;541:30;:::i;:::-;500:77;;;;:::o;583:189::-;;692:6;679:20;670:29;;708:58;760:5;708:58;:::i;:::-;660:112;;;;:::o;778:167::-;;876:6;863:20;854:29;;892:47;933:5;892:47;:::i;:::-;844:101;;;;:::o;951:191::-;;1061:6;1048:20;1039:29;;1077:59;1130:5;1077:59;:::i;:::-;1029:113;;;;:::o;1148:193::-;;1259:6;1246:20;1237:29;;1275:60;1329:5;1275:60;:::i;:::-;1227:114;;;;:::o;1347:139::-;;1431:6;1418:20;1409:29;;1447:33;1474:5;1447:33;:::i;:::-;1399:87;;;;:::o;1492:143::-;;1580:6;1574:13;1565:22;;1596:33;1623:5;1596:33;:::i;:::-;1555:80;;;;:::o;1641:262::-;;1749:2;1737:9;1728:7;1724:23;1720:32;1717:2;;;1765:1;1762;1755:12;1717:2;1808:1;1833:53;1878:7;1869:6;1858:9;1854:22;1833:53;:::i;:::-;1823:63;;1779:117;1707:196;;;;:::o;1909:284::-;;2028:2;2016:9;2007:7;2003:23;1999:32;1996:2;;;2044:1;2041;2034:12;1996:2;2087:1;2112:64;2168:7;2159:6;2148:9;2144:22;2112:64;:::i;:::-;2102:74;;2058:128;1986:207;;;;:::o;2199:401::-;;;2321:2;2309:9;2300:7;2296:23;2292:32;2289:2;;;2337:1;2334;2327:12;2289:2;2380:1;2405:53;2450:7;2441:6;2430:9;2426:22;2405:53;:::i;:::-;2395:63;;2351:117;2507:2;2533:50;2575:7;2566:6;2555:9;2551:22;2533:50;:::i;:::-;2523:60;;2478:115;2279:321;;;;;:::o;2606:407::-;;;2731:2;2719:9;2710:7;2706:23;2702:32;2699:2;;;2747:1;2744;2737:12;2699:2;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2689:324;;;;;:::o;3019:256::-;;3124:2;3112:9;3103:7;3099:23;3095:32;3092:2;;;3140:1;3137;3130:12;3092:2;3183:1;3208:50;3250:7;3241:6;3230:9;3226:22;3208:50;:::i;:::-;3198:60;;3154:114;3082:193;;;;:::o;3281:278::-;;3397:2;3385:9;3376:7;3372:23;3368:32;3365:2;;;3413:1;3410;3403:12;3365:2;3456:1;3481:61;3534:7;3525:6;3514:9;3510:22;3481:61;:::i;:::-;3471:71;;3427:125;3355:204;;;;:::o;3565:312::-;;3698:2;3686:9;3677:7;3673:23;3669:32;3666:2;;;3714:1;3711;3704:12;3666:2;3757:1;3782:78;3852:7;3843:6;3832:9;3828:22;3782:78;:::i;:::-;3772:88;;3728:142;3656:221;;;;:::o;3883:290::-;;4005:2;3993:9;3984:7;3980:23;3976:32;3973:2;;;4021:1;4018;4011:12;3973:2;4064:1;4089:67;4148:7;4139:6;4128:9;4124:22;4089:67;:::i;:::-;4079:77;;4035:131;3963:210;;;;:::o;4179:1470::-;;;;;;;;4556:3;4544:9;4535:7;4531:23;4527:33;4524:2;;;4573:1;4570;4563:12;4524:2;4616:1;4641:79;4712:7;4703:6;4692:9;4688:22;4641:79;:::i;:::-;4631:89;;4587:143;4769:2;4795:80;4867:7;4858:6;4847:9;4843:22;4795:80;:::i;:::-;4785:90;;4740:145;4924:2;4950:78;5020:7;5011:6;5000:9;4996:22;4950:78;:::i;:::-;4940:88;;4895:143;5077:2;5103:78;5173:7;5164:6;5153:9;5149:22;5103:78;:::i;:::-;5093:88;;5048:143;5230:3;5257:78;5327:7;5318:6;5307:9;5303:22;5257:78;:::i;:::-;5247:88;;5201:144;5384:3;5411:78;5481:7;5472:6;5461:9;5457:22;5411:78;:::i;:::-;5401:88;;5355:144;5538:3;5565:67;5624:7;5615:6;5604:9;5600:22;5565:67;:::i;:::-;5555:77;;5509:133;4514:1135;;;;;;;;;;:::o;5655:262::-;;5763:2;5751:9;5742:7;5738:23;5734:32;5731:2;;;5779:1;5776;5769:12;5731:2;5822:1;5847:53;5892:7;5883:6;5872:9;5868:22;5847:53;:::i;:::-;5837:63;;5793:117;5721:196;;;;:::o;5923:284::-;;6042:2;6030:9;6021:7;6017:23;6013:32;6010:2;;;6058:1;6055;6048:12;6010:2;6101:1;6126:64;6182:7;6173:6;6162:9;6158:22;6126:64;:::i;:::-;6116:74;;6072:128;6000:207;;;;:::o;6213:118::-;6300:24;6318:5;6300:24;:::i;:::-;6295:3;6288:37;6278:53;;:::o;6337:109::-;6418:21;6433:5;6418:21;:::i;:::-;6413:3;6406:34;6396:50;;:::o;6452:373::-;;6584:38;6616:5;6584:38;:::i;:::-;6638:88;6719:6;6714:3;6638:88;:::i;:::-;6631:95;;6735:52;6780:6;6775:3;6768:4;6761:5;6757:16;6735:52;:::i;:::-;6812:6;6807:3;6803:16;6796:23;;6560:265;;;;;:::o;6831:181::-;6943:62;6999:5;6943:62;:::i;:::-;6938:3;6931:75;6921:91;;:::o;7018:159::-;7119:51;7164:5;7119:51;:::i;:::-;7114:3;7107:64;7097:80;;:::o;7183:183::-;7296:63;7353:5;7296:63;:::i;:::-;7291:3;7284:76;7274:92;;:::o;7372:185::-;7486:64;7544:5;7486:64;:::i;:::-;7481:3;7474:77;7464:93;;:::o;7563:364::-;;7679:39;7712:5;7679:39;:::i;:::-;7734:71;7798:6;7793:3;7734:71;:::i;:::-;7727:78;;7814:52;7859:6;7854:3;7847:4;7840:5;7836:16;7814:52;:::i;:::-;7891:29;7913:6;7891:29;:::i;:::-;7886:3;7882:39;7875:46;;7655:272;;;;;:::o;7933:370::-;;8096:67;8160:2;8155:3;8096:67;:::i;:::-;8089:74;;8193:34;8189:1;8184:3;8180:11;8173:55;8259:8;8254:2;8249:3;8245:12;8238:30;8294:2;8289:3;8285:12;8278:19;;8079:224;;;:::o;8309:368::-;;8472:67;8536:2;8531:3;8472:67;:::i;:::-;8465:74;;8569:34;8565:1;8560:3;8556:11;8549:55;8635:6;8630:2;8625:3;8621:12;8614:28;8668:2;8663:3;8659:12;8652:19;;8455:222;;;:::o;8683:370::-;;8846:67;8910:2;8905:3;8846:67;:::i;:::-;8839:74;;8943:34;8939:1;8934:3;8930:11;8923:55;9009:8;9004:2;8999:3;8995:12;8988:30;9044:2;9039:3;9035:12;9028:19;;8829:224;;;:::o;9059:378::-;;9222:67;9286:2;9281:3;9222:67;:::i;:::-;9215:74;;9319:34;9315:1;9310:3;9306:11;9299:55;9385:16;9380:2;9375:3;9371:12;9364:38;9428:2;9423:3;9419:12;9412:19;;9205:232;;;:::o;9443:330::-;;9606:67;9670:2;9665:3;9606:67;:::i;:::-;9599:74;;9703:34;9699:1;9694:3;9690:11;9683:55;9764:2;9759:3;9755:12;9748:19;;9589:184;;;:::o;9779:327::-;;9942:67;10006:2;10001:3;9942:67;:::i;:::-;9935:74;;10039:31;10035:1;10030:3;10026:11;10019:52;10097:2;10092:3;10088:12;10081:19;;9925:181;;;:::o;10112:374::-;;10275:67;10339:2;10334:3;10275:67;:::i;:::-;10268:74;;10372:34;10368:1;10363:3;10359:11;10352:55;10438:12;10433:2;10428:3;10424:12;10417:34;10477:2;10472:3;10468:12;10461:19;;10258:228;;;:::o;10492:118::-;10579:24;10597:5;10579:24;:::i;:::-;10574:3;10567:37;10557:53;;:::o;10616:271::-;;10768:93;10857:3;10848:6;10768:93;:::i;:::-;10761:100;;10878:3;10871:10;;10750:137;;;;:::o;10893:222::-;;11024:2;11013:9;11009:18;11001:26;;11037:71;11105:1;11094:9;11090:17;11081:6;11037:71;:::i;:::-;10991:124;;;;:::o;11121:332::-;;11280:2;11269:9;11265:18;11257:26;;11293:71;11361:1;11350:9;11346:17;11337:6;11293:71;:::i;:::-;11374:72;11442:2;11431:9;11427:18;11418:6;11374:72;:::i;:::-;11247:206;;;;;:::o;11459:332::-;;11618:2;11607:9;11603:18;11595:26;;11631:71;11699:1;11688:9;11684:17;11675:6;11631:71;:::i;:::-;11712:72;11780:2;11769:9;11765:18;11756:6;11712:72;:::i;:::-;11585:206;;;;;:::o;11797:210::-;;11922:2;11911:9;11907:18;11899:26;;11935:65;11997:1;11986:9;11982:17;11973:6;11935:65;:::i;:::-;11889:118;;;;:::o;12013:272::-;;12169:2;12158:9;12154:18;12146:26;;12182:96;12275:1;12264:9;12260:17;12251:6;12182:96;:::i;:::-;12136:149;;;;:::o;12291:250::-;;12436:2;12425:9;12421:18;12413:26;;12449:85;12531:1;12520:9;12516:17;12507:6;12449:85;:::i;:::-;12403:138;;;;:::o;12547:274::-;;12704:2;12693:9;12689:18;12681:26;;12717:97;12811:1;12800:9;12796:17;12787:6;12717:97;:::i;:::-;12671:150;;;;:::o;12827:276::-;;12985:2;12974:9;12970:18;12962:26;;12998:98;13093:1;13082:9;13078:17;13069:6;12998:98;:::i;:::-;12952:151;;;;:::o;13109:313::-;;13260:2;13249:9;13245:18;13237:26;;13309:9;13303:4;13299:20;13295:1;13284:9;13280:17;13273:47;13337:78;13410:4;13401:6;13337:78;:::i;:::-;13329:86;;13227:195;;;;:::o;13428:419::-;;13632:2;13621:9;13617:18;13609:26;;13681:9;13675:4;13671:20;13667:1;13656:9;13652:17;13645:47;13709:131;13835:4;13709:131;:::i;:::-;13701:139;;13599:248;;;:::o;13853:419::-;;14057:2;14046:9;14042:18;14034:26;;14106:9;14100:4;14096:20;14092:1;14081:9;14077:17;14070:47;14134:131;14260:4;14134:131;:::i;:::-;14126:139;;14024:248;;;:::o;14278:419::-;;14482:2;14471:9;14467:18;14459:26;;14531:9;14525:4;14521:20;14517:1;14506:9;14502:17;14495:47;14559:131;14685:4;14559:131;:::i;:::-;14551:139;;14449:248;;;:::o;14703:419::-;;14907:2;14896:9;14892:18;14884:26;;14956:9;14950:4;14946:20;14942:1;14931:9;14927:17;14920:47;14984:131;15110:4;14984:131;:::i;:::-;14976:139;;14874:248;;;:::o;15128:419::-;;15332:2;15321:9;15317:18;15309:26;;15381:9;15375:4;15371:20;15367:1;15356:9;15352:17;15345:47;15409:131;15535:4;15409:131;:::i;:::-;15401:139;;15299:248;;;:::o;15553:419::-;;15757:2;15746:9;15742:18;15734:26;;15806:9;15800:4;15796:20;15792:1;15781:9;15777:17;15770:47;15834:131;15960:4;15834:131;:::i;:::-;15826:139;;15724:248;;;:::o;15978:419::-;;16182:2;16171:9;16167:18;16159:26;;16231:9;16225:4;16221:20;16217:1;16206:9;16202:17;16195:47;16259:131;16385:4;16259:131;:::i;:::-;16251:139;;16149:248;;;:::o;16403:222::-;;16534:2;16523:9;16519:18;16511:26;;16547:71;16615:1;16604:9;16600:17;16591:6;16547:71;:::i;:::-;16501:124;;;;:::o;16631:430::-;;16812:2;16801:9;16797:18;16789:26;;16825:71;16893:1;16882:9;16878:17;16869:6;16825:71;:::i;:::-;16906:72;16974:2;16963:9;16959:18;16950:6;16906:72;:::i;:::-;16988:66;17050:2;17039:9;17035:18;17026:6;16988:66;:::i;:::-;16779:282;;;;;;:::o;17067:98::-;;17152:5;17146:12;17136:22;;17125:40;;;:::o;17171:99::-;;17257:5;17251:12;17241:22;;17230:40;;;:::o;17276:147::-;;17414:3;17399:18;;17389:34;;;;:::o;17429:169::-;;17547:6;17542:3;17535:19;17587:4;17582:3;17578:14;17563:29;;17525:73;;;;:::o;17604:305::-;;17663:20;17681:1;17663:20;:::i;:::-;17658:25;;17697:20;17715:1;17697:20;:::i;:::-;17692:25;;17851:1;17783:66;17779:74;17776:1;17773:81;17770:2;;;17857:18;;:::i;:::-;17770:2;17901:1;17898;17894:9;17887:16;;17648:261;;;;:::o;17915:185::-;;17972:20;17990:1;17972:20;:::i;:::-;17967:25;;18006:20;18024:1;18006:20;:::i;:::-;18001:25;;18045:1;18035:2;;18050:18;;:::i;:::-;18035:2;18092:1;18089;18085:9;18080:14;;17957:143;;;;:::o;18106:348::-;;18169:20;18187:1;18169:20;:::i;:::-;18164:25;;18203:20;18221:1;18203:20;:::i;:::-;18198:25;;18391:1;18323:66;18319:74;18316:1;18313:81;18308:1;18301:9;18294:17;18290:105;18287:2;;;18398:18;;:::i;:::-;18287:2;18446:1;18443;18439:9;18428:20;;18154:300;;;;:::o;18460:191::-;;18520:20;18538:1;18520:20;:::i;:::-;18515:25;;18554:20;18572:1;18554:20;:::i;:::-;18549:25;;18593:1;18590;18587:8;18584:2;;;18598:18;;:::i;:::-;18584:2;18643:1;18640;18636:9;18628:17;;18505:146;;;;:::o;18657:96::-;;18723:24;18741:5;18723:24;:::i;:::-;18712:35;;18702:51;;;:::o;18759:90::-;;18836:5;18829:13;18822:21;18811:32;;18801:48;;;:::o;18855:121::-;;18946:24;18964:5;18946:24;:::i;:::-;18935:35;;18925:51;;;:::o;18982:110::-;;19062:24;19080:5;19062:24;:::i;:::-;19051:35;;19041:51;;;:::o;19098:122::-;;19190:24;19208:5;19190:24;:::i;:::-;19179:35;;19169:51;;;:::o;19226:123::-;;19319:24;19337:5;19319:24;:::i;:::-;19308:35;;19298:51;;;:::o;19355:126::-;;19432:42;19425:5;19421:54;19410:65;;19400:81;;;:::o;19487:77::-;;19553:5;19542:16;;19532:32;;;:::o;19570:176::-;;19678:62;19734:5;19678:62;:::i;:::-;19665:75;;19655:91;;;:::o;19752:138::-;;19860:24;19878:5;19860:24;:::i;:::-;19847:37;;19837:53;;;:::o;19896:154::-;;19993:51;20038:5;19993:51;:::i;:::-;19980:64;;19970:80;;;:::o;20056:127::-;;20153:24;20171:5;20153:24;:::i;:::-;20140:37;;20130:53;;;:::o;20189:178::-;;20298:63;20355:5;20298:63;:::i;:::-;20285:76;;20275:92;;;:::o;20373:139::-;;20482:24;20500:5;20482:24;:::i;:::-;20469:37;;20459:53;;;:::o;20518:180::-;;20628:64;20686:5;20628:64;:::i;:::-;20615:77;;20605:93;;;:::o;20704:140::-;;20814:24;20832:5;20814:24;:::i;:::-;20801:37;;20791:53;;;:::o;20850:307::-;20918:1;20928:113;20942:6;20939:1;20936:13;20928:113;;;21027:1;21022:3;21018:11;21012:18;21008:1;21003:3;20999:11;20992:39;20964:2;20961:1;20957:10;20952:15;;20928:113;;;21059:6;21056:1;21053:13;21050:2;;;21139:1;21130:6;21125:3;21121:16;21114:27;21050:2;20899:258;;;;:::o;21163:180::-;21211:77;21208:1;21201:88;21308:4;21305:1;21298:15;21332:4;21329:1;21322:15;21349:180;21397:77;21394:1;21387:88;21494:4;21491:1;21484:15;21518:4;21515:1;21508:15;21535:102;;21627:2;21623:7;21618:2;21611:5;21607:14;21603:28;21593:38;;21583:54;;;:::o;21643:122::-;21716:24;21734:5;21716:24;:::i;:::-;21709:5;21706:35;21696:2;;21755:1;21752;21745:12;21696:2;21686:79;:::o;21771:116::-;21841:21;21856:5;21841:21;:::i;:::-;21834:5;21831:32;21821:2;;21877:1;21874;21867:12;21821:2;21811:76;:::o;21893:172::-;21991:49;22034:5;21991:49;:::i;:::-;21984:5;21981:60;21971:2;;22055:1;22052;22045:12;21971:2;21961:104;:::o;22071:150::-;22158:38;22190:5;22158:38;:::i;:::-;22151:5;22148:49;22138:2;;22211:1;22208;22201:12;22138:2;22128:93;:::o;22227:174::-;22326:50;22370:5;22326:50;:::i;:::-;22319:5;22316:61;22306:2;;22391:1;22388;22381:12;22306:2;22296:105;:::o;22407:176::-;22507:51;22552:5;22507:51;:::i;:::-;22500:5;22497:62;22487:2;;22573:1;22570;22563:12;22487:2;22477:106;:::o;22589:122::-;22662:24;22680:5;22662:24;:::i;:::-;22655:5;22652:35;22642:2;;22701:1;22698;22691:12;22642:2;22632:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2602600",
								"executionCost": "2816",
								"totalCost": "2605416"
							},
							"external": {
								"Factory()": "1324",
								"PRECISION()": "1218",
								"Router()": "1389",
								"autoAdjustFarm()": "1333",
								"basePoint()": "1176",
								"dev()": "1282",
								"executor(address)": "1635",
								"farm()": "1369",
								"initialize(address,address,address,address,address,address,address)": "infinite",
								"jointExecution()": "infinite",
								"op()": "1280",
								"openStabilizer()": "1310",
								"owner()": "1268",
								"pid()": "1217",
								"renounceOwnership()": "24485",
								"sea()": "1302",
								"setAutoAdjustFarm(bool)": "infinite",
								"setDev(address)": "22575",
								"setExecutor(address,bool)": "infinite",
								"setFarm(address)": "22640",
								"setOp(address)": "22509",
								"setOpenStabilizer(bool)": "infinite",
								"setPid(uint256)": "21631",
								"setStabilizer(address)": "22508",
								"setToDevPercent(uint256)": "21696",
								"setToOpPercent(uint256)": "21673",
								"setToSseaPercent(uint256)": "21675",
								"setUSDCAddress(address)": "22574",
								"ssea()": "1390",
								"stabilizer()": "1347",
								"toDevPercent()": "1241",
								"toOpPercent()": "1175",
								"toSseaPercent()": "1174",
								"transferOwnership(address)": "24833",
								"usc()": "1325",
								"usdc()": "1303",
								"withdrawalERC20(address,uint256)": "infinite"
							},
							"internal": {
								"adjustFarm()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 909,
									"end": 6176,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 6176,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd248191e56cc7b8697ff9d7d4c9dee6ca8abca04fa6d345ee1147d71bc7f80764736f6c63430008000033",
									".code": [
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "BD0B1F44"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "DB7F521A"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "DB7F521A"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "EC1F1F69"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "F1068454"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "F6D7EADE"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "BD0B1F44"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "C83DD231"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "D10C06A2"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "D477F05F"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "D4F26C51"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "A36A7526"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "A36A7526"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "AAF5BFC3"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "AAF5EB68"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "AF5518C4"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "B8BB97A1"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "91CCA3DB"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "930ED033"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "9DA5B0D5"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "3E413BEE"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "4ECAAC41"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "4ECAAC41"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "55C746D1"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "58DE5DE8"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "7E47961C"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "3E413BEE"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "4591DB50"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "48C7E528"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "4AE6A027"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "2C535A52"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "2C535A52"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "3011D3D5"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "35876476"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "36E9332D"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "3C850E1E"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "16D03993"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "1B0D8AAB"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "1E1BFF3F"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "27C42A50"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 909,
											"end": 6176,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1549,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5855,
											"end": 5859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5852,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 5849,
											"end": 5859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5859,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5849,
											"end": 5859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5876,
											"end": 5880,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5869,
											"end": 5880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5775,
											"end": 5887,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2722,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2731,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2714,
											"end": 2740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2757,
											"end": 2761,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2750,
											"end": 2761,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2750,
											"end": 2761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2591,
											"end": 2768,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5021,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5049,
											"end": 5053,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5046,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 5033,
											"end": 5053,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5053,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5053,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5033,
											"end": 5053,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5074,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5063,
											"end": 5074,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5063,
											"end": 5074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 5081,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1455,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1132,
											"end": 1160,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 631,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 681,
											"end": 695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2067,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2067,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2146,
											"end": 2153,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "6C"
										},
										{
											"begin": 2137,
											"end": 2143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2173,
											"end": 2181,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 2163,
											"end": 2170,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2163,
											"end": 2181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2201,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2194,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2191,
											"end": 2194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2221,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2221,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2253,
											"end": 2268,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2294,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2281,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 2278,
											"end": 2281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "1388"
										},
										{
											"begin": 2304,
											"end": 2317,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 11,
											"value": "9C4"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2377,
											"end": 2381,
											"name": "PUSH",
											"source": 11,
											"value": "9C4"
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2362,
											"end": 2381,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2362,
											"end": 2381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2362,
											"end": 2381,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2362,
											"end": 2381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2403,
											"end": 2408,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2430,
											"end": 2434,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2418,
											"end": 2434,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2434,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2461,
											"end": 2465,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2444,
											"end": 2458,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2492,
											"end": 2497,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2489,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2475,
											"end": 2489,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2475,
											"end": 2497,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2514,
											"end": 2519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2511,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2507,
											"end": 2511,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2529,
											"end": 2541,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 2585,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5288,
											"end": 5292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5316,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 5304,
											"end": 5323,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5323,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5323,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5323,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5344,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5333,
											"end": 5344,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5333,
											"end": 5344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5221,
											"end": 5351,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1195,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5462,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5454,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 5440,
											"end": 5454,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5440,
											"end": 5462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5479,
											"end": 5483,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5472,
											"end": 5483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5490,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1086,
											"end": 1126,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "PUSH",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1461,
											"end": 1488,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1229,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5563,
											"end": 5567,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5596,
											"end": 5601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5593,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 5579,
											"end": 5593,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5618,
											"end": 5622,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5611,
											"end": 5622,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5496,
											"end": 5629,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1662,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1348,
											"end": 1355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4591,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4607,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 4648,
											"end": 4658,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4660,
											"end": 4664,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4633,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4647,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4607,
											"end": 4647,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 4607,
											"end": 4647,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4665,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4665,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4665,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4665,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4607,
											"end": 4665,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4665,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4607,
											"end": 4665,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 4607,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4682,
											"end": 4686,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4675,
											"end": 4686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4675,
											"end": 4686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4693,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1630,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4778,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 4776,
											"end": 4778,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4806,
											"end": 4810,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4799,
											"end": 4810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4799,
											"end": 4810,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4699,
											"end": 4817,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 5998,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6018,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 6014,
											"end": 6018,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6026,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6043,
											"end": 6047,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6036,
											"end": 6047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6036,
											"end": 6047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5893,
											"end": 6054,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1518,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5180,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 5169,
											"end": 5187,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5187,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5169,
											"end": 5187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5197,
											"end": 5208,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5215,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1395,
											"end": 1423,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1388,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 2962,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2824,
											"name": "PUSH",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2835,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2816,
											"end": 2836,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 2808,
											"end": 2877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3010,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2997,
											"end": 3010,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3010,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 2997,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2974,
											"end": 3025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2974,
											"end": 3025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3035,
											"end": 3049,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 3088,
											"end": 3097,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3088,
											"end": 3097,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3069,
											"end": 3082,
											"name": "PUSH",
											"source": 11,
											"value": "6E"
										},
										{
											"begin": 3069,
											"end": 3082,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3064,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3052,
											"end": 3068,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 3052,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3052,
											"end": 3087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3035,
											"end": 3098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3035,
											"end": 3098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3108,
											"end": 3120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "PUSH",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 3140,
											"end": 3151,
											"name": "PUSH",
											"source": 11,
											"value": "6F"
										},
										{
											"begin": 3140,
											"end": 3151,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 3123,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3123,
											"end": 3156,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3123,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3108,
											"end": 3167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3108,
											"end": 3167,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3190,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3222,
											"end": 3226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3205,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3193,
											"end": 3209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3193,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3193,
											"end": 3221,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3193,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3227,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3227,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "PUSH",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3270,
											"end": 3276,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 3238,
											"end": 3254,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 3238,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3312,
											"end": 3314,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3303,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3303,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 3287,
											"end": 3303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 3287,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3363,
											"end": 3368,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3335,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 3332,
											"end": 3348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3384,
											"end": 3398,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3437,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 3380,
											"end": 3437,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3414,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 3414,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3437,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 3380,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3451,
											"end": 3465,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3530,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3447,
											"end": 3530,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3517,
											"name": "PUSH",
											"source": 11,
											"value": "796C7BE7"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3447,
											"end": 3530,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3447,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3551,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3551,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2901,
											"end": 3558,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4885,
											"end": 4889,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4904,
											"name": "PUSH",
											"source": 11,
											"value": "6B"
										},
										{
											"begin": 4901,
											"end": 4904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4932,
											"end": 4936,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4925,
											"end": 4936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4925,
											"end": 4936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4943,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6141,
											"end": 6146,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6138,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 6134,
											"end": 6138,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6134,
											"end": 6146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6167,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6167,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6156,
											"end": 6167,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6060,
											"end": 6174,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5733,
											"end": 5741,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5730,
											"name": "PUSH",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 5720,
											"end": 5730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5741,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5758,
											"end": 5762,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5751,
											"end": 5762,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5751,
											"end": 5762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5769,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "6A"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1270,
											"end": 1287,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2366,
											"end": 2374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 11,
											"value": "6C"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 929,
											"end": 936,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 965,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 948,
											"end": 965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 876,
											"end": 972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 631,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 681,
											"end": 695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1045,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 1081,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 888,
											"end": 893,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 943,
											"end": 945,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 947,
											"end": 952,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 868,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3924,
											"end": 3936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3564,
											"end": 4472,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 3564,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "PUSH",
											"source": 11,
											"value": "6D"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3642,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3627,
											"end": 3642,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3642,
											"name": "PUSH",
											"source": 11,
											"value": "E6A43905"
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3666,
											"end": 3669,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 3627,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3605,
											"end": 3671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3605,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3701,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "PUSH",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3704,
											"end": 3707,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3717,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3704,
											"end": 3717,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3717,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 3718,
											"end": 3729,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3681,
											"end": 3730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3740,
											"end": 3761,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "PUSH",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3778,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3778,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3778,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 3779,
											"end": 3790,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 3764,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3740,
											"end": 3791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3740,
											"end": 3791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3819,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3829,
											"end": 3845,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 3875,
											"end": 3887,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 3866,
											"end": 3869,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3848,
											"end": 3865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 3848,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3848,
											"end": 3874,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 3848,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3829,
											"end": 3888,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3829,
											"end": 3888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3898,
											"end": 3927,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3954,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3979,
											"end": 3983,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3968,
											"end": 3976,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3968,
											"end": 3983,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3964,
											"end": 4410,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3964,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3964,
											"end": 4410,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 4057,
											"end": 4061,
											"name": "PUSH",
											"source": 11,
											"value": "5AF3107A4000"
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 4046,
											"end": 4050,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4033,
											"end": 4041,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 4033,
											"end": 4045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4092,
											"end": 4101,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4092,
											"end": 4101,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4080,
											"end": 4101,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4076,
											"end": 4248,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4076,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 4076,
											"end": 4248,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4145,
											"end": 4146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4146,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4121,
											"end": 4146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4076,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 4076,
											"end": 4248,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4076,
											"end": 4248,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 4076,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4209,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 4223,
											"end": 4232,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4209,
											"end": 4218,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4209,
											"end": 4218,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4209,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 4209,
											"end": 4222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4209,
											"end": 4233,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4209,
											"end": 4233,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4209,
											"end": 4233,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4209,
											"end": 4233,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4209,
											"end": 4233,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4209,
											"end": 4233,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 4209,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4233,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4233,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4076,
											"end": 4248,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 4076,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3964,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 3964,
											"end": 4410,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3964,
											"end": 4410,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3964,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 4332,
											"end": 4336,
											"name": "PUSH",
											"source": 11,
											"value": "5AF3107A4000"
										},
										{
											"begin": 4318,
											"end": 4326,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "PUSH",
											"source": 11,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4311,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 4311,
											"end": 4326,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4311,
											"end": 4326,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4311,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 4311,
											"end": 4326,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4311,
											"end": 4326,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 4311,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 4310,
											"end": 4331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4337,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4337,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4310,
											"end": 4337,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4310,
											"end": 4337,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4310,
											"end": 4337,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 4310,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4298,
											"end": 4337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4384,
											"name": "PUSH",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4375,
											"end": 4384,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 4375,
											"end": 4388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4399,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4399,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3964,
											"end": 4410,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 3964,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "PUSH",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4431,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4431,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4431,
											"name": "PUSH",
											"source": 11,
											"value": "46CA6BEA"
										},
										{
											"begin": 4432,
											"end": 4435,
											"name": "PUSH",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 4432,
											"end": 4435,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4437,
											"end": 4458,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4460,
											"end": 4464,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4419,
											"end": 4465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3564,
											"end": 4472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3564,
											"end": 4472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3564,
											"end": 4472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3564,
											"end": 4472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3564,
											"end": 4472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3564,
											"end": 4472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3564,
											"end": 4472,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3564,
											"end": 4472,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 631,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 681,
											"end": 695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 807,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 631,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 631,
											"end": 667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 681,
											"end": 695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 760,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 757,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 1206,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 844,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3775,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 3866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "410"
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3723,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3740,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "tag",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "tag",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4834,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "tag",
											"source": 4,
											"value": "424"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "tag",
											"source": 4,
											"value": "423"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 5001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5011,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5016,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5005,
											"end": 5016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5024,
											"end": 5029,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 5103,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5104,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5046,
											"end": 5104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 842,
											"end": 846,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1117,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1152,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6433,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6449,
											"end": 6456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6610,
											"end": 6611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6590,
											"end": 6600,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6794,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6778,
											"end": 6795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6823,
											"end": 6842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6923,
											"end": 6935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "445"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "tag",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 152,
											"end": 295,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 234,
											"end": 247,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 225,
											"end": 247,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 225,
											"end": 247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 215,
											"end": 295,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 215,
											"end": 295,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 215,
											"end": 295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 215,
											"end": 295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 215,
											"end": 295,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 434,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 301,
											"end": 434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 301,
											"end": 434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 388,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 369,
											"end": 389,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 360,
											"end": 389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 360,
											"end": 389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 398,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 398,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 350,
											"end": 434,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 350,
											"end": 434,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 350,
											"end": 434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 350,
											"end": 434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 350,
											"end": 434,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 577,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 440,
											"end": 577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 440,
											"end": 577,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 519,
											"end": 532,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 510,
											"end": 532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 541,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 565,
											"end": 570,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 541,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 541,
											"end": 571,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 541,
											"end": 571,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 541,
											"end": 571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 500,
											"end": 577,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 500,
											"end": 577,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 500,
											"end": 577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 500,
											"end": 577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 500,
											"end": 577,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 772,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 583,
											"end": 772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 583,
											"end": 772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 698,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 679,
											"end": 699,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 670,
											"end": 699,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 670,
											"end": 699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 708,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 708,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 708,
											"end": 766,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 708,
											"end": 766,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 708,
											"end": 766,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 772,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 660,
											"end": 772,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 660,
											"end": 772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 660,
											"end": 772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 660,
											"end": 772,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 778,
											"end": 945,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 778,
											"end": 945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 778,
											"end": 945,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 882,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 863,
											"end": 883,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 854,
											"end": 883,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 854,
											"end": 883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 892,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 933,
											"end": 938,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 892,
											"end": 939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 892,
											"end": 939,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 892,
											"end": 939,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 892,
											"end": 939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 844,
											"end": 945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 844,
											"end": 945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 844,
											"end": 945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 844,
											"end": 945,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 951,
											"end": 1142,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 951,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 951,
											"end": 1142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1048,
											"end": 1068,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1039,
											"end": 1068,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1039,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1077,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1077,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 1077,
											"end": 1136,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1136,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 1077,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1142,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1142,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1029,
											"end": 1142,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1148,
											"end": 1341,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 1148,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1148,
											"end": 1341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1246,
											"end": 1266,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1237,
											"end": 1266,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1237,
											"end": 1266,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 1329,
											"end": 1334,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1275,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 1275,
											"end": 1335,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1335,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 1275,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1341,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1341,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1341,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1347,
											"end": 1486,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 1347,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1347,
											"end": 1486,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1437,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 1474,
											"end": 1479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 1447,
											"end": 1480,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1447,
											"end": 1480,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 1447,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1399,
											"end": 1486,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1492,
											"end": 1635,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 1492,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1587,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1587,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 1623,
											"end": 1628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 1596,
											"end": 1629,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1596,
											"end": 1629,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 1596,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1635,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1635,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1641,
											"end": 1903,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 1641,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1641,
											"end": 1903,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1751,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1728,
											"end": 1735,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1724,
											"end": 1747,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1719,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 1717,
											"end": 1719,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1765,
											"end": 1766,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1763,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1755,
											"end": 1767,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1719,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 1717,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 1878,
											"end": 1885,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1875,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1858,
											"end": 1867,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1833,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 1833,
											"end": 1886,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1833,
											"end": 1886,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 1833,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1823,
											"end": 1886,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1823,
											"end": 1886,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1903,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1903,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1707,
											"end": 1903,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 1909,
											"end": 2193,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 1909,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 2193,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2028,
											"end": 2030,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2025,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2007,
											"end": 2014,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2003,
											"end": 2026,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1996,
											"end": 1998,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1996,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 1996,
											"end": 1998,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2044,
											"end": 2045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2042,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2046,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1996,
											"end": 1998,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 1996,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 2168,
											"end": 2175,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2157,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 2112,
											"end": 2176,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2112,
											"end": 2176,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 2112,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2102,
											"end": 2176,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2102,
											"end": 2176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1986,
											"end": 2193,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1986,
											"end": 2193,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1986,
											"end": 2193,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1986,
											"end": 2193,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1986,
											"end": 2193,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2199,
											"end": 2600,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 2199,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2199,
											"end": 2600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2600,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2289,
											"end": 2291,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2289,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 2289,
											"end": 2291,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2339,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2289,
											"end": 2291,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 2289,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 2450,
											"end": 2457,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2439,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2426,
											"end": 2448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 2405,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2395,
											"end": 2458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2351,
											"end": 2468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2507,
											"end": 2509,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 2575,
											"end": 2582,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2564,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2573,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 2533,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2583,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2523,
											"end": 2583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2600,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2600,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2600,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 2606,
											"end": 3013,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 2606,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2606,
											"end": 3013,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 3013,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2731,
											"end": 2733,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2719,
											"end": 2728,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2706,
											"end": 2729,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2702,
											"end": 2734,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2747,
											"end": 2748,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2745,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2749,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 12,
											"value": "496"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 3013,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 3013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 3013,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 3013,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 3013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 3013,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3019,
											"end": 3275,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3019,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3019,
											"end": 3275,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3126,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3121,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3099,
											"end": 3122,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3095,
											"end": 3127,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3094,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 3092,
											"end": 3094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3140,
											"end": 3141,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3138,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3094,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 3092,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3183,
											"end": 3184,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3250,
											"end": 3257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3226,
											"end": 3248,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3208,
											"end": 3258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 3208,
											"end": 3258,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3208,
											"end": 3258,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3208,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3198,
											"end": 3258,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3198,
											"end": 3258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3268,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3275,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3275,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3275,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3281,
											"end": 3559,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 3281,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3559,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3399,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3385,
											"end": 3394,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3376,
											"end": 3383,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3372,
											"end": 3395,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 3400,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3367,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 3365,
											"end": 3367,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3413,
											"end": 3414,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3411,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3365,
											"end": 3367,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 3365,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3456,
											"end": 3457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3481,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 3481,
											"end": 3542,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3481,
											"end": 3542,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 3481,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3471,
											"end": 3542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3427,
											"end": 3552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3355,
											"end": 3559,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3355,
											"end": 3559,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3355,
											"end": 3559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3355,
											"end": 3559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3355,
											"end": 3559,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3565,
											"end": 3877,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 3565,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3700,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3686,
											"end": 3695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3673,
											"end": 3696,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3666,
											"end": 3668,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3666,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 3666,
											"end": 3668,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3704,
											"end": 3716,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3666,
											"end": 3668,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 3666,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3757,
											"end": 3758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 3850,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3860,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3772,
											"end": 3860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3728,
											"end": 3870,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3877,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3877,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3877,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3883,
											"end": 4173,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 3883,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3883,
											"end": 4173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4007,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4002,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 3991,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3980,
											"end": 4003,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3976,
											"end": 4008,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3973,
											"end": 3975,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3973,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 3973,
											"end": 3975,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4021,
											"end": 4022,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4023,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3973,
											"end": 3975,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 3973,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 4148,
											"end": 4155,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4128,
											"end": 4137,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4124,
											"end": 4146,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 4089,
											"end": 4156,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4089,
											"end": 4156,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 4089,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4156,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4166,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 4173,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 4173,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 4173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 4173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 4173,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 4179,
											"end": 5649,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 4179,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4179,
											"end": 5649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 5649,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4179,
											"end": 5649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 5649,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4179,
											"end": 5649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 5649,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4179,
											"end": 5649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4559,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4544,
											"end": 4553,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4535,
											"end": 4542,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4531,
											"end": 4554,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4527,
											"end": 4560,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4524,
											"end": 4526,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4524,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 4524,
											"end": 4526,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4573,
											"end": 4574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4571,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4563,
											"end": 4575,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4524,
											"end": 4526,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 4524,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4616,
											"end": 4617,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 4712,
											"end": 4719,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4703,
											"end": 4709,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4692,
											"end": 4701,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 4688,
											"end": 4710,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 4641,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4720,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4720,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4587,
											"end": 4730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4769,
											"end": 4771,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4795,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 4867,
											"end": 4874,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4858,
											"end": 4864,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4847,
											"end": 4856,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4795,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 4795,
											"end": 4875,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4795,
											"end": 4875,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 4795,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4875,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4875,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4740,
											"end": 4885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4924,
											"end": 4926,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 5020,
											"end": 5027,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 4996,
											"end": 5018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 4950,
											"end": 5028,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4950,
											"end": 5028,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 4950,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4940,
											"end": 5028,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4940,
											"end": 5028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4895,
											"end": 5038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5079,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5103,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 5173,
											"end": 5180,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5164,
											"end": 5170,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5153,
											"end": 5162,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5171,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5103,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 5103,
											"end": 5181,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5103,
											"end": 5181,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 5103,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5093,
											"end": 5181,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5093,
											"end": 5181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5048,
											"end": 5191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5233,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5257,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 5327,
											"end": 5334,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5307,
											"end": 5316,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 5303,
											"end": 5325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5257,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 5257,
											"end": 5335,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5257,
											"end": 5335,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 5257,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5247,
											"end": 5335,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5247,
											"end": 5335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5201,
											"end": 5345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5387,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 5411,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 5481,
											"end": 5488,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5472,
											"end": 5478,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5470,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 5457,
											"end": 5479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5411,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 5411,
											"end": 5489,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5411,
											"end": 5489,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 5411,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5401,
											"end": 5489,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5401,
											"end": 5489,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5355,
											"end": 5499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5538,
											"end": 5541,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 5565,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 5624,
											"end": 5631,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5613,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 5600,
											"end": 5622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5565,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 5565,
											"end": 5632,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5565,
											"end": 5632,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 5565,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5632,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5509,
											"end": 5642,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4514,
											"end": 5649,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5655,
											"end": 5917,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 5655,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5655,
											"end": 5917,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5751,
											"end": 5760,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5749,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5738,
											"end": 5761,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5766,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5779,
											"end": 5780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5777,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5822,
											"end": 5823,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 5892,
											"end": 5899,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5872,
											"end": 5881,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5890,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5837,
											"end": 5900,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5837,
											"end": 5900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5793,
											"end": 5910,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5917,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5917,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5923,
											"end": 6207,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 5923,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5923,
											"end": 6207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6030,
											"end": 6039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6028,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6017,
											"end": 6040,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6012,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 6010,
											"end": 6012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6058,
											"end": 6059,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6060,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6012,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 6010,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 6182,
											"end": 6189,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6173,
											"end": 6179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6162,
											"end": 6171,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6158,
											"end": 6180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6126,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 6126,
											"end": 6190,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6126,
											"end": 6190,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 6126,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6190,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6116,
											"end": 6190,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6072,
											"end": 6200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6207,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6213,
											"end": 6331,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 6213,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6300,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6300,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 6300,
											"end": 6324,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6300,
											"end": 6324,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 6300,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6295,
											"end": 6298,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6288,
											"end": 6325,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6278,
											"end": 6331,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6337,
											"end": 6446,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 6337,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6418,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 6433,
											"end": 6438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6418,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 6418,
											"end": 6439,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6418,
											"end": 6439,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 6418,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6416,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6406,
											"end": 6440,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6396,
											"end": 6446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6396,
											"end": 6446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6396,
											"end": 6446,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6452,
											"end": 6825,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 6452,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6452,
											"end": 6825,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 6616,
											"end": 6621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6584,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 6584,
											"end": 6622,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6584,
											"end": 6622,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 6584,
											"end": 6622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6638,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 6719,
											"end": 6725,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6714,
											"end": 6717,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6638,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 6638,
											"end": 6726,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6638,
											"end": 6726,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 6638,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6631,
											"end": 6726,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6631,
											"end": 6726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6735,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 6780,
											"end": 6786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6775,
											"end": 6778,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6772,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6766,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6757,
											"end": 6773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6735,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 6735,
											"end": 6787,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6735,
											"end": 6787,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 6735,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6812,
											"end": 6818,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6807,
											"end": 6810,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6819,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6796,
											"end": 6819,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6796,
											"end": 6819,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6825,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6825,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6825,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6831,
											"end": 7012,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 6831,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 6943,
											"end": 7005,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 6943,
											"end": 7005,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 6943,
											"end": 7005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6938,
											"end": 6941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6931,
											"end": 7006,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 7012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 7012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6921,
											"end": 7012,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7018,
											"end": 7177,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 7018,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7119,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7119,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 7119,
											"end": 7170,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7119,
											"end": 7170,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 7119,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7114,
											"end": 7117,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7107,
											"end": 7171,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7097,
											"end": 7177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7097,
											"end": 7177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7097,
											"end": 7177,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7183,
											"end": 7366,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 7183,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 7353,
											"end": 7358,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 7296,
											"end": 7359,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7296,
											"end": 7359,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 7296,
											"end": 7359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7291,
											"end": 7294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7284,
											"end": 7360,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7274,
											"end": 7366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7274,
											"end": 7366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7274,
											"end": 7366,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7372,
											"end": 7557,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 7372,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7486,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 7544,
											"end": 7549,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7486,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 7486,
											"end": 7550,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7486,
											"end": 7550,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 7486,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7481,
											"end": 7484,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7474,
											"end": 7551,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7464,
											"end": 7557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7464,
											"end": 7557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7464,
											"end": 7557,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7563,
											"end": 7927,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 7563,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7563,
											"end": 7927,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 7712,
											"end": 7717,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7679,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 7679,
											"end": 7718,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7679,
											"end": 7718,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 7679,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 7798,
											"end": 7804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7793,
											"end": 7796,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 7734,
											"end": 7805,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7734,
											"end": 7805,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 7734,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7727,
											"end": 7805,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7727,
											"end": 7805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7814,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 7859,
											"end": 7865,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7854,
											"end": 7857,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7847,
											"end": 7851,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7845,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7836,
											"end": 7852,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7814,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 7814,
											"end": 7866,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7814,
											"end": 7866,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 7814,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7891,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7891,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 7891,
											"end": 7920,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 7891,
											"end": 7920,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 7891,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 7889,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7882,
											"end": 7921,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7921,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7875,
											"end": 7921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7927,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7927,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7927,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7927,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7927,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7655,
											"end": 7927,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 7933,
											"end": 8303,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 7933,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7933,
											"end": 8303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8096,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 8160,
											"end": 8162,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 8155,
											"end": 8158,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8096,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 8096,
											"end": 8163,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8163,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 8096,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8089,
											"end": 8163,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8089,
											"end": 8163,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8227,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8189,
											"end": 8190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8187,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8180,
											"end": 8191,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8173,
											"end": 8228,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8259,
											"end": 8267,
											"name": "PUSH",
											"source": 12,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8254,
											"end": 8256,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8249,
											"end": 8252,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8245,
											"end": 8257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8238,
											"end": 8268,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8292,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8285,
											"end": 8297,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8278,
											"end": 8297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8278,
											"end": 8297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8079,
											"end": 8303,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8079,
											"end": 8303,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8079,
											"end": 8303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8079,
											"end": 8303,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8309,
											"end": 8677,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 8309,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8309,
											"end": 8677,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8472,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 8536,
											"end": 8538,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8531,
											"end": 8534,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 8472,
											"end": 8539,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8472,
											"end": 8539,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 8472,
											"end": 8539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8465,
											"end": 8539,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8465,
											"end": 8539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8569,
											"end": 8603,
											"name": "PUSH",
											"source": 12,
											"value": "6578656375746F723A2063616C6C6572206973206E6F74207468652065786563"
										},
										{
											"begin": 8565,
											"end": 8566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8563,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8556,
											"end": 8567,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8549,
											"end": 8604,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8635,
											"end": 8641,
											"name": "PUSH",
											"source": 12,
											"value": "75746F7200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8630,
											"end": 8632,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8625,
											"end": 8628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8633,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8614,
											"end": 8642,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8668,
											"end": 8670,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8663,
											"end": 8666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8659,
											"end": 8671,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8455,
											"end": 8677,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8455,
											"end": 8677,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8455,
											"end": 8677,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8455,
											"end": 8677,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 8683,
											"end": 9053,
											"name": "tag",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 8683,
											"end": 9053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8683,
											"end": 9053,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 8910,
											"end": 8912,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 8905,
											"end": 8908,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8846,
											"end": 8913,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 8846,
											"end": 8913,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 8846,
											"end": 8913,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 8846,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 8913,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8839,
											"end": 8913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8943,
											"end": 8977,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 8939,
											"end": 8940,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8934,
											"end": 8937,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8930,
											"end": 8941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8978,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9009,
											"end": 9017,
											"name": "PUSH",
											"source": 12,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9004,
											"end": 9006,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8999,
											"end": 9002,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8995,
											"end": 9007,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8988,
											"end": 9018,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9044,
											"end": 9046,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9039,
											"end": 9042,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9035,
											"end": 9047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9028,
											"end": 9047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9028,
											"end": 9047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 9053,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 9053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 9053,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 9053,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9059,
											"end": 9437,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 9059,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9059,
											"end": 9437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9222,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 9286,
											"end": 9288,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 9281,
											"end": 9284,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9222,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 9222,
											"end": 9289,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9222,
											"end": 9289,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 9222,
											"end": 9289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9215,
											"end": 9289,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9215,
											"end": 9289,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9319,
											"end": 9353,
											"name": "PUSH",
											"source": 12,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9310,
											"end": 9313,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9306,
											"end": 9317,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9299,
											"end": 9354,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9385,
											"end": 9401,
											"name": "PUSH",
											"source": 12,
											"value": "647920696E697469616C697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 9380,
											"end": 9382,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9375,
											"end": 9378,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9371,
											"end": 9383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9402,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9428,
											"end": 9430,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9423,
											"end": 9426,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9431,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9412,
											"end": 9431,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9412,
											"end": 9431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9437,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9437,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9437,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9443,
											"end": 9773,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 9443,
											"end": 9773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9443,
											"end": 9773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 9670,
											"end": 9672,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9665,
											"end": 9668,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 9606,
											"end": 9673,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9606,
											"end": 9673,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 9606,
											"end": 9673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9599,
											"end": 9673,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9599,
											"end": 9673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9703,
											"end": 9737,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9699,
											"end": 9700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9694,
											"end": 9697,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9683,
											"end": 9738,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9766,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9759,
											"end": 9762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9755,
											"end": 9767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9748,
											"end": 9767,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9748,
											"end": 9767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9589,
											"end": 9773,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9589,
											"end": 9773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9589,
											"end": 9773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9589,
											"end": 9773,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 9779,
											"end": 10106,
											"name": "tag",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 9779,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9779,
											"end": 10106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 10006,
											"end": 10008,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 10001,
											"end": 10004,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 9942,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9935,
											"end": 10009,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9935,
											"end": 10009,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10039,
											"end": 10070,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 10035,
											"end": 10036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10030,
											"end": 10033,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10026,
											"end": 10037,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10019,
											"end": 10071,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10097,
											"end": 10099,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10092,
											"end": 10095,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10088,
											"end": 10100,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9925,
											"end": 10106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9925,
											"end": 10106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9925,
											"end": 10106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9925,
											"end": 10106,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10112,
											"end": 10486,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 10112,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10112,
											"end": 10486,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 10339,
											"end": 10341,
											"name": "PUSH",
											"source": 12,
											"value": "2A"
										},
										{
											"begin": 10334,
											"end": 10337,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10275,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 10275,
											"end": 10342,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10275,
											"end": 10342,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 10275,
											"end": 10342,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10268,
											"end": 10342,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10268,
											"end": 10342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10372,
											"end": 10406,
											"name": "PUSH",
											"source": 12,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 10368,
											"end": 10369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10363,
											"end": 10366,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10359,
											"end": 10370,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10352,
											"end": 10407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10438,
											"end": 10450,
											"name": "PUSH",
											"source": 12,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10428,
											"end": 10431,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10424,
											"end": 10436,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10451,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10477,
											"end": 10479,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10472,
											"end": 10475,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10468,
											"end": 10480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10480,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10258,
											"end": 10486,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10258,
											"end": 10486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10258,
											"end": 10486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10258,
											"end": 10486,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10492,
											"end": 10610,
											"name": "tag",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 10492,
											"end": 10610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10579,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 10597,
											"end": 10602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10579,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 10579,
											"end": 10603,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10579,
											"end": 10603,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 10579,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10574,
											"end": 10577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10567,
											"end": 10604,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10557,
											"end": 10610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10557,
											"end": 10610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10557,
											"end": 10610,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10616,
											"end": 10887,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 10616,
											"end": 10887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10616,
											"end": 10887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10768,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 10857,
											"end": 10860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10848,
											"end": 10854,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10768,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 10768,
											"end": 10861,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 10768,
											"end": 10861,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 10768,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10761,
											"end": 10861,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10761,
											"end": 10861,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10878,
											"end": 10881,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10871,
											"end": 10881,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10871,
											"end": 10881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10750,
											"end": 10887,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10750,
											"end": 10887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10750,
											"end": 10887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10750,
											"end": 10887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10750,
											"end": 10887,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 10893,
											"end": 11115,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 10893,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10893,
											"end": 11115,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11024,
											"end": 11026,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11013,
											"end": 11022,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11001,
											"end": 11027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11001,
											"end": 11027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11037,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 11105,
											"end": 11106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11094,
											"end": 11103,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11090,
											"end": 11107,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11081,
											"end": 11087,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11037,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 11037,
											"end": 11108,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11037,
											"end": 11108,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 11037,
											"end": 11108,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11115,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11115,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10991,
											"end": 11115,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11121,
											"end": 11453,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 11121,
											"end": 11453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11121,
											"end": 11453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11280,
											"end": 11282,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11269,
											"end": 11278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11265,
											"end": 11283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11257,
											"end": 11283,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11257,
											"end": 11283,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11293,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 11361,
											"end": 11362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11350,
											"end": 11359,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11337,
											"end": 11343,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11293,
											"end": 11364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 11293,
											"end": 11364,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11293,
											"end": 11364,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 11293,
											"end": 11364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11374,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 11442,
											"end": 11444,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11431,
											"end": 11440,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11427,
											"end": 11445,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11418,
											"end": 11424,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11374,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 11374,
											"end": 11446,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11374,
											"end": 11446,
											"name": "tag",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 11374,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11453,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11453,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11453,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11459,
											"end": 11791,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 11459,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11459,
											"end": 11791,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11618,
											"end": 11620,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11607,
											"end": 11616,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11595,
											"end": 11621,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11595,
											"end": 11621,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 11699,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11697,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11684,
											"end": 11701,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11675,
											"end": 11681,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 11631,
											"end": 11702,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11631,
											"end": 11702,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 11631,
											"end": 11702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11712,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 11780,
											"end": 11782,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11769,
											"end": 11778,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11765,
											"end": 11783,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 11762,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11712,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 11712,
											"end": 11784,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11712,
											"end": 11784,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 11712,
											"end": 11784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11585,
											"end": 11791,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11585,
											"end": 11791,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11585,
											"end": 11791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11585,
											"end": 11791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11585,
											"end": 11791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11585,
											"end": 11791,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 11797,
											"end": 12007,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 11797,
											"end": 12007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11797,
											"end": 12007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11922,
											"end": 11924,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11911,
											"end": 11920,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11907,
											"end": 11925,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11899,
											"end": 11925,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11899,
											"end": 11925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11935,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 11997,
											"end": 11998,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11986,
											"end": 11995,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11982,
											"end": 11999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11973,
											"end": 11979,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11935,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 11935,
											"end": 12000,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11935,
											"end": 12000,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 11935,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11889,
											"end": 12007,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11889,
											"end": 12007,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11889,
											"end": 12007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11889,
											"end": 12007,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11889,
											"end": 12007,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12013,
											"end": 12285,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 12013,
											"end": 12285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12013,
											"end": 12285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12169,
											"end": 12171,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12158,
											"end": 12167,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12154,
											"end": 12172,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12182,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 12275,
											"end": 12276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12264,
											"end": 12273,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12260,
											"end": 12277,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12251,
											"end": 12257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12182,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 12182,
											"end": 12278,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12182,
											"end": 12278,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 12182,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12136,
											"end": 12285,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12136,
											"end": 12285,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12136,
											"end": 12285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12136,
											"end": 12285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12136,
											"end": 12285,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12291,
											"end": 12541,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 12291,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12291,
											"end": 12541,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12438,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12425,
											"end": 12434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12421,
											"end": 12439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12413,
											"end": 12439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12413,
											"end": 12439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12449,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 12531,
											"end": 12532,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12520,
											"end": 12529,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12516,
											"end": 12533,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12507,
											"end": 12513,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12449,
											"end": 12534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 12449,
											"end": 12534,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12449,
											"end": 12534,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 12449,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12403,
											"end": 12541,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12403,
											"end": 12541,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12403,
											"end": 12541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12403,
											"end": 12541,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12403,
											"end": 12541,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12547,
											"end": 12821,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 12547,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12547,
											"end": 12821,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12704,
											"end": 12706,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12693,
											"end": 12702,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12689,
											"end": 12707,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12681,
											"end": 12707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12717,
											"end": 12814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 12811,
											"end": 12812,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12800,
											"end": 12809,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12796,
											"end": 12813,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12787,
											"end": 12793,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12717,
											"end": 12814,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 12717,
											"end": 12814,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12717,
											"end": 12814,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 12717,
											"end": 12814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12671,
											"end": 12821,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12671,
											"end": 12821,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12671,
											"end": 12821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12671,
											"end": 12821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12671,
											"end": 12821,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 12827,
											"end": 13103,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 12827,
											"end": 13103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12827,
											"end": 13103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12985,
											"end": 12987,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12974,
											"end": 12983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12970,
											"end": 12988,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12962,
											"end": 12988,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12962,
											"end": 12988,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12998,
											"end": 13096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 13093,
											"end": 13094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13082,
											"end": 13091,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13078,
											"end": 13095,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13069,
											"end": 13075,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12998,
											"end": 13096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 12998,
											"end": 13096,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 12998,
											"end": 13096,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 12998,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 13103,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 13103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 13103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 13103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 13103,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13109,
											"end": 13422,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 13109,
											"end": 13422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13109,
											"end": 13422,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13260,
											"end": 13262,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13249,
											"end": 13258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13245,
											"end": 13263,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13237,
											"end": 13263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13237,
											"end": 13263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13309,
											"end": 13318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13303,
											"end": 13307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13299,
											"end": 13319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13295,
											"end": 13296,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13284,
											"end": 13293,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13280,
											"end": 13297,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13273,
											"end": 13320,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 13410,
											"end": 13414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13401,
											"end": 13407,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13337,
											"end": 13415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 13337,
											"end": 13415,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13337,
											"end": 13415,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 13337,
											"end": 13415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13329,
											"end": 13415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13329,
											"end": 13415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13227,
											"end": 13422,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13227,
											"end": 13422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13227,
											"end": 13422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13227,
											"end": 13422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13227,
											"end": 13422,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13428,
											"end": 13847,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13634,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13617,
											"end": 13635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13609,
											"end": 13635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13609,
											"end": 13635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13681,
											"end": 13690,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13675,
											"end": 13679,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13671,
											"end": 13691,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13667,
											"end": 13668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13656,
											"end": 13665,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13652,
											"end": 13669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13645,
											"end": 13692,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 13835,
											"end": 13839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 13709,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13701,
											"end": 13840,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13701,
											"end": 13840,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13599,
											"end": 13847,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13599,
											"end": 13847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13599,
											"end": 13847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13599,
											"end": 13847,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 13853,
											"end": 14272,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 13853,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13853,
											"end": 14272,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14057,
											"end": 14059,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14046,
											"end": 14055,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14042,
											"end": 14060,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14034,
											"end": 14060,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14034,
											"end": 14060,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14106,
											"end": 14115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14100,
											"end": 14104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14116,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14092,
											"end": 14093,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14081,
											"end": 14090,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14077,
											"end": 14094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14070,
											"end": 14117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14134,
											"end": 14265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 14260,
											"end": 14264,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14134,
											"end": 14265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 14134,
											"end": 14265,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14134,
											"end": 14265,
											"name": "tag",
											"source": 12,
											"value": "616"
										},
										{
											"begin": 14134,
											"end": 14265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14126,
											"end": 14265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14126,
											"end": 14265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14024,
											"end": 14272,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14024,
											"end": 14272,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14024,
											"end": 14272,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14024,
											"end": 14272,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14278,
											"end": 14697,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 14278,
											"end": 14697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14278,
											"end": 14697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14482,
											"end": 14484,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14471,
											"end": 14480,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14467,
											"end": 14485,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14459,
											"end": 14485,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14459,
											"end": 14485,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14531,
											"end": 14540,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14525,
											"end": 14529,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14521,
											"end": 14541,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14517,
											"end": 14518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14506,
											"end": 14515,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14502,
											"end": 14519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14495,
											"end": 14542,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14559,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 14685,
											"end": 14689,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14559,
											"end": 14690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "572"
										},
										{
											"begin": 14559,
											"end": 14690,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14559,
											"end": 14690,
											"name": "tag",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 14559,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14551,
											"end": 14690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14551,
											"end": 14690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14449,
											"end": 14697,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14449,
											"end": 14697,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14449,
											"end": 14697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14449,
											"end": 14697,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 14703,
											"end": 15122,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 14703,
											"end": 15122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14703,
											"end": 15122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14907,
											"end": 14909,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14896,
											"end": 14905,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14892,
											"end": 14910,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14884,
											"end": 14910,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14884,
											"end": 14910,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14956,
											"end": 14965,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14950,
											"end": 14954,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14946,
											"end": 14966,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14942,
											"end": 14943,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14931,
											"end": 14940,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14927,
											"end": 14944,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14920,
											"end": 14967,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14984,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 15110,
											"end": 15114,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14984,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 14984,
											"end": 15115,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 14984,
											"end": 15115,
											"name": "tag",
											"source": 12,
											"value": "620"
										},
										{
											"begin": 14984,
											"end": 15115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 15115,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14976,
											"end": 15115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14874,
											"end": 15122,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14874,
											"end": 15122,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14874,
											"end": 15122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14874,
											"end": 15122,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15128,
											"end": 15547,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 15128,
											"end": 15547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15128,
											"end": 15547,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15332,
											"end": 15334,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15321,
											"end": 15330,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15317,
											"end": 15335,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15309,
											"end": 15335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15309,
											"end": 15335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15381,
											"end": 15390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15375,
											"end": 15379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15371,
											"end": 15391,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15367,
											"end": 15368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15356,
											"end": 15365,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15352,
											"end": 15369,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15345,
											"end": 15392,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15409,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 15535,
											"end": 15539,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15409,
											"end": 15540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 15409,
											"end": 15540,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15409,
											"end": 15540,
											"name": "tag",
											"source": 12,
											"value": "622"
										},
										{
											"begin": 15409,
											"end": 15540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15401,
											"end": 15540,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15401,
											"end": 15540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15299,
											"end": 15547,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15299,
											"end": 15547,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15299,
											"end": 15547,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15299,
											"end": 15547,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15553,
											"end": 15972,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 15553,
											"end": 15972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15553,
											"end": 15972,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15757,
											"end": 15759,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15746,
											"end": 15755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15742,
											"end": 15760,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15760,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15806,
											"end": 15815,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15800,
											"end": 15804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15796,
											"end": 15816,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15792,
											"end": 15793,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15781,
											"end": 15790,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15777,
											"end": 15794,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15770,
											"end": 15817,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15834,
											"end": 15965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 15960,
											"end": 15964,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15834,
											"end": 15965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "581"
										},
										{
											"begin": 15834,
											"end": 15965,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 15834,
											"end": 15965,
											"name": "tag",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 15834,
											"end": 15965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15826,
											"end": 15965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15826,
											"end": 15965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15724,
											"end": 15972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15724,
											"end": 15972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15724,
											"end": 15972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15724,
											"end": 15972,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 15978,
											"end": 16397,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 15978,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15978,
											"end": 16397,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16182,
											"end": 16184,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16171,
											"end": 16180,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16167,
											"end": 16185,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16159,
											"end": 16185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16159,
											"end": 16185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16231,
											"end": 16240,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16229,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16221,
											"end": 16241,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16217,
											"end": 16218,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16206,
											"end": 16215,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16202,
											"end": 16219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16195,
											"end": 16242,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16259,
											"end": 16390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 16385,
											"end": 16389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16259,
											"end": 16390,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 16259,
											"end": 16390,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16259,
											"end": 16390,
											"name": "tag",
											"source": 12,
											"value": "626"
										},
										{
											"begin": 16259,
											"end": 16390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16251,
											"end": 16390,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16251,
											"end": 16390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16149,
											"end": 16397,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16149,
											"end": 16397,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16149,
											"end": 16397,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16149,
											"end": 16397,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 16403,
											"end": 16625,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 16403,
											"end": 16625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16403,
											"end": 16625,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16534,
											"end": 16536,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16523,
											"end": 16532,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16519,
											"end": 16537,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16511,
											"end": 16537,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16511,
											"end": 16537,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16547,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 16615,
											"end": 16616,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16604,
											"end": 16613,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16600,
											"end": 16617,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16591,
											"end": 16597,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16547,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 16547,
											"end": 16618,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16547,
											"end": 16618,
											"name": "tag",
											"source": 12,
											"value": "628"
										},
										{
											"begin": 16547,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16501,
											"end": 16625,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16501,
											"end": 16625,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16501,
											"end": 16625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16501,
											"end": 16625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16501,
											"end": 16625,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 16631,
											"end": 17061,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 16631,
											"end": 17061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16631,
											"end": 17061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16812,
											"end": 16814,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16801,
											"end": 16810,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16797,
											"end": 16815,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16789,
											"end": 16815,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16789,
											"end": 16815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16825,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 16893,
											"end": 16894,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16882,
											"end": 16891,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16878,
											"end": 16895,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16869,
											"end": 16875,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16825,
											"end": 16896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 16825,
											"end": 16896,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16825,
											"end": 16896,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 16825,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16906,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 16974,
											"end": 16976,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16963,
											"end": 16972,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16959,
											"end": 16977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16950,
											"end": 16956,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16906,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "587"
										},
										{
											"begin": 16906,
											"end": 16978,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16906,
											"end": 16978,
											"name": "tag",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 16906,
											"end": 16978,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16988,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 17050,
											"end": 17052,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17039,
											"end": 17048,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17035,
											"end": 17053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17026,
											"end": 17032,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16988,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 16988,
											"end": 17054,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 16988,
											"end": 17054,
											"name": "tag",
											"source": 12,
											"value": "632"
										},
										{
											"begin": 16988,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16779,
											"end": 17061,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16779,
											"end": 17061,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16779,
											"end": 17061,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16779,
											"end": 17061,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16779,
											"end": 17061,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16779,
											"end": 17061,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16779,
											"end": 17061,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17067,
											"end": 17165,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 17067,
											"end": 17165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17067,
											"end": 17165,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17152,
											"end": 17157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17146,
											"end": 17158,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17158,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17125,
											"end": 17165,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17125,
											"end": 17165,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17125,
											"end": 17165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17125,
											"end": 17165,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17171,
											"end": 17270,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 17171,
											"end": 17270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17171,
											"end": 17270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17257,
											"end": 17262,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17251,
											"end": 17263,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17241,
											"end": 17263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17241,
											"end": 17263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17230,
											"end": 17270,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17230,
											"end": 17270,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17230,
											"end": 17270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17230,
											"end": 17270,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17276,
											"end": 17423,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 17276,
											"end": 17423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17276,
											"end": 17423,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17414,
											"end": 17417,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17399,
											"end": 17417,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17399,
											"end": 17417,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17389,
											"end": 17423,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17389,
											"end": 17423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17389,
											"end": 17423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17389,
											"end": 17423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17389,
											"end": 17423,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17429,
											"end": 17598,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 17429,
											"end": 17598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17429,
											"end": 17598,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17547,
											"end": 17553,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17542,
											"end": 17545,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17535,
											"end": 17554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17587,
											"end": 17591,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17582,
											"end": 17585,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17578,
											"end": 17592,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17563,
											"end": 17592,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17563,
											"end": 17592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17525,
											"end": 17598,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17525,
											"end": 17598,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17525,
											"end": 17598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17525,
											"end": 17598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17525,
											"end": 17598,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17604,
											"end": 17909,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 17604,
											"end": 17909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17604,
											"end": 17909,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17663,
											"end": 17683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 17681,
											"end": 17682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17663,
											"end": 17683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 17663,
											"end": 17683,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17663,
											"end": 17683,
											"name": "tag",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 17663,
											"end": 17683,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17658,
											"end": 17683,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17658,
											"end": 17683,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17697,
											"end": 17717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 17715,
											"end": 17716,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17697,
											"end": 17717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 17697,
											"end": 17717,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17697,
											"end": 17717,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 17697,
											"end": 17717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17692,
											"end": 17717,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17692,
											"end": 17717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17851,
											"end": 17852,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17783,
											"end": 17849,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17779,
											"end": 17853,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17776,
											"end": 17777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17773,
											"end": 17854,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 17770,
											"end": 17772,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17770,
											"end": 17772,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 17770,
											"end": 17772,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17857,
											"end": 17875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 17857,
											"end": 17875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 17857,
											"end": 17875,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17857,
											"end": 17875,
											"name": "tag",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 17857,
											"end": 17875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17770,
											"end": 17772,
											"name": "tag",
											"source": 12,
											"value": "640"
										},
										{
											"begin": 17770,
											"end": 17772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17901,
											"end": 17902,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17898,
											"end": 17899,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17894,
											"end": 17903,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17887,
											"end": 17903,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17887,
											"end": 17903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17648,
											"end": 17909,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17648,
											"end": 17909,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17648,
											"end": 17909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17648,
											"end": 17909,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17648,
											"end": 17909,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 17915,
											"end": 18100,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 17915,
											"end": 18100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17915,
											"end": 18100,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17972,
											"end": 17992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 17990,
											"end": 17991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17972,
											"end": 17992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 17972,
											"end": 17992,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 17972,
											"end": 17992,
											"name": "tag",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 17972,
											"end": 17992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17967,
											"end": 17992,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17967,
											"end": 17992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18006,
											"end": 18026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 18024,
											"end": 18025,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18006,
											"end": 18026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 18006,
											"end": 18026,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18006,
											"end": 18026,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 18006,
											"end": 18026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18001,
											"end": 18026,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18001,
											"end": 18026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18045,
											"end": 18046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18035,
											"end": 18037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 18035,
											"end": 18037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18050,
											"end": 18068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "647"
										},
										{
											"begin": 18050,
											"end": 18068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 18050,
											"end": 18068,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18050,
											"end": 18068,
											"name": "tag",
											"source": 12,
											"value": "647"
										},
										{
											"begin": 18050,
											"end": 18068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18035,
											"end": 18037,
											"name": "tag",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 18035,
											"end": 18037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18092,
											"end": 18093,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18089,
											"end": 18090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18085,
											"end": 18094,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 18080,
											"end": 18094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18080,
											"end": 18094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17957,
											"end": 18100,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17957,
											"end": 18100,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17957,
											"end": 18100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17957,
											"end": 18100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17957,
											"end": 18100,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 18106,
											"end": 18454,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 18106,
											"end": 18454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18106,
											"end": 18454,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18169,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 18187,
											"end": 18188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18169,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 18169,
											"end": 18189,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18169,
											"end": 18189,
											"name": "tag",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 18169,
											"end": 18189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18164,
											"end": 18189,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18164,
											"end": 18189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18203,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 18221,
											"end": 18222,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18203,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 18203,
											"end": 18223,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18203,
											"end": 18223,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 18203,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18198,
											"end": 18223,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18198,
											"end": 18223,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18391,
											"end": 18392,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18323,
											"end": 18389,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18319,
											"end": 18393,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 18316,
											"end": 18317,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18313,
											"end": 18394,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18308,
											"end": 18309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18301,
											"end": 18310,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18294,
											"end": 18311,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18290,
											"end": 18395,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 18287,
											"end": 18289,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18287,
											"end": 18289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 18287,
											"end": 18289,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18398,
											"end": 18416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 18398,
											"end": 18416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 18398,
											"end": 18416,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18398,
											"end": 18416,
											"name": "tag",
											"source": 12,
											"value": "653"
										},
										{
											"begin": 18398,
											"end": 18416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18287,
											"end": 18289,
											"name": "tag",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 18287,
											"end": 18289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18446,
											"end": 18447,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18443,
											"end": 18444,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18439,
											"end": 18448,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 18428,
											"end": 18448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18428,
											"end": 18448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18154,
											"end": 18454,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18154,
											"end": 18454,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18154,
											"end": 18454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18154,
											"end": 18454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18154,
											"end": 18454,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 18460,
											"end": 18651,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 18460,
											"end": 18651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18460,
											"end": 18651,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18520,
											"end": 18540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 18538,
											"end": 18539,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18520,
											"end": 18540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 18520,
											"end": 18540,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18520,
											"end": 18540,
											"name": "tag",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 18520,
											"end": 18540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18515,
											"end": 18540,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18515,
											"end": 18540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18554,
											"end": 18574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 18572,
											"end": 18573,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18554,
											"end": 18574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 18554,
											"end": 18574,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18554,
											"end": 18574,
											"name": "tag",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 18554,
											"end": 18574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18549,
											"end": 18574,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18549,
											"end": 18574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18593,
											"end": 18594,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18590,
											"end": 18591,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18587,
											"end": 18595,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 18584,
											"end": 18586,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18584,
											"end": 18586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 18584,
											"end": 18586,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "tag",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 18598,
											"end": 18616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18584,
											"end": 18586,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 18584,
											"end": 18586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18643,
											"end": 18644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18640,
											"end": 18641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18636,
											"end": 18645,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18628,
											"end": 18645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18628,
											"end": 18645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18505,
											"end": 18651,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18505,
											"end": 18651,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18505,
											"end": 18651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18505,
											"end": 18651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18505,
											"end": 18651,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 18657,
											"end": 18753,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 18657,
											"end": 18753,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18657,
											"end": 18753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18723,
											"end": 18747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 18741,
											"end": 18746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18723,
											"end": 18747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 18723,
											"end": 18747,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18723,
											"end": 18747,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 18723,
											"end": 18747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18712,
											"end": 18747,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18712,
											"end": 18747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18702,
											"end": 18753,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18702,
											"end": 18753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18702,
											"end": 18753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18702,
											"end": 18753,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 18759,
											"end": 18849,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 18759,
											"end": 18849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18759,
											"end": 18849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18836,
											"end": 18841,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18829,
											"end": 18842,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18822,
											"end": 18843,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18811,
											"end": 18843,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18811,
											"end": 18843,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18801,
											"end": 18849,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18801,
											"end": 18849,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18801,
											"end": 18849,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18801,
											"end": 18849,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 18855,
											"end": 18976,
											"name": "tag",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 18855,
											"end": 18976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18855,
											"end": 18976,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18946,
											"end": 18970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 18964,
											"end": 18969,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18946,
											"end": 18970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 18946,
											"end": 18970,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 18946,
											"end": 18970,
											"name": "tag",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 18946,
											"end": 18970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18935,
											"end": 18970,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18935,
											"end": 18970,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18925,
											"end": 18976,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18925,
											"end": 18976,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18925,
											"end": 18976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18925,
											"end": 18976,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 18982,
											"end": 19092,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 18982,
											"end": 19092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18982,
											"end": 19092,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19062,
											"end": 19086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 19080,
											"end": 19085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19062,
											"end": 19086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 19062,
											"end": 19086,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19062,
											"end": 19086,
											"name": "tag",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 19062,
											"end": 19086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19051,
											"end": 19086,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19051,
											"end": 19086,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19041,
											"end": 19092,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19041,
											"end": 19092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19041,
											"end": 19092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19041,
											"end": 19092,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19098,
											"end": 19220,
											"name": "tag",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 19098,
											"end": 19220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19098,
											"end": 19220,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19190,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 19208,
											"end": 19213,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19190,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 19190,
											"end": 19214,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19190,
											"end": 19214,
											"name": "tag",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 19190,
											"end": 19214,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19179,
											"end": 19214,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19179,
											"end": 19214,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19169,
											"end": 19220,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19169,
											"end": 19220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19169,
											"end": 19220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19169,
											"end": 19220,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19226,
											"end": 19349,
											"name": "tag",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 19226,
											"end": 19349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19226,
											"end": 19349,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19319,
											"end": 19343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 19337,
											"end": 19342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19319,
											"end": 19343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 19319,
											"end": 19343,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19319,
											"end": 19343,
											"name": "tag",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 19319,
											"end": 19343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19308,
											"end": 19343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19298,
											"end": 19349,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19298,
											"end": 19349,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19298,
											"end": 19349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19298,
											"end": 19349,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19355,
											"end": 19481,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 19355,
											"end": 19481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19355,
											"end": 19481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19432,
											"end": 19474,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19425,
											"end": 19430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19421,
											"end": 19475,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19410,
											"end": 19475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19410,
											"end": 19475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19400,
											"end": 19481,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19400,
											"end": 19481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19400,
											"end": 19481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19400,
											"end": 19481,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19487,
											"end": 19564,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 19487,
											"end": 19564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19487,
											"end": 19564,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19553,
											"end": 19558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19558,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19542,
											"end": 19558,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19564,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19532,
											"end": 19564,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19570,
											"end": 19746,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 19570,
											"end": 19746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19570,
											"end": 19746,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19678,
											"end": 19740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 19734,
											"end": 19739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19678,
											"end": 19740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 19678,
											"end": 19740,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19678,
											"end": 19740,
											"name": "tag",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 19678,
											"end": 19740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19665,
											"end": 19740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19665,
											"end": 19740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19655,
											"end": 19746,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19655,
											"end": 19746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19655,
											"end": 19746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19655,
											"end": 19746,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19752,
											"end": 19890,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 19752,
											"end": 19890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19752,
											"end": 19890,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19860,
											"end": 19884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 19878,
											"end": 19883,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19860,
											"end": 19884,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 19860,
											"end": 19884,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19860,
											"end": 19884,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 19860,
											"end": 19884,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19847,
											"end": 19884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19847,
											"end": 19884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19837,
											"end": 19890,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19837,
											"end": 19890,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19837,
											"end": 19890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19837,
											"end": 19890,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 19896,
											"end": 20050,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 19896,
											"end": 20050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19896,
											"end": 20050,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19993,
											"end": 20044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 20038,
											"end": 20043,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19993,
											"end": 20044,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 19993,
											"end": 20044,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 19993,
											"end": 20044,
											"name": "tag",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 19993,
											"end": 20044,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19980,
											"end": 20044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19980,
											"end": 20044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 20050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 20050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 20050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 20050,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20056,
											"end": 20183,
											"name": "tag",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 20056,
											"end": 20183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20056,
											"end": 20183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20153,
											"end": 20177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 20171,
											"end": 20176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20153,
											"end": 20177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 20153,
											"end": 20177,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20153,
											"end": 20177,
											"name": "tag",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 20153,
											"end": 20177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20140,
											"end": 20177,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20140,
											"end": 20177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20130,
											"end": 20183,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20130,
											"end": 20183,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20130,
											"end": 20183,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20130,
											"end": 20183,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20189,
											"end": 20367,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 20189,
											"end": 20367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20189,
											"end": 20367,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20298,
											"end": 20361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 20355,
											"end": 20360,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20298,
											"end": 20361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 20298,
											"end": 20361,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20298,
											"end": 20361,
											"name": "tag",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 20298,
											"end": 20361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20285,
											"end": 20361,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20285,
											"end": 20361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20275,
											"end": 20367,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20275,
											"end": 20367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20275,
											"end": 20367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20275,
											"end": 20367,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20373,
											"end": 20512,
											"name": "tag",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 20373,
											"end": 20512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20373,
											"end": 20512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20482,
											"end": 20506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 20500,
											"end": 20505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20482,
											"end": 20506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 20482,
											"end": 20506,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20482,
											"end": 20506,
											"name": "tag",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 20482,
											"end": 20506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20469,
											"end": 20506,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20469,
											"end": 20506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20459,
											"end": 20512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20459,
											"end": 20512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20459,
											"end": 20512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20459,
											"end": 20512,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20518,
											"end": 20698,
											"name": "tag",
											"source": 12,
											"value": "556"
										},
										{
											"begin": 20518,
											"end": 20698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20518,
											"end": 20698,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20628,
											"end": 20692,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 20686,
											"end": 20691,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20628,
											"end": 20692,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 20628,
											"end": 20692,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20628,
											"end": 20692,
											"name": "tag",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 20628,
											"end": 20692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20615,
											"end": 20692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20615,
											"end": 20692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20605,
											"end": 20698,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20605,
											"end": 20698,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20605,
											"end": 20698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20605,
											"end": 20698,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20704,
											"end": 20844,
											"name": "tag",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 20704,
											"end": 20844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20704,
											"end": 20844,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20814,
											"end": 20838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "696"
										},
										{
											"begin": 20832,
											"end": 20837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20814,
											"end": 20838,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 20814,
											"end": 20838,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 20814,
											"end": 20838,
											"name": "tag",
											"source": 12,
											"value": "696"
										},
										{
											"begin": 20814,
											"end": 20838,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20801,
											"end": 20838,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20801,
											"end": 20838,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20791,
											"end": 20844,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20791,
											"end": 20844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20791,
											"end": 20844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20791,
											"end": 20844,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 20850,
											"end": 21157,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 20850,
											"end": 21157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20918,
											"end": 20919,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20928,
											"end": 21041,
											"name": "tag",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 20928,
											"end": 21041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20942,
											"end": 20948,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20939,
											"end": 20940,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20936,
											"end": 20949,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 20928,
											"end": 21041,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 20928,
											"end": 21041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 20928,
											"end": 21041,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21027,
											"end": 21028,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21022,
											"end": 21025,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21018,
											"end": 21029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21012,
											"end": 21030,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 21008,
											"end": 21009,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21003,
											"end": 21006,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20999,
											"end": 21010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20992,
											"end": 21031,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20964,
											"end": 20966,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20961,
											"end": 20962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20957,
											"end": 20967,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20952,
											"end": 20967,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20952,
											"end": 20967,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20928,
											"end": 21041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 20928,
											"end": 21041,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20928,
											"end": 21041,
											"name": "tag",
											"source": 12,
											"value": "700"
										},
										{
											"begin": 20928,
											"end": 21041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21059,
											"end": 21065,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21056,
											"end": 21057,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21053,
											"end": 21066,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 21050,
											"end": 21052,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 21050,
											"end": 21052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 21050,
											"end": 21052,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21139,
											"end": 21140,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21130,
											"end": 21136,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21125,
											"end": 21128,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21121,
											"end": 21137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21114,
											"end": 21141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21050,
											"end": 21052,
											"name": "tag",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 21050,
											"end": 21052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20899,
											"end": 21157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20899,
											"end": 21157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20899,
											"end": 21157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20899,
											"end": 21157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20899,
											"end": 21157,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21163,
											"end": 21343,
											"name": "tag",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 21163,
											"end": 21343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21211,
											"end": 21288,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21208,
											"end": 21209,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21201,
											"end": 21289,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21308,
											"end": 21312,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 21305,
											"end": 21306,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 21298,
											"end": 21313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21332,
											"end": 21336,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21329,
											"end": 21330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21322,
											"end": 21337,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21349,
											"end": 21529,
											"name": "tag",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 21349,
											"end": 21529,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21397,
											"end": 21474,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21394,
											"end": 21395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21387,
											"end": 21475,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21494,
											"end": 21498,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 21491,
											"end": 21492,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 21484,
											"end": 21499,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21518,
											"end": 21522,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 21515,
											"end": 21516,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21508,
											"end": 21523,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21535,
											"end": 21637,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 21535,
											"end": 21637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21535,
											"end": 21637,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21627,
											"end": 21629,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 21623,
											"end": 21630,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 21618,
											"end": 21620,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 21611,
											"end": 21616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21607,
											"end": 21621,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21603,
											"end": 21631,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 21593,
											"end": 21631,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21593,
											"end": 21631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21583,
											"end": 21637,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21583,
											"end": 21637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21583,
											"end": 21637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21583,
											"end": 21637,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21643,
											"end": 21765,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 21643,
											"end": 21765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21716,
											"end": 21740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 21734,
											"end": 21739,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21716,
											"end": 21740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 21716,
											"end": 21740,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 21716,
											"end": 21740,
											"name": "tag",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 21716,
											"end": 21740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21709,
											"end": 21714,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21706,
											"end": 21741,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 21696,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "707"
										},
										{
											"begin": 21696,
											"end": 21698,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21755,
											"end": 21756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21752,
											"end": 21753,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21745,
											"end": 21757,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21696,
											"end": 21698,
											"name": "tag",
											"source": 12,
											"value": "707"
										},
										{
											"begin": 21696,
											"end": 21698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21686,
											"end": 21765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21686,
											"end": 21765,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21771,
											"end": 21887,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 21771,
											"end": 21887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21841,
											"end": 21862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 21856,
											"end": 21861,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21841,
											"end": 21862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 21841,
											"end": 21862,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 21841,
											"end": 21862,
											"name": "tag",
											"source": 12,
											"value": "709"
										},
										{
											"begin": 21841,
											"end": 21862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21834,
											"end": 21839,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21831,
											"end": 21863,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 21821,
											"end": 21823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "710"
										},
										{
											"begin": 21821,
											"end": 21823,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 21877,
											"end": 21878,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21874,
											"end": 21875,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 21867,
											"end": 21879,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21821,
											"end": 21823,
											"name": "tag",
											"source": 12,
											"value": "710"
										},
										{
											"begin": 21821,
											"end": 21823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21811,
											"end": 21887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21811,
											"end": 21887,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 21893,
											"end": 22065,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 21893,
											"end": 22065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21991,
											"end": 22040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "712"
										},
										{
											"begin": 22034,
											"end": 22039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21991,
											"end": 22040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 21991,
											"end": 22040,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 21991,
											"end": 22040,
											"name": "tag",
											"source": 12,
											"value": "712"
										},
										{
											"begin": 21991,
											"end": 22040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21984,
											"end": 21989,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21981,
											"end": 22041,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 21971,
											"end": 21973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 21971,
											"end": 21973,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22055,
											"end": 22056,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22052,
											"end": 22053,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22045,
											"end": 22057,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 21971,
											"end": 21973,
											"name": "tag",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 21971,
											"end": 21973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21961,
											"end": 22065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21961,
											"end": 22065,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 22071,
											"end": 22221,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 22071,
											"end": 22221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22158,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "715"
										},
										{
											"begin": 22190,
											"end": 22195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22158,
											"end": 22196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 22158,
											"end": 22196,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22158,
											"end": 22196,
											"name": "tag",
											"source": 12,
											"value": "715"
										},
										{
											"begin": 22158,
											"end": 22196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22151,
											"end": 22156,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22148,
											"end": 22197,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 22138,
											"end": 22140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 22138,
											"end": 22140,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22211,
											"end": 22212,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22208,
											"end": 22209,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22201,
											"end": 22213,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 22138,
											"end": 22140,
											"name": "tag",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 22138,
											"end": 22140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22128,
											"end": 22221,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22128,
											"end": 22221,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 22227,
											"end": 22401,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 22227,
											"end": 22401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22326,
											"end": 22376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "718"
										},
										{
											"begin": 22370,
											"end": 22375,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22326,
											"end": 22376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "669"
										},
										{
											"begin": 22326,
											"end": 22376,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22326,
											"end": 22376,
											"name": "tag",
											"source": 12,
											"value": "718"
										},
										{
											"begin": 22326,
											"end": 22376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22319,
											"end": 22324,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22316,
											"end": 22377,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 22306,
											"end": 22308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "719"
										},
										{
											"begin": 22306,
											"end": 22308,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22391,
											"end": 22392,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22388,
											"end": 22389,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22381,
											"end": 22393,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 22306,
											"end": 22308,
											"name": "tag",
											"source": 12,
											"value": "719"
										},
										{
											"begin": 22306,
											"end": 22308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22296,
											"end": 22401,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22296,
											"end": 22401,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 22407,
											"end": 22583,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 22407,
											"end": 22583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22507,
											"end": 22558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "721"
										},
										{
											"begin": 22552,
											"end": 22557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22507,
											"end": 22558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 22507,
											"end": 22558,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22507,
											"end": 22558,
											"name": "tag",
											"source": 12,
											"value": "721"
										},
										{
											"begin": 22507,
											"end": 22558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22500,
											"end": 22505,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22497,
											"end": 22559,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 22487,
											"end": 22489,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 22487,
											"end": 22489,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22573,
											"end": 22574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22570,
											"end": 22571,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22563,
											"end": 22575,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 22487,
											"end": 22489,
											"name": "tag",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 22487,
											"end": 22489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22477,
											"end": 22583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22477,
											"end": 22583,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 22589,
											"end": 22711,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 22589,
											"end": 22711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22662,
											"end": 22686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "724"
										},
										{
											"begin": 22680,
											"end": 22685,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22662,
											"end": 22686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 22662,
											"end": 22686,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 22662,
											"end": 22686,
											"name": "tag",
											"source": 12,
											"value": "724"
										},
										{
											"begin": 22662,
											"end": 22686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22655,
											"end": 22660,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22652,
											"end": 22687,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 22642,
											"end": 22644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "725"
										},
										{
											"begin": 22642,
											"end": 22644,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 22701,
											"end": 22702,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22698,
											"end": 22699,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 22691,
											"end": 22703,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 22642,
											"end": 22644,
											"name": "tag",
											"source": 12,
											"value": "725"
										},
										{
											"begin": 22642,
											"end": 22644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22632,
											"end": 22711,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22632,
											"end": 22711,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Factory()": "c83dd231",
							"PRECISION()": "aaf5eb68",
							"Router()": "f6d7eade",
							"autoAdjustFarm()": "9da5b0d5",
							"basePoint()": "16d03993",
							"dev()": "91cca3db",
							"executor(address)": "48c7e528",
							"farm()": "36e9332d",
							"initialize(address,address,address,address,address,address,address)": "35876476",
							"jointExecution()": "d10c06a2",
							"op()": "ec1f1f69",
							"openStabilizer()": "58de5de8",
							"owner()": "8da5cb5b",
							"pid()": "f1068454",
							"renounceOwnership()": "715018a6",
							"sea()": "4ecaac41",
							"setAutoAdjustFarm(bool)": "4591db50",
							"setDev(address)": "d477f05f",
							"setExecutor(address,bool)": "1e1bff3f",
							"setFarm(address)": "d4f26c51",
							"setOp(address)": "a36a7526",
							"setOpenStabilizer(bool)": "55c746d1",
							"setPid(uint256)": "1b0d8aab",
							"setStabilizer(address)": "db7f521a",
							"setToDevPercent(uint256)": "3c850e1e",
							"setToOpPercent(uint256)": "af5518c4",
							"setToSseaPercent(uint256)": "27c42a50",
							"setUSDCAddress(address)": "aaf5bfc3",
							"ssea()": "b8bb97a1",
							"stabilizer()": "7e47961c",
							"toDevPercent()": "4ae6a027",
							"toOpPercent()": "2c535a52",
							"toSseaPercent()": "bd0b1f44",
							"transferOwnership(address)": "f2fde38b",
							"usc()": "3011d3d5",
							"usdc()": "3e413bee",
							"withdrawalERC20(address,uint256)": "930ed033"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoAdjustFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basePoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dev\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farm\",\"outputs\":[{\"internalType\":\"contract IFarm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IUniswapV2Factory\",\"name\":\"_Factory\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_Router\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usc\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_sea\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_ssea\",\"type\":\"address\"},{\"internalType\":\"contract IFarm\",\"name\":\"_farm\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jointExecution\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"op\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sea\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setAutoAdjustFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setDev\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_type\",\"type\":\"bool\"}],\"name\":\"setExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFarm\",\"name\":\"_farm\",\"type\":\"address\"}],\"name\":\"setFarm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setOp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setOpenStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setPid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToDevPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToOpPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"setToSseaPercent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_usdc\",\"type\":\"address\"}],\"name\":\"setUSDCAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssea\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stabilizer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toDevPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toOpPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toSseaPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usc\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"withdrawalERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/helperLogic.sol\":\"helperLogic\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xcaec675e6250bf4cd3364459a0cbf789262af2aaa377d61d4d463f657aea7b50\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2c09e004aa8654e1ad2a1e9d8500883f618d754e5a77c840e2c9064c7a80b5cb\",\"dweb:/ipfs/QmamoA2xnZpLsu4gjNaWkfdYcL5VjRpFmR5shpoJ8wYjZw\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x12091adc186fe351c639dc62aa0b691f78c7bea054c27bbb4b58acd02e1b2ce7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e7a3f1b86be061741f5483f0f153389aa9e89a24a1556c8784df44ce288b5183\",\"dweb:/ipfs/QmejsqRXse45aoyDjccfKEnZ1uZzdqUtjsYbAS3ThAMesu\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x7e588378c1076243506b8164132e0dcccd468f31edb933a88ddb8d6c4063ab30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://da8233b51c721065562eca1bf774963b4d881f8df26de34c9e608233cd5fd557\",\"dweb:/ipfs/QmRVgpFroy1ofrMdsXU3eiyhmsot3haCLtevUsRt3uPCpu\"]},\"contracts/helperLogic.sol\":{\"keccak256\":\"0xa298d238fa15b939a0b919c7fdff215c07c6e04ad0bd75f13c2cd3c4ae451310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c399b5f3a98d9fdbbdb220f6d754d4ae71889ee04d15fa0f10b2bf3b7295c8e5\",\"dweb:/ipfs/QmWcKFEj3Abk9zpviM1ErRndHJWQDaARdZyun7qe6XPW3U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1825,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "executor",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1828,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "usc",
								"offset": 0,
								"slot": "102",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1831,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "usdc",
								"offset": 0,
								"slot": "103",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1834,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "sea",
								"offset": 0,
								"slot": "104",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1837,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "ssea",
								"offset": 0,
								"slot": "105",
								"type": "t_contract(IERC20Upgradeable)248"
							},
							{
								"astId": 1839,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "op",
								"offset": 0,
								"slot": "106",
								"type": "t_address"
							},
							{
								"astId": 1841,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "dev",
								"offset": 0,
								"slot": "107",
								"type": "t_address"
							},
							{
								"astId": 1844,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "Router",
								"offset": 0,
								"slot": "108",
								"type": "t_contract(IUniswapV2Router02)1784"
							},
							{
								"astId": 1847,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "Factory",
								"offset": 0,
								"slot": "109",
								"type": "t_contract(IUniswapV2Factory)1146"
							},
							{
								"astId": 1849,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toSseaPercent",
								"offset": 0,
								"slot": "110",
								"type": "t_uint256"
							},
							{
								"astId": 1851,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toOpPercent",
								"offset": 0,
								"slot": "111",
								"type": "t_uint256"
							},
							{
								"astId": 1853,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "toDevPercent",
								"offset": 0,
								"slot": "112",
								"type": "t_uint256"
							},
							{
								"astId": 1855,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "PRECISION",
								"offset": 0,
								"slot": "113",
								"type": "t_uint256"
							},
							{
								"astId": 1857,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "basePoint",
								"offset": 0,
								"slot": "114",
								"type": "t_uint256"
							},
							{
								"astId": 1859,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "pid",
								"offset": 0,
								"slot": "115",
								"type": "t_uint256"
							},
							{
								"astId": 1862,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "farm",
								"offset": 0,
								"slot": "116",
								"type": "t_contract(IFarm)1804"
							},
							{
								"astId": 1864,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "autoAdjustFarm",
								"offset": 20,
								"slot": "116",
								"type": "t_bool"
							},
							{
								"astId": 1866,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "openStabilizer",
								"offset": 21,
								"slot": "116",
								"type": "t_bool"
							},
							{
								"astId": 1868,
								"contract": "contracts/helperLogic.sol:helperLogic",
								"label": "stabilizer",
								"offset": 0,
								"slot": "117",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20Upgradeable)248": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							},
							"t_contract(IFarm)1804": {
								"encoding": "inplace",
								"label": "contract IFarm",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Factory)1146": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Factory",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)1784": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							761
						],
						"Initializable": [
							170
						],
						"OwnableUpgradeable": [
							125
						]
					},
					"id": 126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 762,
							"src": "112:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 171,
							"src": "154:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "733:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "733:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 761,
										"src": "748:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "748:18:0"
								}
							],
							"contractDependencies": [
								170,
								761
							],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "198:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								761,
								170
							],
							"name": "OwnableUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "773:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "829:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "860:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:57:0"
									},
									"src": "802:84:0"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "1035:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "1045:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1045:26:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1081:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "1081:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "892:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"modifierName": {
												"id": 19,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1023:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1023:11:0"
										}
									],
									"name": "__Ownable_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:0:0"
									},
									"scope": 125,
									"src": "988:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 35,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "1206:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1206:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 34,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1187:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1187:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1187:32:0"
											}
										]
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 32,
											"modifierName": {
												"id": 31,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1165:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1165:11:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 125,
									"src": "1120:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1357:30:0",
										"statements": [
											{
												"expression": {
													"id": 46,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 45,
												"id": 47,
												"nodeType": "Return",
												"src": "1367:13:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1232:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1348:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:9:0"
									},
									"scope": 125,
									"src": "1302:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1496:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 53,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1514:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1514:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 55,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "1525:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1525:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1514:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1506:68:0"
											},
											{
												"id": 61,
												"nodeType": "PlaceholderStatement",
												"src": "1584:1:0"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1393:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 63,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:0"
									},
									"src": "1475:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1988:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2025:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2017:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 70,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2017:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 69,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1998:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1998:30:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1598:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 67,
											"modifierName": {
												"id": 66,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1960:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 125,
									"src": "1934:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2254:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 86,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2272:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2292:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2284:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 87,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2284:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2284:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2272:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2296:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "2264:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2366:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2347:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2347:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "2347:28:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2041:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 83,
											"modifierName": {
												"id": 82,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "2244:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2244:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2211:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:18:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2254:0:0"
									},
									"scope": 125,
									"src": "2184:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "2599:124:0",
										"statements": [
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "2609:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 106,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2609:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"id": 108,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2628:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2609:25:0"
											},
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2644:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 111,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2653:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2644:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2644:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 115,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "2697:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2707:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 114,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2676:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "EmitStatement",
												"src": "2671:45:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2388:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "2564:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2599:0:0"
									},
									"scope": 125,
									"src": "2536:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "2728:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 121,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2728:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 123,
										"length": {
											"hexValue": "3439",
											"id": 122,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2736:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2728:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 126,
							"src": "693:2063:0"
						}
					],
					"src": "87:2670:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							170
						]
					},
					"id": 171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "161:73:1",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 130,
									"mutability": "mutable",
									"name": "_initialized",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "239:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "239:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "271:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 133,
									"mutability": "mutable",
									"name": "_initializing",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "367:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 132,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "367:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "521:348:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "539:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "556:13:1",
																"subExpression": {
																	"id": 138,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "557:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "539:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "571:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "531:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "531:89:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "531:89:1"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"scope": 168,
														"src": "631:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 144,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "631:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "653:14:1",
													"subExpression": {
														"id": 146,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "654:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "631:36:1"
											},
											{
												"condition": {
													"id": 149,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "681:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "677:98:1",
												"trueBody": {
													"id": 158,
													"nodeType": "Block",
													"src": "697:78:1",
													"statements": [
														{
															"expression": {
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 150,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "711:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "727:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "711:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 153,
															"nodeType": "ExpressionStatement",
															"src": "711:20:1"
														},
														{
															"expression": {
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 154,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "745:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "760:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "745:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 157,
															"nodeType": "ExpressionStatement",
															"src": "745:19:1"
														}
													]
												}
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "785:1:1"
											},
											{
												"condition": {
													"id": 161,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "801:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "IfStatement",
												"src": "797:66:1",
												"trueBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "817:46:1",
													"statements": [
														{
															"expression": {
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 162,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "831:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "847:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "831:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 165,
															"nodeType": "ExpressionStatement",
															"src": "831:21:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "400:93:1",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 169,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:1"
									},
									"src": "498:371:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 171,
							"src": "123:748:1"
						}
					],
					"src": "98:774:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							248
						]
					},
					"id": 249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 172,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 173,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 248,
							"linearizedBaseContracts": [
								248
							],
							"name": "IERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "221:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:9:2"
									},
									"scope": 248,
									"src": "292:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "353:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "449:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:17:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "489:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:2"
									},
									"scope": 248,
									"src": "430:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "504:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "736:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "755:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:35:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "789:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "789:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:6:2"
									},
									"scope": 248,
									"src": "718:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "801:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1089:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1104:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:32:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1144:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:9:2"
									},
									"scope": 248,
									"src": "1070:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1159:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1823:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1840:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:33:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1874:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1874:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:6:2"
									},
									"scope": 248,
									"src": "1806:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1886:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2218:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2242:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2269:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:81:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2308:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:6:2"
									},
									"scope": 248,
									"src": "2187:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2320:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 238,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2498:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2520:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2540:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:57:2"
									},
									"src": "2483:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2561:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 247,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2729:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2752:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2777:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:63:2"
									},
									"src": "2714:78:2"
								}
							],
							"scope": 249,
							"src": "187:2607:2"
						}
					],
					"src": "91:2704:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						],
						"IERC20Upgradeable": [
							248
						],
						"SafeERC20Upgradeable": [
							472
						]
					},
					"id": 473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 251,
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 249,
							"src": "125:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 252,
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 718,
							"src": "160:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "209:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 472,
							"linearizedBaseContracts": [
								472
							],
							"name": "SafeERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 256,
									"libraryName": {
										"id": 254,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 717,
										"src": "708:18:3"
									},
									"nodeType": "UsingForDirective",
									"src": "702:37:3",
									"typeName": {
										"id": 255,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "858:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 267,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "888:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 270,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "918:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 197,
																		"src": "918:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "918:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 273,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "943:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "947:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 268,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "895:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "895:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "895:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 266,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "868:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "868:86:3"
											}
										]
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "776:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 257,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "776:17:3"
													},
													"referencedDeclaration": 248,
													"src": "776:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "809:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "829:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:82:3"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:3"
									},
									"scope": 472,
									"src": "745:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1106:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1136:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 295,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1166:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 229,
																		"src": "1166:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1166:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 298,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "1195:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 299,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1201:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 300,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "1205:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 293,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1143:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1143:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1143:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 291,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1116:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "1116:96:3"
											}
										]
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1002:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 280,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1002:17:3"
													},
													"referencedDeclaration": 248,
													"src": "1002:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1035:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1057:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1077:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:104:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:0:3"
									},
									"scope": 472,
									"src": "967:252:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1596:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "1845:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1854:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1845:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1844:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 325,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1885:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1877:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 323,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1877:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1877:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 327,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "1892:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "1861:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 207,
																				"src": "1861:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1861:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1904:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1861:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1860:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1844:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1920:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1823:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "1823:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "2016:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 340,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 309,
																			"src": "2046:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2046:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2046:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 343,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "2070:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "2079:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2023:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2023:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2023:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 336,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1996:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1996:90:3"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "1225:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1509:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 307,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1509:17:3"
													},
													"referencedDeclaration": 248,
													"src": "1509:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1542:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:87:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:3"
									},
									"scope": 472,
									"src": "1479:614:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "2226:194:3",
										"statements": [
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 384,
														"src": "2236:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2236:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 365,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2283:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	],
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2275:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 363,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2275:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2275:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 367,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "2290:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 361,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "2259:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 207,
															"src": "2259:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 369,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2301:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2259:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2236:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "2336:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 376,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "2366:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2366:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2366:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 379,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2390:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 380,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "2399:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 374,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2343:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2343:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2343:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 372,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2316:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "2316:97:3"
											}
										]
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2139:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 350,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "2139:17:3"
													},
													"referencedDeclaration": 248,
													"src": "2139:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2172:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2197:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:87:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:3"
									},
									"scope": 472,
									"src": "2099:321:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2553:370:3",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "2563:354:3",
												"statements": [
													{
														"assignments": [
															396
														],
														"declarations": [
															{
																"constant": false,
																"id": 396,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2587:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 395,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2587:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 405,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 401,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2634:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2626:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 399,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2626:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2626:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 403,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 397,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2610:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 207,
																"src": "2610:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2610:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2587:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 407,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "2671:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 408,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2687:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2671:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2694:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 406,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2663:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "2663:75:3"
													},
													{
														"assignments": [
															414
														],
														"declarations": [
															{
																"constant": false,
																"id": 414,
																"mutability": "mutable",
																"name": "newAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2752:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 413,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2752:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 418,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "2775:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 416,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "2790:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2775:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2752:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2829:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 423,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "2859:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 217,
																				"src": "2859:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2859:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 426,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "2883:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 427,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 414,
																			"src": "2892:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 421,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2836:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2836:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2836:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 419,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "2809:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2809:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "2809:97:3"
													}
												]
											}
										]
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2466:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 386,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "2466:17:3"
													},
													"referencedDeclaration": 248,
													"src": "2466:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2499:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2524:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:87:3"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:3"
									},
									"scope": 472,
									"src": "2426:497:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3387:636:3",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "3736:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 442,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3736:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"id": 449,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "3790:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3796:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 446,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "3770:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3762:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 444,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3762:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3762:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 563,
														"src": "3762:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3762:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 453,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3845:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3845:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3865:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3845:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 469,
												"nodeType": "IfStatement",
												"src": "3841:176:3",
												"trueBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "3868:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 460,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 443,
																				"src": "3940:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3953:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 461,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3953:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 463,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3952:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 458,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3929:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3929:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3929:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3961:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 457,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3921:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3921:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "3921:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2929:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3335:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "3335:17:3"
													},
													"referencedDeclaration": 248,
													"src": "3335:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3360:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3360:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3334:44:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3387:0:3"
									},
									"scope": 472,
									"src": "3306:717:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 473,
							"src": "667:3358:3"
						}
					],
					"src": "100:3926:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						]
					},
					"id": 718,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 717,
							"linearizedBaseContracts": [
								717
							],
							"name": "AddressUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "848:311:4",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "1045:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"nodeType": "VariableDeclarationStatement",
												"src": "1045:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1110:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1098:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1090:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 478,
														"isOffset": false,
														"isSlot": false,
														"src": "1110:7:4",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:4:4",
														"valueSize": 1
													}
												],
												"id": 486,
												"nodeType": "InlineAssembly",
												"src": "1067:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 487,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "1144:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1151:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1144:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 482,
												"id": 490,
												"nodeType": "Return",
												"src": "1137:15:4"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "212:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "802:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:17:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "842:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "842:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:6:4"
									},
									"scope": 717,
									"src": "782:377:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "2147:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 503,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2173:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2165:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 501,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2165:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2165:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2165:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 506,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2190:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2165:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2198:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2157:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2157:73:4"
											},
											{
												"assignments": [
													512,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "2242:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 511,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2242:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 519,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 513,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "2260:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2260:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 515,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2260:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2241:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2311:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2320:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2303:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "2303:78:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1165:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2095:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2095:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2122:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:43:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:0:4"
									},
									"scope": 717,
									"src": "2076:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "3219:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3249:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3257:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3263:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 536,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															543,
															563
														],
														"referencedDeclaration": 563,
														"src": "3236:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 535,
												"id": 541,
												"nodeType": "Return",
												"src": "3229:67:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2394:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3152:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3168:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3168:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:35:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3205:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3205:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:14:4"
									},
									"scope": 717,
									"src": "3130:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "3672:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3711:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3719:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3725:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 559,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3728:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 555,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "3689:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3689:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 554,
												"id": 561,
												"nodeType": "Return",
												"src": "3682:59:4"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "3309:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3556:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3580:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3580:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3607:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3607:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3546:93:4"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3658:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3658:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:14:4"
									},
									"scope": 717,
									"src": "3525:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "4253:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "4292:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4306:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4313:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 575,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "4270:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 574,
												"id": 581,
												"nodeType": "Return",
												"src": "4263:94:4"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3754:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4150:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4174:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4201:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:80:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4239:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4239:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:14:4"
									},
									"scope": 717,
									"src": "4110:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4791:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 600,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4817:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4809:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 598,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4809:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4809:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4809:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "4834:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4809:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4841:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4801:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "4801:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 610,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "4911:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 609,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "4900:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4900:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4920:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4892:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4892:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "4892:60:4"
											},
											{
												"assignments": [
													616,
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4964:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4964:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4978:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 617,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4978:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"id": 623,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5031:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 619,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "5005:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5005:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 621,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "5024:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5005:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5005:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4963:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 628,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5079:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 629,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "5091:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 626,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5053:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5053:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 596,
												"id": 631,
												"nodeType": "Return",
												"src": "5046:58:4"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "4370:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4676:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4676:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4703:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4726:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4642:116:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4777:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4777:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4776:14:4"
									},
									"scope": 717,
									"src": "4612:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "5388:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "5424:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5432:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5438:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 643,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															650,
															685
														],
														"referencedDeclaration": 685,
														"src": "5405:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5405:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 642,
												"id": 648,
												"nodeType": "Return",
												"src": "5398:80:4"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5117:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5316:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5332:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5332:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:35:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5374:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5374:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:14:4"
									},
									"scope": 717,
									"src": "5288:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "5827:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 664,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "5856:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 663,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "5845:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5845:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5865:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5837:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5837:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5837:67:4"
											},
											{
												"assignments": [
													670,
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "5916:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 669,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5916:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "5930:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 671,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5930:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [
														{
															"id": 675,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "5975:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 673,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "5957:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5957:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5957:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5915:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 679,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "6014:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 680,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "6023:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 681,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "6035:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 678,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5997:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5997:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 683,
												"nodeType": "Return",
												"src": "5990:58:4"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "5491:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5706:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5730:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5730:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5757:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5757:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:93:4"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5813:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5813:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5812:14:4"
									},
									"scope": 717,
									"src": "5669:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "6435:532:4",
										"statements": [
											{
												"condition": {
													"id": 697,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 688,
													"src": "6449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "6506:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 701,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "6590:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6590:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6610:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6590:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 711,
																"nodeType": "Block",
																"src": "6898:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 708,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 692,
																					"src": "6923:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 707,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "6916:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6916:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 710,
																		"nodeType": "ExpressionStatement",
																		"src": "6916:20:4"
																	}
																]
															},
															"id": 712,
															"nodeType": "IfStatement",
															"src": "6586:365:4",
															"trueBody": {
																"id": 706,
																"nodeType": "Block",
																"src": "6613:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6733:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6755:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6784:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6778:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6778:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6759:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6827:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6831:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6823:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6823:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6844:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6816:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6816:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6816:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 690,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6784:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 690,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6831:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 705,
																		"nodeType": "InlineAssembly",
																		"src": "6724:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 714,
												"nodeType": "IfStatement",
												"src": "6445:516:4",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "6458:42:4",
													"statements": [
														{
															"expression": {
																"id": 698,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "6479:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 696,
															"id": 699,
															"nodeType": "Return",
															"src": "6472:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "6061:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6310:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6310:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6332:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6332:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6365:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6365:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6300:97:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6421:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6421:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:14:4"
									},
									"scope": 717,
									"src": "6275:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 718,
							"src": "179:6790:4"
						}
					],
					"src": "86:6884:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							761
						],
						"Initializable": [
							170
						]
					},
					"id": 762,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 719,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 720,
							"nodeType": "ImportDirective",
							"scope": 762,
							"sourceUnit": 171,
							"src": "110:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 722,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "691:13:5"
									},
									"id": 723,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:5"
								}
							],
							"contractDependencies": [
								170
							],
							"contractKind": "contract",
							"documentation": {
								"id": 721,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 761,
							"linearizedBaseContracts": [
								761,
								170
							],
							"name": "ContextUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "758:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 728,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "768:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "768:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "768:26:5"
											}
										]
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 726,
											"modifierName": {
												"id": 725,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "746:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:11:5"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:5"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:0:5"
									},
									"scope": 761,
									"src": "711:90:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "864:7:5",
										"statements": []
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 735,
											"modifierName": {
												"id": 734,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "852:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "852:11:5"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "864:0:5"
									},
									"scope": 761,
									"src": "807:64:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "938:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 743,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "955:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "955:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 742,
												"id": 745,
												"nodeType": "Return",
												"src": "948:17:5"
											}
										]
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:2:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "929:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:9:5"
									},
									"scope": 761,
									"src": "876:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1045:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 752,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1062:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1062:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 751,
												"id": 754,
												"nodeType": "Return",
												"src": "1055:15:5"
											}
										]
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:2:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1029:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1029:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:16:5"
									},
									"scope": 761,
									"src": "978:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 760,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 761,
									"src": "1082:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 757,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 759,
										"length": {
											"hexValue": "3530",
											"id": 758,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1090:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1082:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 762,
							"src": "651:459:5"
						}
					],
					"src": "86:1025:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
					"exportedSymbols": {
						"SafeMathUpgradeable": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 763,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 764,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "SafeMathUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "713:140:6",
										"statements": [
											{
												"id": 794,
												"nodeType": "UncheckedBlock",
												"src": "723:124:6",
												"statements": [
													{
														"assignments": [
															777
														],
														"declarations": [
															{
																"constant": false,
																"id": 777,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 794,
																"src": "747:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "747:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 781,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 779,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "759:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "747:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 782,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "782:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 783,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "782:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 789,
														"nodeType": "IfStatement",
														"src": "778:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "797:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "796:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 775,
															"id": 788,
															"nodeType": "Return",
															"src": "789:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "828:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 791,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "834:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 792,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "827:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 775,
														"id": 793,
														"nodeType": "Return",
														"src": "820:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "501:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "653:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "664:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:22:6"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "698:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "704:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:15:6"
									},
									"scope": 1073,
									"src": "637:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "1075:113:6",
										"statements": [
											{
												"id": 822,
												"nodeType": "UncheckedBlock",
												"src": "1085:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 808,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "1113:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 809,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "1117:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1113:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 815,
														"nodeType": "IfStatement",
														"src": "1109:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1128:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1135:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 807,
															"id": 814,
															"nodeType": "Return",
															"src": "1120:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1159:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 817,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "1165:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 818,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "1169:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1165:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 820,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1158:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 807,
														"id": 821,
														"nodeType": "Return",
														"src": "1151:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "859:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1015:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1026:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:22:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1060:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1060:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1066:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:15:6"
									},
									"scope": 1073,
									"src": "999:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "1412:417:6",
										"statements": [
											{
												"id": 864,
												"nodeType": "UncheckedBlock",
												"src": "1422:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1680:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1685:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1680:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "1676:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1702:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 842,
															"nodeType": "Return",
															"src": "1688:16:6"
														}
													},
													{
														"assignments": [
															845
														],
														"declarations": [
															{
																"constant": false,
																"id": 845,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 864,
																"src": "1718:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1718:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 849,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1730:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 847,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1730:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1718:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 850,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1753:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 851,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "1757:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1753:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 853,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1762:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1753:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 859,
														"nodeType": "IfStatement",
														"src": "1749:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1773:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1780:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1772:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 858,
															"nodeType": "Return",
															"src": "1765:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1804:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 861,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1810:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 862,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1803:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 835,
														"id": 863,
														"nodeType": "Return",
														"src": "1796:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "1194:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1352:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1363:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:22:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1397:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1397:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1403:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:15:6"
									},
									"scope": 1073,
									"src": "1336:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "2054:114:6",
										"statements": [
											{
												"id": 892,
												"nodeType": "UncheckedBlock",
												"src": "2064:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 878,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "2092:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2097:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2092:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 885,
														"nodeType": "IfStatement",
														"src": "2088:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2108:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2115:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2107:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 877,
															"id": 884,
															"nodeType": "Return",
															"src": "2100:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2139:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 887,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "2145:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 888,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "2149:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2145:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 890,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2138:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 877,
														"id": 891,
														"nodeType": "Return",
														"src": "2131:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1835:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "1994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2005:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:22:6"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2039:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2039:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2045:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:15:6"
									},
									"scope": 1073,
									"src": "1978:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2403:114:6",
										"statements": [
											{
												"id": 920,
												"nodeType": "UncheckedBlock",
												"src": "2413:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "2441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2446:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2441:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 913,
														"nodeType": "IfStatement",
														"src": "2437:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2457:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2464:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2456:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 905,
															"id": 912,
															"nodeType": "Return",
															"src": "2449:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2488:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 915,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "2494:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 916,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "2498:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2494:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 918,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2487:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 905,
														"id": 919,
														"nodeType": "Return",
														"src": "2480:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "2174:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2354:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:22:6"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2388:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2388:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2394:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:15:6"
									},
									"scope": 1073,
									"src": "2327:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "2819:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 932,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2836:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 933,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2840:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2836:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 935,
												"nodeType": "Return",
												"src": "2829:12:6"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "2523:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2765:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2776:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2764:22:6"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2810:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:9:6"
									},
									"scope": 1073,
									"src": "2752:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "3186:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "3203:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3207:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3203:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 946,
												"id": 950,
												"nodeType": "Return",
												"src": "3196:12:6"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2854:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3132:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3143:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:22:6"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3177:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:9:6"
									},
									"scope": 1073,
									"src": "3119:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3529:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3546:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 963,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3550:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3546:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 961,
												"id": 965,
												"nodeType": "Return",
												"src": "3539:12:6"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "3221:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3475:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3486:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3474:22:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3520:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3519:9:6"
									},
									"scope": 1073,
									"src": "3462:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "3914:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3931:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 978,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "3935:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3931:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 976,
												"id": 980,
												"nodeType": "Return",
												"src": "3924:12:6"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "3564:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3860:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3871:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3871:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3859:22:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3905:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3905:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:9:6"
									},
									"scope": 1073,
									"src": "3847:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "4463:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "4480:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 993,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "4484:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4480:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 991,
												"id": 995,
												"nodeType": "Return",
												"src": "4473:12:6"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "3949:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4409:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4420:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4408:22:6"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4454:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4454:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4453:9:6"
									},
									"scope": 1073,
									"src": "4396:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5081:106:6",
										"statements": [
											{
												"id": 1020,
												"nodeType": "UncheckedBlock",
												"src": "5091:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1010,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "5123:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1011,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "5128:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5123:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1013,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "5131:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1009,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5115:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5115:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1015,
														"nodeType": "ExpressionStatement",
														"src": "5115:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "5165:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1017,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "5169:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5165:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1008,
														"id": 1019,
														"nodeType": "Return",
														"src": "5158:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "4498:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4978:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5016:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1003,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5016:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:80:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5072:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5072:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5071:9:6"
									},
									"scope": 1073,
									"src": "4956:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "5796:105:6",
										"statements": [
											{
												"id": 1045,
												"nodeType": "UncheckedBlock",
												"src": "5806:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1035,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "5838:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5842:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5838:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1038,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5845:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1034,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5830:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5830:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1040,
														"nodeType": "ExpressionStatement",
														"src": "5830:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "5879:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1042,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "5883:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5879:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1033,
														"id": 1044,
														"nodeType": "Return",
														"src": "5872:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "5193:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5693:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5712:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5712:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5731:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5731:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5683:80:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5787:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:9:6"
									},
									"scope": 1073,
									"src": "5671:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "6672:105:6",
										"statements": [
											{
												"id": 1070,
												"nodeType": "UncheckedBlock",
												"src": "6682:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1060,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "6714:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6718:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6714:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1063,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "6721:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1059,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6706:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6706:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1065,
														"nodeType": "ExpressionStatement",
														"src": "6706:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1066,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "6755:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1067,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "6759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6755:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1058,
														"id": 1069,
														"nodeType": "Return",
														"src": "6748:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "5907:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6569:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6569:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6588:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6607:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6607:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6559:80:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6663:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6662:9:6"
									},
									"scope": 1073,
									"src": "6547:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1074,
							"src": "467:6312:6"
						}
					],
					"src": "92:6688:6"
				},
				"id": 6
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							1146
						]
					},
					"id": 1147,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1146,
							"linearizedBaseContracts": [
								1146
							],
							"name": "IUniswapV2Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1085,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "115:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "139:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "163:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "177:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "177:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:68:7"
									},
									"src": "97:86:7"
								},
								{
									"functionSelector": "017e7e58",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:2:7"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "229:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "228:9:7"
									},
									"scope": 1146,
									"src": "189:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "263:2:7"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "289:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:9:7"
									},
									"scope": 1146,
									"src": "243:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7cd07e47",
									"id": 1100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "320:2:7"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "346:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:7"
									},
									"scope": 1146,
									"src": "303:52:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "378:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "394:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:32:7"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "433:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:14:7"
									},
									"scope": 1146,
									"src": "361:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 1116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "470:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:6:7"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "499:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:14:7"
									},
									"scope": 1146,
									"src": "452:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "541:2:7"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "567:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "567:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:6:7"
									},
									"scope": 1146,
									"src": "518:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 1130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "599:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "615:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:32:7"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "649:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:14:7"
									},
									"scope": 1146,
									"src": "579:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 1135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "687:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:9:7"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:7"
									},
									"scope": 1146,
									"src": "669:36:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 1140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "734:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:9:7"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:0:7"
									},
									"scope": 1146,
									"src": "710:42:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23cf3118",
									"id": 1145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMigrator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "778:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:9:7"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:0:7"
									},
									"scope": 1146,
									"src": "757:39:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1147,
							"src": "63:735:7"
						}
					],
					"src": "37:762:7"
				},
				"id": 7
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1388
						]
					},
					"id": 1389,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1148,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1388,
							"linearizedBaseContracts": [
								1388
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1156,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "109:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "132:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "157:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "157:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:60:8"
									},
									"src": "94:75:8"
								},
								{
									"anonymous": false,
									"id": 1164,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "189:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "211:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "231:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:54:8"
									},
									"src": "174:69:8"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:8"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "288:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "288:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:15:8"
									},
									"scope": 1388,
									"src": "249:54:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:8"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "349:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "349:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:15:8"
									},
									"scope": 1388,
									"src": "308:56:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:2:8"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "412:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1176,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "412:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:7:8"
									},
									"scope": 1388,
									"src": "369:50:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:8"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "470:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:6:8"
									},
									"scope": 1388,
									"src": "424:52:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "500:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:15:8"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "538:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "538:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:6:8"
									},
									"scope": 1388,
									"src": "481:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "568:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "583:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:32:8"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "623:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:6:8"
									},
									"scope": 1388,
									"src": "549:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "652:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "669:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:29:8"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "699:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "699:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:6:8"
									},
									"scope": 1388,
									"src": "635:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "728:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "740:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "740:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:24:8"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "770:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "770:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:6:8"
									},
									"scope": 1388,
									"src": "710:66:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "803:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "817:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "829:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:38:8"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "859:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "859:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:6:8"
									},
									"scope": 1388,
									"src": "781:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:2:8"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "922:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:9:8"
									},
									"scope": 1388,
									"src": "871:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:8"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "986:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:9:8"
									},
									"scope": 1388,
									"src": "936:59:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1016:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:15:8"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1054:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1054:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:6:8"
									},
									"scope": 1388,
									"src": "1000:60:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1082:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1097:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1114:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1114:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1126:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1126:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1141:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1141:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1150:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1161:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:90:8"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1180:0:8"
									},
									"scope": 1388,
									"src": "1066:115:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1271,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1198:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1222:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1222:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1236:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1236:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:52:8"
									},
									"src": "1187:63:8"
								},
								{
									"anonymous": false,
									"id": 1281,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1266:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1290:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1304:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1304:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1318:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:72:8"
									},
									"src": "1255:83:8"
								},
								{
									"anonymous": false,
									"id": 1295,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1363:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1395:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1395:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1419:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1419:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1443:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1443:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1468:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1493:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:164:8"
									},
									"src": "1343:175:8"
								},
								{
									"anonymous": false,
									"id": 1301,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1534:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1296,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1552:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1298,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:36:8"
									},
									"src": "1523:47:8"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:2:8"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1628:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1628:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:6:8"
									},
									"scope": 1388,
									"src": "1576:58:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1655:2:8"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "1681:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:8"
									},
									"scope": 1388,
									"src": "1639:51:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:8"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1736:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:9:8"
									},
									"scope": 1388,
									"src": "1695:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:8"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "1791:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:9:8"
									},
									"scope": 1388,
									"src": "1750:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:2:8"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1851:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1323,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1869:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1325,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "1887:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1327,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1887:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:63:8"
									},
									"scope": 1388,
									"src": "1805:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:2:8"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1974:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1974:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:6:8"
									},
									"scope": 1388,
									"src": "1919:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2014:2:8"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2040:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2040:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:6:8"
									},
									"scope": 1388,
									"src": "1985:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2065:2:8"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "2091:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2091:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:6:8"
									},
									"scope": 1388,
									"src": "2051:46:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2117:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2116:12:8"
									},
									"returnParameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "2147:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2147:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:16:8"
									},
									"scope": 1388,
									"src": "2103:60:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 1361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2182:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:12:8"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2212:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2212:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2226:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2226:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:28:8"
									},
									"scope": 1388,
									"src": "2168:72:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2259:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2259:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2276:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2276:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2293:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2305:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2305:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2258:67:8"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:0:8"
									},
									"scope": 1388,
									"src": "2245:90:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2354:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:12:8"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:8"
									},
									"scope": 1388,
									"src": "2340:35:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2393:2:8"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2404:0:8"
									},
									"scope": 1388,
									"src": "2380:25:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2431:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "2440:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:18:8"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:0:8"
									},
									"scope": 1388,
									"src": "2411:47:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1389,
							"src": "63:2397:8"
						}
					],
					"src": "37:2423:8"
				},
				"id": 8
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1696
						]
					},
					"id": 1697,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1390,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1696,
							"linearizedBaseContracts": [
								1696
							],
							"name": "IUniswapV2Router01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:9"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "140:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:9:9"
									},
									"scope": 1696,
									"src": "98:51:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:9"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "193:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:9:9"
									},
									"scope": 1696,
									"src": "154:48:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "239:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "263:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "287:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "287:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "316:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "316:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "345:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "370:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "370:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "395:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "415:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "415:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "229:205:9"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "453:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "453:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "467:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "467:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "481:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "481:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:44:9"
									},
									"scope": 1696,
									"src": "208:289:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "536:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "559:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "559:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "592:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "592:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "621:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "621:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "648:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "668:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "668:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:161:9"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "714:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "714:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "732:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "732:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "748:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "748:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:50:9"
									},
									"scope": 1696,
									"src": "502:262:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "803:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "827:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "851:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "851:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "875:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "900:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "900:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "925:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "945:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "945:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:171:9"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "983:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "983:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "997:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:28:9"
									},
									"scope": 1696,
									"src": "769:242:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1053:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1076:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1076:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1100:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1100:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1129:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1129:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1156:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1176:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1176:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:152:9"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1214:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1214:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1232:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1232:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:34:9"
									},
									"scope": 1696,
									"src": "1016:232:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1297:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1321:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1345:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1345:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1369:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1369:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1394:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1394:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1419:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1439:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1439:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1462:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1462:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1479:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1503,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1479:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1488:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1505,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1499:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:227:9"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1533:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1533:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1547:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1547:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1532:28:9"
									},
									"scope": 1696,
									"src": "1253:308:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1542,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1613:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1636:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1636:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1660:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1660:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1689:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1689:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1716:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1736:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1736:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1759:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1759:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1776:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1776:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1785:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1796:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:208:9"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1830:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1830:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1848:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1848:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:34:9"
									},
									"scope": 1696,
									"src": "1566:298:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1912:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1912:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1935:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1935:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1962:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1547,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1962:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1548,
													"nodeType": "ArrayTypeName",
													"src": "1962:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "1995:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2015:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2015:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:132:9"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "2053:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1555,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2053:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1556,
													"nodeType": "ArrayTypeName",
													"src": "2053:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:23:9"
									},
									"scope": 1696,
									"src": "1869:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2124:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2124:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2148:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2148:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2174:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1564,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2174:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1565,
													"nodeType": "ArrayTypeName",
													"src": "2174:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2207:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2227:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2227:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:132:9"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "2265:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2265:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "2265:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:23:9"
									},
									"scope": 1696,
									"src": "2081:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2324:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2324:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2343:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1579,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2343:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1580,
													"nodeType": "ArrayTypeName",
													"src": "2343:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2368:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2380:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2380:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:71:9"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "2445:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1587,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2445:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1588,
													"nodeType": "ArrayTypeName",
													"src": "2445:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:23:9"
									},
									"scope": 1696,
									"src": "2293:175:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1608,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2504:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2504:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2520:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2520:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2538:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1596,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2538:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1597,
													"nodeType": "ArrayTypeName",
													"src": "2538:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2563:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2575:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2575:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2503:86:9"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "2624:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1604,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2624:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1605,
													"nodeType": "ArrayTypeName",
													"src": "2624:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2623:23:9"
									},
									"scope": 1696,
									"src": "2473:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2683:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2683:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2698:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2698:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2717:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1613,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2717:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1614,
													"nodeType": "ArrayTypeName",
													"src": "2717:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2742:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2754:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2754:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:86:9"
									},
									"returnParameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "2803:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1621,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2803:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1622,
													"nodeType": "ArrayTypeName",
													"src": "2803:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2802:23:9"
									},
									"scope": 1696,
									"src": "2652:174:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2862:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2862:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2878:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1628,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2878:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1629,
													"nodeType": "ArrayTypeName",
													"src": "2878:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2903:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2915:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2915:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:68:9"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2980:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1636,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2980:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1637,
													"nodeType": "ArrayTypeName",
													"src": "2980:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2979:23:9"
									},
									"scope": 1696,
									"src": "2831:172:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3024:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3024:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3038:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3038:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3053:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3053:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3023:44:9"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "3091:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3091:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3090:14:9"
									},
									"scope": 1696,
									"src": "3009:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3132:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3132:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3147:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3147:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3163:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3163:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:48:9"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "3203:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3203:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:16:9"
									},
									"scope": 1696,
									"src": "3110:109:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3245:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3245:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3261:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3261:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3277:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3277:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3244:49:9"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3317:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3317:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:15:9"
									},
									"scope": 1696,
									"src": "3224:108:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3360:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3360:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3375:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1676,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3375:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1677,
													"nodeType": "ArrayTypeName",
													"src": "3375:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3359:40:9"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "3423:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1680,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3423:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1681,
													"nodeType": "ArrayTypeName",
													"src": "3423:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:23:9"
									},
									"scope": 1696,
									"src": "3337:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3473:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3473:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3489:23:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3489:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1688,
													"nodeType": "ArrayTypeName",
													"src": "3489:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:41:9"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "3537:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1691,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3537:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1692,
													"nodeType": "ArrayTypeName",
													"src": "3537:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:23:9"
									},
									"scope": 1696,
									"src": "3451:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1697,
							"src": "63:3499:9"
						}
					],
					"src": "37:3525:9"
				},
				"id": 9
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1696
						],
						"IUniswapV2Router02": [
							1784
						]
					},
					"id": 1785,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1698,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:10"
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1699,
							"nodeType": "ImportDirective",
							"scope": 1785,
							"sourceUnit": 1697,
							"src": "63:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1700,
										"name": "IUniswapV2Router01",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1696,
										"src": "131:18:10"
									},
									"id": 1701,
									"nodeType": "InheritanceSpecifier",
									"src": "131:18:10"
								}
							],
							"contractDependencies": [
								1696
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1784,
							"linearizedBaseContracts": [
								1784,
								1696
							],
							"name": "IUniswapV2Router02",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "222:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "245:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "245:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "269:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "269:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "298:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "298:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "325:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "345:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "345:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:152:10"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "383:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "383:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:16:10"
									},
									"scope": 1784,
									"src": "156:243:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "480:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "503:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "503:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "527:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "527:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "556:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "556:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "583:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "603:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "603:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "626:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "626:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "643:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1733,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "643:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "652:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "663:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:208:10"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "697:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "697:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:16:10"
									},
									"scope": 1784,
									"src": "404:309:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "791:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "814:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "841:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1748,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "841:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1749,
													"nodeType": "ArrayTypeName",
													"src": "841:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "874:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "894:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "894:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:132:10"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:0:10"
									},
									"scope": 1784,
									"src": "719:204:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "997:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "997:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1024:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1760,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1024:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1761,
													"nodeType": "ArrayTypeName",
													"src": "1024:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1057:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "1077:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:109:10"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:0:10"
									},
									"scope": 1784,
									"src": "928:186:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1188:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1188:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1211:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1211:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1238:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1774,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1238:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1775,
													"nodeType": "ArrayTypeName",
													"src": "1238:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1271:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1291:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:132:10"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1319:0:10"
									},
									"scope": 1784,
									"src": "1119:201:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1785,
							"src": "99:1223:10"
						}
					],
					"src": "37:1285:10"
				},
				"id": 10
			},
			"contracts/helperLogic.sol": {
				"ast": {
					"absolutePath": "contracts/helperLogic.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						],
						"ContextUpgradeable": [
							761
						],
						"IERC20Upgradeable": [
							248
						],
						"IFarm": [
							1804
						],
						"IStabilizer": [
							1810
						],
						"IUniswapV2Factory": [
							1146
						],
						"IUniswapV2Pair": [
							1388
						],
						"IUniswapV2Router01": [
							1696
						],
						"IUniswapV2Router02": [
							1784
						],
						"Initializable": [
							170
						],
						"OwnableUpgradeable": [
							125
						],
						"SafeERC20Upgradeable": [
							472
						],
						"SafeMathUpgradeable": [
							1073
						],
						"helperLogic": [
							2404
						]
					},
					"id": 2405,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1786,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 1787,
							"nodeType": "ImportDirective",
							"scope": 2405,
							"sourceUnit": 249,
							"src": "55:79:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 1788,
							"nodeType": "ImportDirective",
							"scope": 2405,
							"sourceUnit": 473,
							"src": "135:88:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1789,
							"nodeType": "ImportDirective",
							"scope": 2405,
							"sourceUnit": 171,
							"src": "224:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1790,
							"nodeType": "ImportDirective",
							"scope": 2405,
							"sourceUnit": 126,
							"src": "300:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"id": 1791,
							"nodeType": "ImportDirective",
							"scope": 2405,
							"sourceUnit": 1074,
							"src": "376:80:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
							"id": 1792,
							"nodeType": "ImportDirective",
							"scope": 2405,
							"sourceUnit": 1389,
							"src": "458:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Factory.sol",
							"id": 1793,
							"nodeType": "ImportDirective",
							"scope": 2405,
							"sourceUnit": 1147,
							"src": "534:78:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Router02.sol",
							"id": 1794,
							"nodeType": "ImportDirective",
							"scope": 2405,
							"sourceUnit": 1785,
							"src": "613:79:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1804,
							"linearizedBaseContracts": [
								1804
							],
							"name": "IFarm",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "46ca6bea",
									"id": 1803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "742:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "764:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "793:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:83:11"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "824:0:11"
									},
									"scope": 1804,
									"src": "716:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2405,
							"src": "694:133:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1810,
							"linearizedBaseContracts": [
								1810
							],
							"name": "IStabilizer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "796c7be7",
									"id": 1809,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "goStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:2:11"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "899:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "899:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:6:11"
									},
									"scope": 1810,
									"src": "857:48:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2405,
							"src": "829:78:11"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1811,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "933:13:11"
									},
									"id": 1812,
									"nodeType": "InheritanceSpecifier",
									"src": "933:13:11"
								},
								{
									"baseName": {
										"id": 1813,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "948:18:11"
									},
									"id": 1814,
									"nodeType": "InheritanceSpecifier",
									"src": "948:18:11"
								}
							],
							"contractDependencies": [
								125,
								170,
								761
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2404,
							"linearizedBaseContracts": [
								2404,
								125,
								761,
								170
							],
							"name": "helperLogic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1818,
									"libraryName": {
										"id": 1815,
										"name": "SafeERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "979:20:11"
									},
									"nodeType": "UsingForDirective",
									"src": "973:49:11",
									"typeName": {
										"id": 1817,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1816,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1004:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1004:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									}
								},
								{
									"id": 1821,
									"libraryName": {
										"id": 1819,
										"name": "SafeMathUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1073,
										"src": "1033:19:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1027:38:11",
									"typeName": {
										"id": 1820,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1057:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "48c7e528",
									"id": 1825,
									"mutability": "mutable",
									"name": "executor",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1086:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1824,
										"keyType": {
											"id": 1822,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1094:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1086:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1823,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1105:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3011d3d5",
									"id": 1828,
									"mutability": "mutable",
									"name": "usc",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1132:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1827,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1826,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1132:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1132:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 1831,
									"mutability": "mutable",
									"name": "usdc",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1166:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1830,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1829,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1166:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1166:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ecaac41",
									"id": 1834,
									"mutability": "mutable",
									"name": "sea",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1201:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1833,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1832,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1201:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1201:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8bb97a1",
									"id": 1837,
									"mutability": "mutable",
									"name": "ssea",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1235:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 1836,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1835,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "1235:17:11"
										},
										"referencedDeclaration": 248,
										"src": "1235:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec1f1f69",
									"id": 1839,
									"mutability": "mutable",
									"name": "op",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1270:17:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1838,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1270:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91cca3db",
									"id": 1841,
									"mutability": "mutable",
									"name": "dev",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1293:18:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1840,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1293:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6d7eade",
									"id": 1844,
									"mutability": "mutable",
									"name": "Router",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1318:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1843,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1842,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1784,
											"src": "1318:18:11"
										},
										"referencedDeclaration": 1784,
										"src": "1318:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c83dd231",
									"id": 1847,
									"mutability": "mutable",
									"name": "Factory",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1356:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
										"typeString": "contract IUniswapV2Factory"
									},
									"typeName": {
										"id": 1846,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1845,
											"name": "IUniswapV2Factory",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1146,
											"src": "1356:17:11"
										},
										"referencedDeclaration": 1146,
										"src": "1356:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
											"typeString": "contract IUniswapV2Factory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bd0b1f44",
									"id": 1849,
									"mutability": "mutable",
									"name": "toSseaPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1395:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1848,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1395:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c535a52",
									"id": 1851,
									"mutability": "mutable",
									"name": "toOpPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1429:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1850,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1429:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ae6a027",
									"id": 1853,
									"mutability": "mutable",
									"name": "toDevPercent",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1461:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1852,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1461:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aaf5eb68",
									"id": 1855,
									"mutability": "mutable",
									"name": "PRECISION",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1494:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1494:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16d03993",
									"id": 1857,
									"mutability": "mutable",
									"name": "basePoint",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1525:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1856,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1525:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f1068454",
									"id": 1859,
									"mutability": "mutable",
									"name": "pid",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1555:18:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1858,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1555:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36e9332d",
									"id": 1862,
									"mutability": "mutable",
									"name": "farm",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1580:17:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFarm_$1804",
										"typeString": "contract IFarm"
									},
									"typeName": {
										"id": 1861,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1860,
											"name": "IFarm",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1804,
											"src": "1580:5:11"
										},
										"referencedDeclaration": 1804,
										"src": "1580:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFarm_$1804",
											"typeString": "contract IFarm"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9da5b0d5",
									"id": 1864,
									"mutability": "mutable",
									"name": "autoAdjustFarm",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1604:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1863,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1604:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "58de5de8",
									"id": 1866,
									"mutability": "mutable",
									"name": "openStabilizer",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1636:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1865,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1636:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e47961c",
									"id": 1868,
									"mutability": "mutable",
									"name": "stabilizer",
									"nodeType": "VariableDeclaration",
									"scope": 2404,
									"src": "1669:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1867,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1669:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "2057:528:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1894,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2067:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "2067:16:11"
											},
											{
												"expression": {
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1897,
														"name": "Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "2137:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1898,
														"name": "_Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "2146:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "2137:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "2137:16:11"
											},
											{
												"expression": {
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1901,
														"name": "Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "2163:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
															"typeString": "contract IUniswapV2Factory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1902,
														"name": "_Factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1871,
														"src": "2173:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
															"typeString": "contract IUniswapV2Factory"
														}
													},
													"src": "2163:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "2163:18:11"
											},
											{
												"expression": {
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1905,
														"name": "usc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "2191:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1906,
														"name": "_usc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "2197:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2191:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "2191:10:11"
											},
											{
												"expression": {
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1909,
														"name": "sea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "2211:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1910,
														"name": "_sea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "2217:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2211:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "2211:10:11"
											},
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1913,
														"name": "ssea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "2231:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1914,
														"name": "_ssea",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "2238:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2231:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "2231:12:11"
											},
											{
												"expression": {
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1917,
														"name": "op",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "2253:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1918,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2258:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2258:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2253:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "2253:15:11"
											},
											{
												"expression": {
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1922,
														"name": "dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "2278:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1923,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2284:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2284:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2278:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "2278:16:11"
											},
											{
												"expression": {
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1927,
														"name": "toSseaPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "2304:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35303030",
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000_by_1",
															"typeString": "int_const 5000"
														},
														"value": "5000"
													},
													"src": "2304:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "2304:20:11"
											},
											{
												"expression": {
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1931,
														"name": "toOpPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "2334:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030",
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2348:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500_by_1",
															"typeString": "int_const 2500"
														},
														"value": "2500"
													},
													"src": "2334:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "2334:18:11"
											},
											{
												"expression": {
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1935,
														"name": "toDevPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "2362:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32353030",
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2500_by_1",
															"typeString": "int_const 2500"
														},
														"value": "2500"
													},
													"src": "2362:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "2362:19:11"
											},
											{
												"expression": {
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1939,
														"name": "PRECISION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "2391:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030",
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2403:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2391:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "2391:17:11"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1943,
														"name": "basePoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "2418:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2430:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2418:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "2418:16:11"
											},
											{
												"expression": {
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1947,
														"name": "autoAdjustFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2444:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2461:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2444:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "2444:21:11"
											},
											{
												"expression": {
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1951,
														"name": "openStabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "2475:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2492:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2475:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "2475:22:11"
											},
											{
												"expression": {
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1955,
														"name": "farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "2507:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1956,
														"name": "_farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "2514:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"src": "2507:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "2507:12:11"
											},
											{
												"expression": {
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1959,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "2529:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1960,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "2536:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2529:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "2529:12:11"
											}
										]
									},
									"functionSelector": "35876476",
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1892,
											"modifierName": {
												"id": 1891,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "2041:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2041:11:11"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "_Factory",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1765:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
													"typeString": "contract IUniswapV2Factory"
												},
												"typeName": {
													"id": 1870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1869,
														"name": "IUniswapV2Factory",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1146,
														"src": "1765:17:11"
													},
													"referencedDeclaration": 1146,
													"src": "1765:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
														"typeString": "contract IUniswapV2Factory"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "_Router",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1801:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
													"typeString": "contract IUniswapV2Router02"
												},
												"typeName": {
													"id": 1873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1872,
														"name": "IUniswapV2Router02",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1784,
														"src": "1801:18:11"
													},
													"referencedDeclaration": 1784,
													"src": "1801:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1784",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "_usc",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1837:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1876,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1875,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1837:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1837:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "_usdc",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1869:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1878,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1869:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1869:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "_sea",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1902:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1882,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1881,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1902:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1902:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "_ssea",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1934:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 1885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1884,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1934:17:11"
													},
													"referencedDeclaration": 248,
													"src": "1934:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "_farm",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1967:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFarm_$1804",
													"typeString": "contract IFarm"
												},
												"typeName": {
													"id": 1888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1887,
														"name": "IFarm",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1804,
														"src": "1967:5:11"
													},
													"referencedDeclaration": 1804,
													"src": "1967:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:264:11"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:11"
									},
									"scope": 2404,
									"src": "1701:884:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "2704:64:11",
										"statements": [
											{
												"expression": {
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1975,
															"name": "executor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "2714:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1977,
														"indexExpression": {
															"id": 1976,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "2723:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2714:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1978,
														"name": "_type",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "2735:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "2714:26:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2757:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1974,
												"id": 1982,
												"nodeType": "Return",
												"src": "2750:11:11"
											}
										]
									},
									"functionSelector": "1e1bff3f",
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1971,
											"modifierName": {
												"id": 1970,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "2667:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2667:9:11"
										}
									],
									"name": "setExecutor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2612:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2612:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "_type",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2630:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2630:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2611:30:11"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2694:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2694:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:6:11"
									},
									"scope": 2404,
									"src": "2591:177:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "2798:97:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1987,
																"name": "executor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "2816:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1990,
															"indexExpression": {
																"expression": {
																	"id": 1988,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2825:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2825:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2816:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6578656375746f723a2063616c6c6572206973206e6f7420746865206578656375746f72",
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2838:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a",
																"typeString": "literal_string \"executor: caller is not the executor\""
															},
															"value": "executor: caller is not the executor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a",
																"typeString": "literal_string \"executor: caller is not the executor\""
															}
														],
														"id": 1986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2808:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2808:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "2808:69:11"
											},
											{
												"id": 1994,
												"nodeType": "PlaceholderStatement",
												"src": "2887:1:11"
											}
										]
									},
									"id": 1996,
									"name": "onlyExecutor",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2795:2:11"
									},
									"src": "2774:121:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2090,
										"nodeType": "Block",
										"src": "2964:594:11",
										"statements": [
											{
												"assignments": [
													2004
												],
												"declarations": [
													{
														"constant": false,
														"id": 2004,
														"mutability": "mutable",
														"name": "uscBalanceOf",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "2974:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2974:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2012,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2009,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3019:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_helperLogic_$2404",
																		"typeString": "contract helperLogic"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_helperLogic_$2404",
																		"typeString": "contract helperLogic"
																	}
																],
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3011:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2007,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3011:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3011:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2005,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "2997:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "2997:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2997:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2974:51:11"
											},
											{
												"assignments": [
													2014
												],
												"declarations": [
													{
														"constant": false,
														"id": 2014,
														"mutability": "mutable",
														"name": "toSsea",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "3035:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2013,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3035:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2022,
												"initialValue": {
													"arguments": [
														{
															"id": 2020,
															"name": "PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "3088:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2017,
																	"name": "toSseaPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "3069:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2015,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2004,
																	"src": "3052:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "3052:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3052:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "3052:35:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3035:63:11"
											},
											{
												"assignments": [
													2024
												],
												"declarations": [
													{
														"constant": false,
														"id": 2024,
														"mutability": "mutable",
														"name": "toOp",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "3108:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3108:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2032,
												"initialValue": {
													"arguments": [
														{
															"id": 2030,
															"name": "PRECISION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "3157:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2027,
																	"name": "toOpPercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "3140:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2025,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2004,
																	"src": "3123:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "3123:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3123:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "3123:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3123:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3108:59:11"
											},
											{
												"assignments": [
													2034
												],
												"declarations": [
													{
														"constant": false,
														"id": 2034,
														"mutability": "mutable",
														"name": "toDev",
														"nodeType": "VariableDeclaration",
														"scope": 2090,
														"src": "3177:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2033,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3177:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2042,
												"initialValue": {
													"arguments": [
														{
															"id": 2040,
															"name": "toOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "3222:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2037,
																	"name": "toSsea",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "3210:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2035,
																	"name": "uscBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2004,
																	"src": "3193:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 952,
																"src": "3193:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3193:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "3193:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3193:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3177:50:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2048,
																	"name": "ssea",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "3263:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3255:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2046,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3255:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3255:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2050,
															"name": "toSsea",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "3270:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2043,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "3238:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "3238:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3238:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "3238:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2058,
																	"name": "op",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "3312:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3304:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3304:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3304:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2060,
															"name": "toOp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "3317:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2053,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "3287:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "3287:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3287:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "3287:35:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2068,
																	"name": "dev",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "3357:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3349:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2066,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3349:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3349:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2070,
															"name": "toDev",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "3363:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2063,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "3332:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "3332:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "3332:37:11"
											},
											{
												"condition": {
													"id": 2073,
													"name": "autoAdjustFarm",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1864,
													"src": "3384:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2078,
												"nodeType": "IfStatement",
												"src": "3380:57:11",
												"trueBody": {
													"id": 2077,
													"nodeType": "Block",
													"src": "3400:37:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2074,
																	"name": "adjustFarm",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "3414:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3414:12:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2076,
															"nodeType": "ExpressionStatement",
															"src": "3414:12:11"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2079,
													"name": "openStabilizer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1866,
													"src": "3451:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2087,
												"nodeType": "IfStatement",
												"src": "3447:83:11",
												"trueBody": {
													"id": 2086,
													"nodeType": "Block",
													"src": "3467:63:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2081,
																				"name": "stabilizer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1868,
																				"src": "3493:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2080,
																			"name": "IStabilizer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "3481:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IStabilizer_$1810_$",
																				"typeString": "type(contract IStabilizer)"
																			}
																		},
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3481:23:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IStabilizer_$1810",
																			"typeString": "contract IStabilizer"
																		}
																	},
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "goStabilizer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1809,
																	"src": "3481:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
																		"typeString": "function () external returns (bool)"
																	}
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3481:38:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2085,
															"nodeType": "ExpressionStatement",
															"src": "3481:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3547:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2002,
												"id": 2089,
												"nodeType": "Return",
												"src": "3540:11:11"
											}
										]
									},
									"functionSelector": "d10c06a2",
									"id": 2091,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1999,
											"modifierName": {
												"id": 1998,
												"name": "onlyExecutor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1996,
												"src": "2936:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2936:12:11"
										}
									],
									"name": "jointExecution",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2924:2:11"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2091,
												"src": "2958:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2958:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2957:6:11"
									},
									"scope": 2404,
									"src": "2901:657:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2201,
										"nodeType": "Block",
										"src": "3595:877:11",
										"statements": [
											{
												"assignments": [
													2095
												],
												"declarations": [
													{
														"constant": false,
														"id": 2095,
														"mutability": "mutable",
														"name": "pairAddress",
														"nodeType": "VariableDeclaration",
														"scope": 2201,
														"src": "3605:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2094,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3605:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2107,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2100,
																	"name": "usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "3651:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3643:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2098,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3643:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3643:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2104,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "3666:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3658:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3658:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3658:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2096,
															"name": "Factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "3627:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$1146",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1109,
														"src": "3627:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) view external returns (address)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3627:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3605:66:11"
											},
											{
												"assignments": [
													2109
												],
												"declarations": [
													{
														"constant": false,
														"id": 2109,
														"mutability": "mutable",
														"name": "uscBalanceOf",
														"nodeType": "VariableDeclaration",
														"scope": 2201,
														"src": "3681:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3681:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2114,
												"initialValue": {
													"arguments": [
														{
															"id": 2112,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "3718:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2110,
															"name": "usc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "3704:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "3704:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3704:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3681:49:11"
											},
											{
												"assignments": [
													2116
												],
												"declarations": [
													{
														"constant": false,
														"id": 2116,
														"mutability": "mutable",
														"name": "usdcBalanceOf",
														"nodeType": "VariableDeclaration",
														"scope": 2201,
														"src": "3740:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3740:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2121,
												"initialValue": {
													"arguments": [
														{
															"id": 2119,
															"name": "pairAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "3779:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2117,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "3764:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "3764:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3764:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3740:51:11"
											},
											{
												"assignments": [
													2123
												],
												"declarations": [
													{
														"constant": false,
														"id": 2123,
														"mutability": "mutable",
														"name": "e18",
														"nodeType": "VariableDeclaration",
														"scope": 2201,
														"src": "3801:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3801:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2125,
												"initialValue": {
													"hexValue": "31653138",
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3815:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"value": "1e18"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3801:18:11"
											},
											{
												"assignments": [
													2127
												],
												"declarations": [
													{
														"constant": false,
														"id": 2127,
														"mutability": "mutable",
														"name": "uscPrice",
														"nodeType": "VariableDeclaration",
														"scope": 2201,
														"src": "3829:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3829:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2135,
												"initialValue": {
													"arguments": [
														{
															"id": 2133,
															"name": "uscBalanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "3875:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2130,
																	"name": "e18",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "3866:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2128,
																	"name": "usdcBalanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2116,
																	"src": "3848:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "3848:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3848:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "3848:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3848:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3829:59:11"
											},
											{
												"assignments": [
													2137
												],
												"declarations": [
													{
														"constant": false,
														"id": 2137,
														"mutability": "mutable",
														"name": "USDC_USC_LP_farmPoint",
														"nodeType": "VariableDeclaration",
														"scope": 2201,
														"src": "3898:29:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3898:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2138,
												"nodeType": "VariableDeclarationStatement",
												"src": "3898:29:11"
											},
											{
												"assignments": [
													2140
												],
												"declarations": [
													{
														"constant": false,
														"id": 2140,
														"mutability": "mutable",
														"name": "diffPoint",
														"nodeType": "VariableDeclaration",
														"scope": 2201,
														"src": "3937:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3937:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2141,
												"nodeType": "VariableDeclarationStatement",
												"src": "3937:17:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2142,
														"name": "uscPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2127,
														"src": "3968:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3979:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "3968:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2191,
													"nodeType": "Block",
													"src": "4264:146:11",
													"statements": [
														{
															"expression": {
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2174,
																	"name": "diffPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "4298:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653134",
																			"id": 2180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4332:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			},
																			"value": "1e14"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2177,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31653138",
																						"id": 2175,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4311:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"value": "1e18"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 2176,
																						"name": "uscPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2127,
																						"src": "4318:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4311:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2178,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4310:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 982,
																		"src": "4310:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4310:27:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4298:39:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2183,
															"nodeType": "ExpressionStatement",
															"src": "4298:39:11"
														},
														{
															"expression": {
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2184,
																	"name": "USDC_USC_LP_farmPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "4351:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2187,
																			"name": "diffPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2140,
																			"src": "4389:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2185,
																			"name": "basePoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "4375:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 937,
																		"src": "4375:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4375:24:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4351:48:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2190,
															"nodeType": "ExpressionStatement",
															"src": "4351:48:11"
														}
													]
												},
												"id": 2192,
												"nodeType": "IfStatement",
												"src": "3964:446:11",
												"trueBody": {
													"id": 2173,
													"nodeType": "Block",
													"src": "3985:273:11",
													"statements": [
														{
															"expression": {
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2145,
																	"name": "diffPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "4020:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31653134",
																			"id": 2152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4057:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			},
																			"value": "1e14"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100000000000000_by_1",
																				"typeString": "int_const 100000000000000"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"hexValue": "31653138",
																							"id": 2148,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4046:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"id": 2146,
																							"name": "uscPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2127,
																							"src": "4033:8:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2147,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 952,
																						"src": "4033:12:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2149,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4033:18:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2150,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4032:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 982,
																		"src": "4032:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4032:30:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4020:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2155,
															"nodeType": "ExpressionStatement",
															"src": "4020:42:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2156,
																	"name": "diffPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "4080:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2157,
																	"name": "basePoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "4092:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4080:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2171,
																"nodeType": "Block",
																"src": "4167:81:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2164,
																				"name": "USDC_USC_LP_farmPoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "4185:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2167,
																						"name": "diffPoint",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2140,
																						"src": "4223:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2165,
																						"name": "basePoint",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1857,
																						"src": "4209:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2166,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 952,
																					"src": "4209:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4209:24:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4185:48:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2170,
																		"nodeType": "ExpressionStatement",
																		"src": "4185:48:11"
																	}
																]
															},
															"id": 2172,
															"nodeType": "IfStatement",
															"src": "4076:172:11",
															"trueBody": {
																"id": 2163,
																"nodeType": "Block",
																"src": "4103:58:11",
																"statements": [
																	{
																		"expression": {
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2159,
																				"name": "USDC_USC_LP_farmPoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2137,
																				"src": "4121:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 2160,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4145:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "4121:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2162,
																		"nodeType": "ExpressionStatement",
																		"src": "4121:25:11"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2196,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "4432:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2197,
															"name": "USDC_USC_LP_farmPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "4437:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4460:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 2193,
															"name": "farm",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "4419:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFarm_$1804",
																"typeString": "contract IFarm"
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1803,
														"src": "4419:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,uint256,bool) external"
														}
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4419:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2200,
												"nodeType": "ExpressionStatement",
												"src": "4419:46:11"
											}
										]
									},
									"id": 2202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "adjustFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3583:2:11"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3595:0:11"
									},
									"scope": 2404,
									"src": "3564:908:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "4597:96:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2217,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4648:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4648:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2219,
															"name": "_amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "4660:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2214,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "4625:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2213,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "4607:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$248_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4607:27:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "4607:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4607:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2221,
												"nodeType": "ExpressionStatement",
												"src": "4607:58:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4682:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2212,
												"id": 2223,
												"nodeType": "Return",
												"src": "4675:11:11"
											}
										]
									},
									"functionSelector": "930ed033",
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2209,
											"modifierName": {
												"id": 2208,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "4560:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4560:9:11"
										}
									],
									"name": "withdrawalERC20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "4503:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4503:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "_amt",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "4521:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4521:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4502:32:11"
									},
									"returnParameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "4587:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4587:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:6:11"
									},
									"scope": 2404,
									"src": "4478:215:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2240,
										"nodeType": "Block",
										"src": "4766:51:11",
										"statements": [
											{
												"expression": {
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2234,
														"name": "op",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "4776:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2235,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2227,
														"src": "4781:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4776:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2237,
												"nodeType": "ExpressionStatement",
												"src": "4776:13:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4806:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2233,
												"id": 2239,
												"nodeType": "Return",
												"src": "4799:11:11"
											}
										]
									},
									"functionSelector": "a36a7526",
									"id": 2241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2230,
											"modifierName": {
												"id": 2229,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "4741:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4741:9:11"
										}
									],
									"name": "setOp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "4714:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4714:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4713:18:11"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "4760:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4760:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4759:6:11"
									},
									"scope": 2404,
									"src": "4699:118:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "4891:52:11",
										"statements": [
											{
												"expression": {
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2250,
														"name": "dev",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "4901:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2251,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "4907:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4901:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2253,
												"nodeType": "ExpressionStatement",
												"src": "4901:14:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4932:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2249,
												"id": 2255,
												"nodeType": "Return",
												"src": "4925:11:11"
											}
										]
									},
									"functionSelector": "d477f05f",
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2246,
											"modifierName": {
												"id": 2245,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "4866:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4866:9:11"
										}
									],
									"name": "setDev",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "4839:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4838:18:11"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "4885:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4885:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4884:6:11"
									},
									"scope": 2404,
									"src": "4823:120:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2272,
										"nodeType": "Block",
										"src": "5023:58:11",
										"statements": [
											{
												"expression": {
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2266,
														"name": "toSseaPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "5033:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2267,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "5049:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5033:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "5033:20:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5070:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2265,
												"id": 2271,
												"nodeType": "Return",
												"src": "5063:11:11"
											}
										]
									},
									"functionSelector": "27c42a50",
									"id": 2273,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2262,
											"modifierName": {
												"id": 2261,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "4998:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4998:9:11"
										}
									],
									"name": "setToSseaPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "4975:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4974:14:11"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "5017:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5017:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5016:6:11"
									},
									"scope": 2404,
									"src": "4949:132:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2288,
										"nodeType": "Block",
										"src": "5159:56:11",
										"statements": [
											{
												"expression": {
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2282,
														"name": "toOpPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1851,
														"src": "5169:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2283,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2275,
														"src": "5183:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5169:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2285,
												"nodeType": "ExpressionStatement",
												"src": "5169:18:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5204:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2281,
												"id": 2287,
												"nodeType": "Return",
												"src": "5197:11:11"
											}
										]
									},
									"functionSelector": "af5518c4",
									"id": 2289,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2278,
											"modifierName": {
												"id": 2277,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5134:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5134:9:11"
										}
									],
									"name": "setToOpPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "5111:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5111:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5110:14:11"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "5153:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5153:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5152:6:11"
									},
									"scope": 2404,
									"src": "5087:128:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2304,
										"nodeType": "Block",
										"src": "5294:57:11",
										"statements": [
											{
												"expression": {
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2298,
														"name": "toDevPercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "5304:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2299,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2291,
														"src": "5319:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5304:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2301,
												"nodeType": "ExpressionStatement",
												"src": "5304:19:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5340:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2297,
												"id": 2303,
												"nodeType": "Return",
												"src": "5333:11:11"
											}
										]
									},
									"functionSelector": "3c850e1e",
									"id": 2305,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2294,
											"modifierName": {
												"id": 2293,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5269:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5269:9:11"
										}
									],
									"name": "setToDevPercent",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "5246:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5246:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5245:14:11"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "5288:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5288:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5287:6:11"
									},
									"scope": 2404,
									"src": "5221:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2320,
										"nodeType": "Block",
										"src": "5430:60:11",
										"statements": [
											{
												"expression": {
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2314,
														"name": "autoAdjustFarm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "5440:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2315,
														"name": "_bool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "5457:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5440:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2317,
												"nodeType": "ExpressionStatement",
												"src": "5440:22:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5479:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2313,
												"id": 2319,
												"nodeType": "Return",
												"src": "5472:11:11"
											}
										]
									},
									"functionSelector": "4591db50",
									"id": 2321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2310,
											"modifierName": {
												"id": 2309,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5405:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5405:9:11"
										}
									],
									"name": "setAutoAdjustFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "5384:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5384:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5383:12:11"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "5424:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5424:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5423:6:11"
									},
									"scope": 2404,
									"src": "5357:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2336,
										"nodeType": "Block",
										"src": "5569:60:11",
										"statements": [
											{
												"expression": {
													"id": 2332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2330,
														"name": "openStabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "5579:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2331,
														"name": "_bool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2323,
														"src": "5596:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5579:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2333,
												"nodeType": "ExpressionStatement",
												"src": "5579:22:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5618:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2329,
												"id": 2335,
												"nodeType": "Return",
												"src": "5611:11:11"
											}
										]
									},
									"functionSelector": "55c746d1",
									"id": 2337,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2326,
											"modifierName": {
												"id": 2325,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5544:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5544:9:11"
										}
									],
									"name": "setOpenStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "5523:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5523:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5522:12:11"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "5563:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5563:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5562:6:11"
									},
									"scope": 2404,
									"src": "5496:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "5710:59:11",
										"statements": [
											{
												"expression": {
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2346,
														"name": "stabilizer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "5720:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2347,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "5733:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5720:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2349,
												"nodeType": "ExpressionStatement",
												"src": "5720:21:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5758:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2345,
												"id": 2351,
												"nodeType": "Return",
												"src": "5751:11:11"
											}
										]
									},
									"functionSelector": "db7f521a",
									"id": 2353,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2342,
											"modifierName": {
												"id": 2341,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5685:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5685:9:11"
										}
									],
									"name": "setStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "5658:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5658:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5657:18:11"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "5704:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5704:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:6:11"
									},
									"scope": 2404,
									"src": "5635:134:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "5839:48:11",
										"statements": [
											{
												"expression": {
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2362,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "5849:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2363,
														"name": "_val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2355,
														"src": "5855:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5849:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2365,
												"nodeType": "ExpressionStatement",
												"src": "5849:10:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5876:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2361,
												"id": 2367,
												"nodeType": "Return",
												"src": "5869:11:11"
											}
										]
									},
									"functionSelector": "1b0d8aab",
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2358,
											"modifierName": {
												"id": 2357,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5814:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5814:9:11"
										}
									],
									"name": "setPid",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "_val",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "5791:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5791:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5790:14:11"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "5833:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5833:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5832:6:11"
									},
									"scope": 2404,
									"src": "5775:112:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "6004:50:11",
										"statements": [
											{
												"expression": {
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2379,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "6014:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2380,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2372,
														"src": "6021:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "6014:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 2382,
												"nodeType": "ExpressionStatement",
												"src": "6014:12:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2383,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6043:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2378,
												"id": 2384,
												"nodeType": "Return",
												"src": "6036:11:11"
											}
										]
									},
									"functionSelector": "aaf5bfc3",
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2375,
											"modifierName": {
												"id": 2374,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5967:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5967:9:11"
										}
									],
									"name": "setUSDCAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "_usdc",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "5917:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 2371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2370,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "5917:17:11"
													},
													"referencedDeclaration": 248,
													"src": "5917:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5916:25:11"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "5994:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5994:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5993:6:11"
									},
									"scope": 2404,
									"src": "5893:161:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2402,
										"nodeType": "Block",
										"src": "6124:50:11",
										"statements": [
											{
												"expression": {
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2396,
														"name": "farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "6134:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2397,
														"name": "_farm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "6141:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFarm_$1804",
															"typeString": "contract IFarm"
														}
													},
													"src": "6134:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"id": 2399,
												"nodeType": "ExpressionStatement",
												"src": "6134:12:11"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6163:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2395,
												"id": 2401,
												"nodeType": "Return",
												"src": "6156:11:11"
											}
										]
									},
									"functionSelector": "d4f26c51",
									"id": 2403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2392,
											"modifierName": {
												"id": 2391,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "6099:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6099:9:11"
										}
									],
									"name": "setFarm",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "_farm",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "6077:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IFarm_$1804",
													"typeString": "contract IFarm"
												},
												"typeName": {
													"id": 2388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2387,
														"name": "IFarm",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1804,
														"src": "6077:5:11"
													},
													"referencedDeclaration": 1804,
													"src": "6077:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFarm_$1804",
														"typeString": "contract IFarm"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6076:13:11"
									},
									"returnParameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "6118:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6118:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6117:6:11"
									},
									"scope": 2404,
									"src": "6060:114:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2405,
							"src": "909:5267:11"
						}
					],
					"src": "32:6145:11"
				},
				"id": 11
			}
		}
	}
}
{
	"id": "4458b6ff381113cbc190be896834f9a1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/stabilizer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.0;\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\nimport \"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\";\n\ninterface IUSC {\n    function burn(uint256 amount) external;\n\n    function mint(address account_, uint256 amount_) external returns (bool);\n}\n\ncontract stabilizer is Initializable, OwnableUpgradeable {\n    using SafeERC20Upgradeable for IERC20Upgradeable;\n    using SafeMathUpgradeable for uint256;\n\n    //Executor\n    mapping(address => bool) public executor;\n    address public usdc_usc_lpAddress;\n    address public usdc;\n    address public usc;\n\n    bool public openBuy;\n    bool public openSell;\n\n    function getAmountOut(\n        uint256 amountIn,\n        uint256 reserveIn,\n        uint256 reserveOut\n    ) internal pure returns (uint256 amountOut) {\n        uint256 amountInWithFee = amountIn.mul(9970);\n        uint256 numerator = amountInWithFee.mul(reserveOut);\n        uint256 denominator = reserveIn.mul(10000).add(amountInWithFee);\n        amountOut = numerator / denominator;\n    }\n\n    function initialize(\n        // address _helperLogic,\n        address _usdc_usc_lpAddress,\n        address _usdc,\n        address _usc\n    ) external initializer {\n        __Ownable_init();\n        // executor[_helperLogic] = true;\n        usdc_usc_lpAddress = _usdc_usc_lpAddress;\n        usdc = _usdc;\n        usc = _usc;\n        openBuy = true;\n        openSell = true;\n    }\n\n    function setExecutor(address _address, bool _type)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        executor[_address] = _type;\n        return true;\n    }\n\n    modifier onlyExecutor() {\n        require(executor[msg.sender], \"executor: caller is not the executor\");\n        _;\n    }\n\n    function goStabilizer() external onlyExecutor returns (bool) {\n        (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(\n            usdc_usc_lpAddress\n        ).getReserves();\n        address token0 = IUniswapV2Pair(usdc_usc_lpAddress).token0();\n        // address token1 = IUniswapV2Pair(usdc_usc_lpAddress).token1();\n\n        (uint256 reserveIn, uint256 reserveOut) = token0 == address(usc)\n            ? (reserve1, reserve0)\n            : (reserve0, reserve1);\n\n        uint256 usdcForLP = IERC20Upgradeable(usdc).balanceOf(\n            usdc_usc_lpAddress\n        );\n        uint256 uscForLP = IERC20Upgradeable(usc).balanceOf(usdc_usc_lpAddress);\n        uint256 price = usdcForLP.mul(1e18).div(uscForLP);\n        if (price > 1e18 && openSell) {\n            uint256 neetSellAmt = (usdcForLP.sub(uscForLP)).div(2);\n            IUSC(address(usc)).mint(address(this), neetSellAmt);\n\n            IERC20Upgradeable(usc).safeTransfer(\n                usdc_usc_lpAddress,\n                neetSellAmt\n            );\n            uint256 amountOut = getAmountOut(\n                neetSellAmt,\n                reserveOut,\n                reserveIn\n            );\n\n            (uint256 amount0Out, uint256 amount1Out) = token0 == address(usc)\n                ? (uint256(0), amountOut)\n                : (amountOut, uint256(0));\n            IUniswapV2Pair(usdc_usc_lpAddress).swap(\n                amount0Out,\n                amount1Out,\n                address(this),\n                new bytes(0)\n            );\n        }\n\n        if (price < 1e18 && openBuy) {\n            uint256 neetBuyAmt = (uscForLP.sub(usdcForLP)).div(2);\n            uint256 thisAddressBalance = IERC20Upgradeable(usdc).balanceOf(\n                address(this)\n            );\n            uint256 amountIn;\n            if (neetBuyAmt > thisAddressBalance) {\n                amountIn = thisAddressBalance;\n            } else {\n                amountIn = neetBuyAmt;\n            }\n            if (amountIn != 0) {\n                IERC20Upgradeable(usdc).safeTransfer(\n                    usdc_usc_lpAddress,\n                    amountIn\n                );\n                uint256 amountOut = getAmountOut(\n                    amountIn,\n                    reserveIn,\n                    reserveOut\n                );\n\n                (uint256 amount0Out, uint256 amount1Out) = token0 ==\n                    address(usdc)\n                    ? (uint256(0), amountOut)\n                    : (amountOut, uint256(0));\n                IUniswapV2Pair(usdc_usc_lpAddress).swap(\n                    amount0Out,\n                    amount1Out,\n                    address(this),\n                    new bytes(0)\n                );\n            }\n        }\n        return true;\n    }\n\n    function withdrawalERC20(address _address, uint256 _amt)\n        external\n        onlyOwner\n        returns (bool)\n    {\n        IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt);\n        return true;\n    }\n\n    function setOpenBuy(bool _type) external onlyOwner returns (bool) {\n        openBuy = _type;\n        return true;\n    }\n\n    function setOpenSell(bool _type) external onlyOwner returns (bool) {\n        openSell = _type;\n        return true;\n    }\n}\n"
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal initializer {\n        __Context_init_unchained();\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal initializer {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.0;\n\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\nimport \"../../../utils/AddressUpgradeable.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20Upgradeable {\n    using AddressUpgradeable for address;\n\n    function safeTransfer(\n        IERC20Upgradeable token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20Upgradeable token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20Upgradeable token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n    uint256[50] private __gap;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"SafeERC20Upgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":667:4025  library SafeERC20Upgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x2A LOG2 0xE7 0xF BLOCKHASH ORIGIN 0xEA PUSH31 0xCE6BC3109703F1FFD6DBFE4036E1B35C6D58456AFD9EC564736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "667:3358:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;667:3358:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0x2A LOG2 0xE7 0xF BLOCKHASH ORIGIN 0xEA PUSH31 0xCE6BC3109703F1FFD6DBFE4036E1B35C6D58456AFD9EC564736F6C63430008 STOP STOP CALLER ",
							"sourceMap": "667:3358:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20Upgradeable,bytes memory)": "infinite",
								"safeApprove(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransfer(contract IERC20Upgradeable,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20Upgradeable,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 667,
									"end": 4025,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f2aa2e70f4032ea7ece6bc3109703f1ffd6dbfe4036e1b35c6d58456afd9ec564736f6c63430008000033",
									".code": [
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 4025,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":\"SafeERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":179:6969  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":179:6969  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x5E 0x5F BLOCKHASH 0xC9 0x4F 0xC0 SGT MSIZE PUSH24 0x103E57C2C3FF43FD9677A246F2877F83EE01753F390A6473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "179:6790:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:6790:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0x5E 0x5F BLOCKHASH 0xC9 0x4F 0xC0 SGT MSIZE PUSH24 0x103E57C2C3FF43FD9677A246F2877F83EE01753F390A6473 PUSH16 0x6C634300080000330000000000000000 ",
							"sourceMap": "179:6790:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 6969,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220365e5f40c94fc0135977103e57c2c3ff43fd9677a246f2877f83ee01753f390a64736f6c63430008000033",
									".code": [
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 179,
											"end": 6969,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"SafeMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":467:6779  library SafeMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":467:6779  library SafeMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SGT PUSH5 0xF0CCAFFF09 PUSH17 0xBBA1DD59BC3AFE606CCC747E9960FEAAD4 0xCA 0xF7 0xD2 SWAP5 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6312:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6312:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB SGT PUSH5 0xF0CCAFFF09 PUSH17 0xBBA1DD59BC3AFE606CCC747E9960FEAAD4 0xCA 0xF7 0xD2 SWAP5 GASLIMIT SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "467:6312:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6779,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab1364f0ccafff0970bba1dd59bc3afe606ccc747e9960feaad4caf7d294459964736f6c63430008000033",
									".code": [
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6779,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/stabilizer.sol": {
				"IUSC": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"mint(address,uint256)": "40c10f19"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stabilizer.sol\":\"IUSC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"contracts/stabilizer.sol\":{\"keccak256\":\"0x941eaa1f02f8c25f75ae2cf698eeb4f454dc9ba115dd7fad2a0c83c4f0e55640\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df12de24236f41479bf23e0a4b4b53b7bbbfc2cef411736acec10bdc3f38c14e\",\"dweb:/ipfs/QmWAevJQyoD4cPNu6QQieRsYkimbiMtGsjWxQ48D45R9vN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"stabilizer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "executor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "goStabilizer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdc_usc_lpAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdc",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usc",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openBuy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openSell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_type",
									"type": "bool"
								}
							],
							"name": "setExecutor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_type",
									"type": "bool"
								}
							],
							"name": "setOpenBuy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_type",
									"type": "bool"
								}
							],
							"name": "setOpenSell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usc",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc_usc_lpAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amt",
									"type": "uint256"
								}
							],
							"name": "withdrawalERC20",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/stabilizer.sol\":677:5349  contract stabilizer is Initializable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/stabilizer.sol\":677:5349  contract stabilizer is Initializable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x796c7be7\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc0c53b8b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc0c53b8b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd4a67930\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf1eae64a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x796c7be7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7e6f7a09\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x930ed033\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x3c03b9a4\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x3c03b9a4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3e413bee\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x48c7e528\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x1e1bff3f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29e9a524\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3011d3d5\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/stabilizer.sol\":1821:1998  function setExecutor(address _address, bool _type)... */\n    tag_3:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/stabilizer.sol\":5101:5220  function setOpenBuy(bool _type) external onlyOwner returns (bool) {... */\n    tag_4:\n      tag_21\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":963:981  address public usc */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":5226:5347  function setOpenSell(bool _type) external onlyOwner returns (bool) {... */\n    tag_6:\n      tag_21\n      tag_37\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":938:957  address public usdc */\n    tag_7:\n      tag_32\n      tag_41\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":853:893  mapping(address => bool) public executor */\n    tag_8:\n      tag_21\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/stabilizer.sol\":2131:4874  function goStabilizer() external onlyExecutor returns (bool) {... */\n    tag_10:\n      tag_21\n      tag_51\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":899:932  address public usdc_usc_lpAddress */\n    tag_11:\n      tag_32\n      tag_54\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_32\n      tag_57\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":4880:5095  function withdrawalERC20(address _address, uint256 _amt)... */\n    tag_13:\n      tag_21\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":1437:1815  function initialize(... */\n    tag_14:\n      tag_48\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":988:1007  bool public openBuy */\n    tag_15:\n      tag_21\n      tag_69\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":1013:1033  bool public openSell */\n    tag_16:\n      tag_21\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_48\n      tag_75\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":1821:1998  function setExecutor(address _address, bool _type)... */\n    tag_24:\n        /* \"contracts/stabilizer.sol\":1924:1928  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_57\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":1944:1962  executor[_address] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stabilizer.sol\":1944:1952  executor */\n      0x65\n        /* \"contracts/stabilizer.sol\":1944:1962  executor[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/stabilizer.sol\":1944:1970  executor[_address] = _type */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/stabilizer.sol\":1821:1998  function setExecutor(address _address, bool _type)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":5101:5220  function setOpenBuy(bool _type) external onlyOwner returns (bool) {... */\n    tag_30:\n        /* \"contracts/stabilizer.sol\":5161:5165  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_57\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_88:\n      pop\n        /* \"contracts/stabilizer.sol\":5177:5184  openBuy */\n      0x68\n        /* \"contracts/stabilizer.sol\":5177:5192  openBuy = _type */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1584:1585  _ */\n    tag_90:\n        /* \"contracts/stabilizer.sol\":5101:5220  function setOpenBuy(bool _type) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":963:981  address public usc */\n    tag_33:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x68))\n      dup2\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":5226:5347  function setOpenSell(bool _type) external onlyOwner returns (bool) {... */\n    tag_38:\n        /* \"contracts/stabilizer.sol\":5287:5291  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_93\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_57\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_94:\n      pop\n        /* \"contracts/stabilizer.sol\":5303:5311  openSell */\n      0x68\n        /* \"contracts/stabilizer.sol\":5303:5319  openSell = _type */\n      dup1\n      sload\n      dup3\n      iszero\n      iszero\n      shl(0xa8, 0x01)\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"contracts/stabilizer.sol\":5226:5347  function setOpenSell(bool _type) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":938:957  address public usdc */\n    tag_41:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x67))\n      dup2\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":853:893  mapping(address => bool) public executor */\n    tag_46:\n      mstore(0x20, 0x65)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_99\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_57\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2028  _transferOwnership(address(0)) */\n      tag_103\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2025:2026  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2016  _transferOwnership */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1998:2028  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1934:2035  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":2131:4874  function goStabilizer() external onlyExecutor returns (bool) {... */\n    tag_51:\n        /* \"contracts/stabilizer.sol\":2055:2065  msg.sender */\n      caller\n        /* \"contracts/stabilizer.sol\":2186:2190  bool */\n      0x00\n        /* \"contracts/stabilizer.sol\":2046:2066  executor[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/stabilizer.sol\":2046:2054  executor */\n      0x65\n        /* \"contracts/stabilizer.sol\":2046:2066  executor[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/stabilizer.sol\":2038:2107  require(executor[msg.sender], \"executor: caller is not the executor\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_108\n      jump\t// in\n    tag_106:\n        /* \"contracts/stabilizer.sol\":2203:2219  uint256 reserve0 */\n      0x00\n        /* \"contracts/stabilizer.sol\":2221:2237  uint256 reserve1 */\n      dup1\n        /* \"contracts/stabilizer.sol\":2271:2289  usdc_usc_lpAddress */\n      0x66\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":2243:2311  IUniswapV2Pair(... */\n      and\n      0x0902f1ac\n        /* \"contracts/stabilizer.sol\":2243:2313  IUniswapV2Pair(... */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"contracts/stabilizer.sol\":2202:2313  (uint256 reserve0, uint256 reserve1, ) = IUniswapV2Pair(... */\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      pop\n      sub(shl(0x70, 0x01), 0x01)\n      and\n      swap2\n      pop\n        /* \"contracts/stabilizer.sol\":2323:2337  address token0 */\n      0x00\n        /* \"contracts/stabilizer.sol\":2355:2373  usdc_usc_lpAddress */\n      0x66\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":2340:2381  IUniswapV2Pair(usdc_usc_lpAddress).token0 */\n      and\n      0x0dfe1681\n        /* \"contracts/stabilizer.sol\":2340:2383  IUniswapV2Pair(usdc_usc_lpAddress).token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"contracts/stabilizer.sol\":2527:2530  usc */\n      sload(0x68)\n        /* \"contracts/stabilizer.sol\":2323:2383  address token0 = IUniswapV2Pair(usdc_usc_lpAddress).token0() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/stabilizer.sol\":2468:2485  uint256 reserveIn */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":2509:2531  token0 == address(usc) */\n      dup1\n      dup6\n      and\n        /* \"contracts/stabilizer.sol\":2527:2530  usc */\n      swap2\n      and\n        /* \"contracts/stabilizer.sol\":2509:2531  token0 == address(usc) */\n      eq\n        /* \"contracts/stabilizer.sol\":2509:2601  token0 == address(usc)... */\n      tag_120\n      jumpi\n        /* \"contracts/stabilizer.sol\":2582:2590  reserve0 */\n      dup5\n        /* \"contracts/stabilizer.sol\":2592:2600  reserve1 */\n      dup5\n        /* \"contracts/stabilizer.sol\":2509:2601  token0 == address(usc)... */\n      jump(tag_121)\n    tag_120:\n        /* \"contracts/stabilizer.sol\":2547:2555  reserve1 */\n      dup4\n        /* \"contracts/stabilizer.sol\":2557:2565  reserve0 */\n      dup6\n        /* \"contracts/stabilizer.sol\":2509:2601  token0 == address(usc)... */\n    tag_121:\n        /* \"contracts/stabilizer.sol\":2650:2654  usdc */\n      sload(0x67)\n        /* \"contracts/stabilizer.sol\":2679:2697  usdc_usc_lpAddress */\n      sload(0x66)\n        /* \"contracts/stabilizer.sol\":2632:2707  IERC20Upgradeable(usdc).balanceOf(... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/stabilizer.sol\":2467:2601  (uint256 reserveIn, uint256 reserveOut) = token0 == address(usc)... */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n        /* \"contracts/stabilizer.sol\":2612:2629  uint256 usdcForLP */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":2650:2654  usdc */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"contracts/stabilizer.sol\":2632:2665  IERC20Upgradeable(usdc).balanceOf */\n      0x70a08231\n      swap3\n        /* \"contracts/stabilizer.sol\":2632:2707  IERC20Upgradeable(usdc).balanceOf(... */\n      tag_122\n      swap3\n        /* \"contracts/stabilizer.sol\":2679:2697  usdc_usc_lpAddress */\n      swap2\n      and\n      swap1\n        /* \"contracts/stabilizer.sol\":2632:2707  IERC20Upgradeable(usdc).balanceOf(... */\n      0x04\n      add\n      tag_35\n      jump\t// in\n    tag_122:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/stabilizer.sol\":2754:2757  usc */\n      sload(0x68)\n        /* \"contracts/stabilizer.sol\":2769:2787  usdc_usc_lpAddress */\n      sload(0x66)\n        /* \"contracts/stabilizer.sol\":2736:2788  IERC20Upgradeable(usc).balanceOf(usdc_usc_lpAddress) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/stabilizer.sol\":2612:2707  uint256 usdcForLP = IERC20Upgradeable(usdc).balanceOf(... */\n      swap3\n      swap4\n      pop\n        /* \"contracts/stabilizer.sol\":2717:2733  uint256 uscForLP */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":2754:2757  usc */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"contracts/stabilizer.sol\":2736:2768  IERC20Upgradeable(usc).balanceOf */\n      0x70a08231\n      swap3\n        /* \"contracts/stabilizer.sol\":2736:2788  IERC20Upgradeable(usc).balanceOf(usdc_usc_lpAddress) */\n      tag_128\n      swap3\n        /* \"contracts/stabilizer.sol\":2769:2787  usdc_usc_lpAddress */\n      swap2\n      and\n      swap1\n        /* \"contracts/stabilizer.sol\":2736:2788  IERC20Upgradeable(usc).balanceOf(usdc_usc_lpAddress) */\n      0x04\n      add\n      tag_35\n      jump\t// in\n    tag_128:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_132:\n        /* \"contracts/stabilizer.sol\":2717:2788  uint256 uscForLP = IERC20Upgradeable(usc).balanceOf(usdc_usc_lpAddress) */\n      swap1\n      pop\n        /* \"contracts/stabilizer.sol\":2798:2811  uint256 price */\n      0x00\n        /* \"contracts/stabilizer.sol\":2814:2847  usdcForLP.mul(1e18).div(uscForLP) */\n      tag_133\n        /* \"contracts/stabilizer.sol\":2717:2788  uint256 uscForLP = IERC20Upgradeable(usc).balanceOf(usdc_usc_lpAddress) */\n      dup3\n        /* \"contracts/stabilizer.sol\":2814:2833  usdcForLP.mul(1e18) */\n      tag_134\n        /* \"contracts/stabilizer.sol\":2814:2823  usdcForLP */\n      dup6\n        /* \"contracts/stabilizer.sol\":2828:2832  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/stabilizer.sol\":2814:2827  usdcForLP.mul */\n      tag_135\n        /* \"contracts/stabilizer.sol\":2814:2833  usdcForLP.mul(1e18) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/stabilizer.sol\":2814:2837  usdcForLP.mul(1e18).div */\n      swap1\n      tag_136\n        /* \"contracts/stabilizer.sol\":2814:2847  usdcForLP.mul(1e18).div(uscForLP) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/stabilizer.sol\":2798:2847  uint256 price = usdcForLP.mul(1e18).div(uscForLP) */\n      swap1\n      pop\n        /* \"contracts/stabilizer.sol\":2869:2873  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/stabilizer.sol\":2861:2866  price */\n      dup2\n        /* \"contracts/stabilizer.sol\":2861:2873  price > 1e18 */\n      gt\n        /* \"contracts/stabilizer.sol\":2861:2885  price > 1e18 && openSell */\n      dup1\n      iszero\n      tag_137\n      jumpi\n      pop\n        /* \"contracts/stabilizer.sol\":2877:2885  openSell */\n      sload(0x68)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stabilizer.sol\":2861:2885  price > 1e18 && openSell */\n    tag_137:\n        /* \"contracts/stabilizer.sol\":2857:3652  if (price > 1e18 && openSell) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"contracts/stabilizer.sol\":2901:2920  uint256 neetSellAmt */\n      0x00\n        /* \"contracts/stabilizer.sol\":2923:2955  (usdcForLP.sub(uscForLP)).div(2) */\n      tag_139\n        /* \"contracts/stabilizer.sol\":2953:2954  2 */\n      0x02\n        /* \"contracts/stabilizer.sol\":2924:2947  usdcForLP.sub(uscForLP) */\n      tag_134\n        /* \"contracts/stabilizer.sol\":2924:2933  usdcForLP */\n      dup7\n        /* \"contracts/stabilizer.sol\":2938:2946  uscForLP */\n      dup7\n        /* \"contracts/stabilizer.sol\":2924:2937  usdcForLP.sub */\n      tag_141\n        /* \"contracts/stabilizer.sol\":2924:2947  usdcForLP.sub(uscForLP) */\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":2923:2955  (usdcForLP.sub(uscForLP)).div(2) */\n    tag_139:\n        /* \"contracts/stabilizer.sol\":2982:2985  usc */\n      sload(0x68)\n        /* \"contracts/stabilizer.sol\":2969:3020  IUSC(address(usc)).mint(address(this), neetSellAmt) */\n      mload(0x40)\n      shl(0xe0, 0x40c10f19)\n      dup2\n      mstore\n        /* \"contracts/stabilizer.sol\":2901:2955  uint256 neetSellAmt = (usdcForLP.sub(uscForLP)).div(2) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":2982:2985  usc */\n      and\n      swap1\n        /* \"contracts/stabilizer.sol\":2969:2992  IUSC(address(usc)).mint */\n      0x40c10f19\n      swap1\n        /* \"contracts/stabilizer.sol\":2969:3020  IUSC(address(usc)).mint(address(this), neetSellAmt) */\n      tag_142\n      swap1\n        /* \"contracts/stabilizer.sol\":3001:3005  this */\n      address\n      swap1\n        /* \"contracts/stabilizer.sol\":2901:2955  uint256 neetSellAmt = (usdcForLP.sub(uscForLP)).div(2) */\n      dup6\n      swap1\n        /* \"contracts/stabilizer.sol\":2969:3020  IUSC(address(usc)).mint(address(this), neetSellAmt) */\n      0x04\n      add\n      tag_143\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      pop\n        /* \"contracts/stabilizer.sol\":3088:3106  usdc_usc_lpAddress */\n      sload(0x66)\n        /* \"contracts/stabilizer.sol\":3053:3056  usc */\n      sload(0x68)\n        /* \"contracts/stabilizer.sol\":3035:3149  IERC20Upgradeable(usc).safeTransfer(... */\n      tag_149\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":3053:3056  usc */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/stabilizer.sol\":3088:3106  usdc_usc_lpAddress */\n      and\n        /* \"contracts/stabilizer.sol\":3124:3135  neetSellAmt */\n      dup4\n        /* \"contracts/stabilizer.sol\":3035:3070  IERC20Upgradeable(usc).safeTransfer */\n      tag_150\n        /* \"contracts/stabilizer.sol\":3035:3149  IERC20Upgradeable(usc).safeTransfer(... */\n      jump\t// in\n    tag_149:\n        /* \"contracts/stabilizer.sol\":3163:3180  uint256 amountOut */\n      0x00\n        /* \"contracts/stabilizer.sol\":3183:3293  getAmountOut(... */\n      tag_151\n        /* \"contracts/stabilizer.sol\":3213:3224  neetSellAmt */\n      dup3\n        /* \"contracts/stabilizer.sol\":3242:3252  reserveOut */\n      dup8\n        /* \"contracts/stabilizer.sol\":3270:3279  reserveIn */\n      dup10\n        /* \"contracts/stabilizer.sol\":3183:3195  getAmountOut */\n      tag_152\n        /* \"contracts/stabilizer.sol\":3183:3293  getAmountOut(... */\n      jump\t// in\n    tag_151:\n        /* \"contracts/stabilizer.sol\":3369:3372  usc */\n      sload(0x68)\n        /* \"contracts/stabilizer.sol\":3163:3293  uint256 amountOut = getAmountOut(... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/stabilizer.sol\":3309:3327  uint256 amount0Out */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":3351:3373  token0 == address(usc) */\n      dup12\n      dup2\n      and\n        /* \"contracts/stabilizer.sol\":3369:3372  usc */\n      swap2\n      and\n        /* \"contracts/stabilizer.sol\":3351:3373  token0 == address(usc) */\n      eq\n        /* \"contracts/stabilizer.sol\":3351:3457  token0 == address(usc)... */\n      tag_153\n      jumpi\n        /* \"contracts/stabilizer.sol\":3435:3444  amountOut */\n      dup3\n        /* \"contracts/stabilizer.sol\":3454:3455  0 */\n      0x00\n        /* \"contracts/stabilizer.sol\":3351:3457  token0 == address(usc)... */\n      jump(tag_154)\n    tag_153:\n        /* \"contracts/stabilizer.sol\":3401:3402  0 */\n      0x00\n        /* \"contracts/stabilizer.sol\":3405:3414  amountOut */\n      dup4\n        /* \"contracts/stabilizer.sol\":3351:3457  token0 == address(usc)... */\n    tag_154:\n        /* \"contracts/stabilizer.sol\":3486:3504  usdc_usc_lpAddress */\n      sload(0x66)\n        /* \"contracts/stabilizer.sol\":3615:3627  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/stabilizer.sol\":3486:3504  usdc_usc_lpAddress */\n      0x00\n        /* \"contracts/stabilizer.sol\":3615:3627  new bytes(0) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      dup3\n      swap1\n      mstore\n      shl(0xe0, 0x022c0d9f)\n        /* \"contracts/stabilizer.sol\":3471:3641  IUniswapV2Pair(usdc_usc_lpAddress).swap(... */\n      swap1\n      swap2\n      mstore\n        /* \"contracts/stabilizer.sol\":3308:3457  (uint256 amount0Out, uint256 amount1Out) = token0 == address(usc)... */\n      swap3\n      swap5\n      pop\n      swap1\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":3486:3504  usdc_usc_lpAddress */\n      and\n      swap1\n        /* \"contracts/stabilizer.sol\":3471:3510  IUniswapV2Pair(usdc_usc_lpAddress).swap */\n      0x022c0d9f\n      swap1\n        /* \"contracts/stabilizer.sol\":3471:3641  IUniswapV2Pair(usdc_usc_lpAddress).swap(... */\n      tag_157\n      swap1\n        /* \"contracts/stabilizer.sol\":3308:3457  (uint256 amount0Out, uint256 amount1Out) = token0 == address(usc)... */\n      dup6\n      swap1\n      dup6\n      swap1\n        /* \"contracts/stabilizer.sol\":3592:3596  this */\n      address\n      swap1\n        /* \"contracts/stabilizer.sol\":3471:3641  IUniswapV2Pair(usdc_usc_lpAddress).swap(... */\n      0x24\n      dup2\n      add\n      tag_158\n      jump\t// in\n    tag_157:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/stabilizer.sol\":2857:3652  if (price > 1e18 && openSell) {... */\n      pop\n      pop\n      pop\n      pop\n    tag_138:\n        /* \"contracts/stabilizer.sol\":3674:3678  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/stabilizer.sol\":3666:3671  price */\n      dup2\n        /* \"contracts/stabilizer.sol\":3666:3678  price < 1e18 */\n      lt\n        /* \"contracts/stabilizer.sol\":3666:3689  price < 1e18 && openBuy */\n      dup1\n      iszero\n      tag_162\n      jumpi\n      pop\n        /* \"contracts/stabilizer.sol\":3682:3689  openBuy */\n      sload(0x68)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/stabilizer.sol\":3666:3689  price < 1e18 && openBuy */\n    tag_162:\n        /* \"contracts/stabilizer.sol\":3662:4847  if (price < 1e18 && openBuy) {... */\n      iszero\n      tag_163\n      jumpi\n        /* \"contracts/stabilizer.sol\":3705:3723  uint256 neetBuyAmt */\n      0x00\n        /* \"contracts/stabilizer.sol\":3726:3758  (uscForLP.sub(usdcForLP)).div(2) */\n      tag_164\n        /* \"contracts/stabilizer.sol\":3756:3757  2 */\n      0x02\n        /* \"contracts/stabilizer.sol\":3727:3750  uscForLP.sub(usdcForLP) */\n      tag_134\n        /* \"contracts/stabilizer.sol\":3727:3735  uscForLP */\n      dup6\n        /* \"contracts/stabilizer.sol\":3740:3749  usdcForLP */\n      dup8\n        /* \"contracts/stabilizer.sol\":3727:3739  uscForLP.sub */\n      tag_141\n        /* \"contracts/stabilizer.sol\":3727:3750  uscForLP.sub(usdcForLP) */\n      jump\t// in\n        /* \"contracts/stabilizer.sol\":3726:3758  (uscForLP.sub(usdcForLP)).div(2) */\n    tag_164:\n        /* \"contracts/stabilizer.sol\":3819:3823  usdc */\n      sload(0x67)\n        /* \"contracts/stabilizer.sol\":3801:3879  IERC20Upgradeable(usdc).balanceOf(... */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/stabilizer.sol\":3705:3758  uint256 neetBuyAmt = (uscForLP.sub(usdcForLP)).div(2) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/stabilizer.sol\":3772:3798  uint256 thisAddressBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":3819:3823  usdc */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/stabilizer.sol\":3801:3834  IERC20Upgradeable(usdc).balanceOf */\n      0x70a08231\n      swap1\n        /* \"contracts/stabilizer.sol\":3801:3879  IERC20Upgradeable(usdc).balanceOf(... */\n      tag_166\n      swap1\n        /* \"contracts/stabilizer.sol\":3860:3864  this */\n      address\n      swap1\n        /* \"contracts/stabilizer.sol\":3801:3879  IERC20Upgradeable(usdc).balanceOf(... */\n      0x04\n      add\n      tag_35\n      jump\t// in\n    tag_166:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_170:\n        /* \"contracts/stabilizer.sol\":3772:3879  uint256 thisAddressBalance = IERC20Upgradeable(usdc).balanceOf(... */\n      swap1\n      pop\n        /* \"contracts/stabilizer.sol\":3893:3909  uint256 amountIn */\n      0x00\n        /* \"contracts/stabilizer.sol\":3940:3958  thisAddressBalance */\n      dup2\n        /* \"contracts/stabilizer.sol\":3927:3937  neetBuyAmt */\n      dup4\n        /* \"contracts/stabilizer.sol\":3927:3958  neetBuyAmt > thisAddressBalance */\n      gt\n        /* \"contracts/stabilizer.sol\":3923:4082  if (neetBuyAmt > thisAddressBalance) {... */\n      iszero\n      tag_171\n      jumpi\n      pop\n        /* \"contracts/stabilizer.sol\":3989:4007  thisAddressBalance */\n      dup1\n        /* \"contracts/stabilizer.sol\":3923:4082  if (neetBuyAmt > thisAddressBalance) {... */\n      jump(tag_172)\n    tag_171:\n      pop\n        /* \"contracts/stabilizer.sol\":4057:4067  neetBuyAmt */\n      dup2\n        /* \"contracts/stabilizer.sol\":3923:4082  if (neetBuyAmt > thisAddressBalance) {... */\n    tag_172:\n        /* \"contracts/stabilizer.sol\":4099:4112  amountIn != 0 */\n      dup1\n      iszero\n        /* \"contracts/stabilizer.sol\":4095:4837  if (amountIn != 0) {... */\n      tag_173\n      jumpi\n        /* \"contracts/stabilizer.sol\":4190:4208  usdc_usc_lpAddress */\n      sload(0x66)\n        /* \"contracts/stabilizer.sol\":4150:4154  usdc */\n      sload(0x67)\n        /* \"contracts/stabilizer.sol\":4132:4256  IERC20Upgradeable(usdc).safeTransfer(... */\n      tag_174\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":4150:4154  usdc */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"contracts/stabilizer.sol\":4190:4208  usdc_usc_lpAddress */\n      and\n        /* \"contracts/stabilizer.sol\":4230:4238  amountIn */\n      dup4\n        /* \"contracts/stabilizer.sol\":4132:4168  IERC20Upgradeable(usdc).safeTransfer */\n      tag_150\n        /* \"contracts/stabilizer.sol\":4132:4256  IERC20Upgradeable(usdc).safeTransfer(... */\n      jump\t// in\n    tag_174:\n        /* \"contracts/stabilizer.sol\":4274:4291  uint256 amountOut */\n      0x00\n        /* \"contracts/stabilizer.sol\":4294:4417  getAmountOut(... */\n      tag_175\n        /* \"contracts/stabilizer.sol\":4328:4336  amountIn */\n      dup3\n        /* \"contracts/stabilizer.sol\":4358:4367  reserveIn */\n      dup11\n        /* \"contracts/stabilizer.sol\":4389:4399  reserveOut */\n      dup11\n        /* \"contracts/stabilizer.sol\":4294:4306  getAmountOut */\n      tag_152\n        /* \"contracts/stabilizer.sol\":4294:4417  getAmountOut(... */\n      jump\t// in\n    tag_175:\n        /* \"contracts/stabilizer.sol\":4517:4521  usdc */\n      sload(0x67)\n        /* \"contracts/stabilizer.sol\":4274:4417  uint256 amountOut = getAmountOut(... */\n      swap1\n      swap2\n      pop\n        /* \"contracts/stabilizer.sol\":4437:4455  uint256 amount0Out */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":4479:4522  token0 ==... */\n      dup14\n      dup2\n      and\n        /* \"contracts/stabilizer.sol\":4517:4521  usdc */\n      swap2\n      and\n        /* \"contracts/stabilizer.sol\":4479:4522  token0 ==... */\n      eq\n        /* \"contracts/stabilizer.sol\":4479:4614  token0 ==... */\n      tag_176\n      jumpi\n        /* \"contracts/stabilizer.sol\":4592:4601  amountOut */\n      dup3\n        /* \"contracts/stabilizer.sol\":4611:4612  0 */\n      0x00\n        /* \"contracts/stabilizer.sol\":4479:4614  token0 ==... */\n      jump(tag_177)\n    tag_176:\n        /* \"contracts/stabilizer.sol\":4554:4555  0 */\n      0x00\n        /* \"contracts/stabilizer.sol\":4558:4567  amountOut */\n      dup4\n        /* \"contracts/stabilizer.sol\":4479:4614  token0 ==... */\n    tag_177:\n        /* \"contracts/stabilizer.sol\":4647:4665  usdc_usc_lpAddress */\n      sload(0x66)\n        /* \"contracts/stabilizer.sol\":4792:4804  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/stabilizer.sol\":4647:4665  usdc_usc_lpAddress */\n      0x00\n        /* \"contracts/stabilizer.sol\":4792:4804  new bytes(0) */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      dup3\n      swap1\n      mstore\n      shl(0xe0, 0x022c0d9f)\n        /* \"contracts/stabilizer.sol\":4632:4822  IUniswapV2Pair(usdc_usc_lpAddress).swap(... */\n      swap1\n      swap2\n      mstore\n        /* \"contracts/stabilizer.sol\":4436:4614  (uint256 amount0Out, uint256 amount1Out) = token0 ==... */\n      swap3\n      swap5\n      pop\n      swap1\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":4647:4665  usdc_usc_lpAddress */\n      and\n      swap1\n        /* \"contracts/stabilizer.sol\":4632:4671  IUniswapV2Pair(usdc_usc_lpAddress).swap */\n      0x022c0d9f\n      swap1\n        /* \"contracts/stabilizer.sol\":4632:4822  IUniswapV2Pair(usdc_usc_lpAddress).swap(... */\n      tag_180\n      swap1\n        /* \"contracts/stabilizer.sol\":4436:4614  (uint256 amount0Out, uint256 amount1Out) = token0 ==... */\n      dup6\n      swap1\n      dup6\n      swap1\n        /* \"contracts/stabilizer.sol\":4765:4769  this */\n      address\n      swap1\n        /* \"contracts/stabilizer.sol\":4632:4822  IUniswapV2Pair(usdc_usc_lpAddress).swap(... */\n      0x24\n      dup2\n      add\n      tag_158\n      jump\t// in\n    tag_180:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/stabilizer.sol\":4095:4837  if (amountIn != 0) {... */\n      pop\n      pop\n      pop\n    tag_173:\n        /* \"contracts/stabilizer.sol\":3662:4847  if (price < 1e18 && openBuy) {... */\n      pop\n      pop\n      pop\n    tag_163:\n        /* \"contracts/stabilizer.sol\":4863:4867  true */\n      0x01\n        /* \"contracts/stabilizer.sol\":4856:4867  return true */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/stabilizer.sol\":2131:4874  function goStabilizer() external onlyExecutor returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":899:932  address public usdc_usc_lpAddress */\n    tag_54:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x66))\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1374:1380  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1302:1387  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":4880:5095  function withdrawalERC20(address _address, uint256 _amt)... */\n    tag_62:\n        /* \"contracts/stabilizer.sol\":4989:4993  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_57\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_188:\n        /* \"contracts/stabilizer.sol\":5009:5067  IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt) */\n      tag_191\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/stabilizer.sol\":5009:5049  IERC20Upgradeable(_address).safeTransfer */\n      dup5\n      and\n        /* \"contracts/stabilizer.sol\":5050:5060  msg.sender */\n      caller\n        /* \"contracts/stabilizer.sol\":5062:5066  _amt */\n      dup5\n        /* \"contracts/stabilizer.sol\":5009:5049  IERC20Upgradeable(_address).safeTransfer */\n      tag_150\n        /* \"contracts/stabilizer.sol\":5009:5067  IERC20Upgradeable(_address).safeTransfer(msg.sender, _amt) */\n      jump\t// in\n    tag_191:\n      pop\n        /* \"contracts/stabilizer.sol\":5084:5088  true */\n      0x01\n        /* \"contracts/stabilizer.sol\":4880:5095  function withdrawalERC20(address _address, uint256 _amt)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":1437:1815  function initialize(... */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_193\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_196\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_197:\n        /* \"contracts/stabilizer.sol\":1609:1625  __Ownable_init() */\n      tag_199\n        /* \"contracts/stabilizer.sol\":1609:1623  __Ownable_init */\n      tag_200\n        /* \"contracts/stabilizer.sol\":1609:1625  __Ownable_init() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/stabilizer.sol\":1677:1695  usdc_usc_lpAddress */\n      0x66\n        /* \"contracts/stabilizer.sol\":1677:1717  usdc_usc_lpAddress = _usdc_usc_lpAddress */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/stabilizer.sol\":1727:1731  usdc */\n      0x67\n        /* \"contracts/stabilizer.sol\":1727:1739  usdc = _usdc */\n      dup1\n      sload\n      dup7\n      dup5\n      and\n      swap1\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/stabilizer.sol\":1749:1752  usc */\n      0x68\n        /* \"contracts/stabilizer.sol\":1749:1759  usc = _usc */\n      dup1\n      sload\n      not(shl(0xa8, 0xff))\n      not(shl(0xa0, 0xff))\n      swap5\n      dup8\n      and\n      swap2\n      swap1\n      swap4\n      and\n      or\n        /* \"contracts/stabilizer.sol\":1769:1783  openBuy = true */\n      swap3\n      swap1\n      swap3\n      and\n      shl(0xa0, 0x01)\n      or\n        /* \"contracts/stabilizer.sol\":1793:1808  openSell = true */\n      and\n      shl(0xa8, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n    tag_201:\n        /* \"contracts/stabilizer.sol\":1437:1815  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":988:1007  bool public openBuy */\n    tag_69:\n      sload(0x68)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":1013:1033  bool public openSell */\n    tag_72:\n      sload(0x68)\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1535  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1525:1537  _msgSender() */\n      jump\t// in\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1519  owner */\n      tag_57\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1521  owner() */\n      jump\t// in\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1514:1537  owner() == _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1574  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2272:2294  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2264:2337  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_210\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2375  _transferOwnership(newOwner) */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2366:2374  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2365  _transferOwnership */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2347:2375  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2184:2382  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":876:972  function _msgSender() internal view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":955:965  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":876:972  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2536:2723  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2644:2661  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2644:2661  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2628:2634  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2609:2625  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2676:2716  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2536:2723  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3462:3558  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3520:3527  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3551  a * b */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3550:3551  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3547  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3546:3551  a * b */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3539:3551  return a * b */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3462:3558  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3847:3943  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3905:3912  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3936  a / b */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3935:3936  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3932  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3931:3936  a / b */\n      tag_219\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3119:3215  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3177:3184  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3208  a - b */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3207:3208  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3204  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3203:3208  a - b */\n      tag_222\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":888:893  token */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":918:941  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":943:945  to */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":947:952  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":895:953  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_225\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_225:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:887  _callOptionalReturn */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":868:954  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":745:961  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/stabilizer.sol\":1040:1431  function getAmountOut(... */\n    tag_152:\n        /* \"contracts/stabilizer.sol\":1172:1189  uint256 amountOut */\n      0x00\n      dup1\n        /* \"contracts/stabilizer.sol\":1227:1245  amountIn.mul(9970) */\n      tag_228\n        /* \"contracts/stabilizer.sol\":1227:1235  amountIn */\n      dup6\n        /* \"contracts/stabilizer.sol\":1240:1244  9970 */\n      0x26f2\n        /* \"contracts/stabilizer.sol\":1227:1239  amountIn.mul */\n      tag_135\n        /* \"contracts/stabilizer.sol\":1227:1245  amountIn.mul(9970) */\n      jump\t// in\n    tag_228:\n        /* \"contracts/stabilizer.sol\":1201:1245  uint256 amountInWithFee = amountIn.mul(9970) */\n      swap1\n      pop\n        /* \"contracts/stabilizer.sol\":1255:1272  uint256 numerator */\n      0x00\n        /* \"contracts/stabilizer.sol\":1275:1306  amountInWithFee.mul(reserveOut) */\n      tag_229\n        /* \"contracts/stabilizer.sol\":1201:1245  uint256 amountInWithFee = amountIn.mul(9970) */\n      dup3\n        /* \"contracts/stabilizer.sol\":1295:1305  reserveOut */\n      dup6\n        /* \"contracts/stabilizer.sol\":1275:1294  amountInWithFee.mul */\n      tag_135\n        /* \"contracts/stabilizer.sol\":1275:1306  amountInWithFee.mul(reserveOut) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/stabilizer.sol\":1255:1306  uint256 numerator = amountInWithFee.mul(reserveOut) */\n      swap1\n      pop\n        /* \"contracts/stabilizer.sol\":1316:1335  uint256 denominator */\n      0x00\n        /* \"contracts/stabilizer.sol\":1338:1379  reserveIn.mul(10000).add(amountInWithFee) */\n      tag_230\n        /* \"contracts/stabilizer.sol\":1363:1378  amountInWithFee */\n      dup4\n        /* \"contracts/stabilizer.sol\":1338:1358  reserveIn.mul(10000) */\n      tag_231\n        /* \"contracts/stabilizer.sol\":1338:1347  reserveIn */\n      dup9\n        /* \"contracts/stabilizer.sol\":1352:1357  10000 */\n      0x2710\n        /* \"contracts/stabilizer.sol\":1338:1351  reserveIn.mul */\n      tag_135\n        /* \"contracts/stabilizer.sol\":1338:1358  reserveIn.mul(10000) */\n      jump\t// in\n    tag_231:\n        /* \"contracts/stabilizer.sol\":1338:1362  reserveIn.mul(10000).add */\n      swap1\n      tag_232\n        /* \"contracts/stabilizer.sol\":1338:1379  reserveIn.mul(10000).add(amountInWithFee) */\n      jump\t// in\n    tag_230:\n        /* \"contracts/stabilizer.sol\":1316:1379  uint256 denominator = reserveIn.mul(10000).add(amountInWithFee) */\n      swap1\n      pop\n        /* \"contracts/stabilizer.sol\":1401:1424  numerator / denominator */\n      tag_233\n        /* \"contracts/stabilizer.sol\":1316:1379  uint256 denominator = reserveIn.mul(10000).add(amountInWithFee) */\n      dup2\n        /* \"contracts/stabilizer.sol\":1401:1410  numerator */\n      dup4\n        /* \"contracts/stabilizer.sol\":1401:1424  numerator / denominator */\n      tag_219\n      jump\t// in\n    tag_233:\n        /* \"contracts/stabilizer.sol\":1389:1424  amountOut = numerator / denominator */\n      swap8\n        /* \"contracts/stabilizer.sol\":1040:1431  function getAmountOut(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1114  function __Ownable_init() internal initializer {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_235\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_196\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1071  __Context_init_unchained() */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1069  __Context_init_unchained */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1045:1071  __Context_init_unchained() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1107  __Ownable_init_unchained() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1105  __Ownable_init_unchained */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1081:1107  __Ownable_init_unchained() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":988:1114  function __Ownable_init() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3306:4023  function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {... */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3759  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3790:3794  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3770:3775  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3789  address(token).functionCall */\n      and\n      tag_247\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3762:3831  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3862  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3736:3831  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3845:3866  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3841:4017  if (returndata.length > 0) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3940:3950  returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3929:3959  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":3921:4006  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_252\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2752:2848  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2810:2817  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2841  a + b */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2840:2841  b */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2837  a */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2836:2841  a + b */\n      tag_255\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":807:871  function __Context_init_unchained() internal initializer {... */\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_257\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_196\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":801:815  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":797:863  if (isTopLevelCall) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":847:852  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":831:852  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":807:871  function __Context_init_unchained() internal initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1120:1226  function __Ownable_init_unchained() internal initializer {... */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:552  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n      tag_264\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":557:569  _initialized */\n      and(0xff, sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":556:569  !_initialized */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":539:569  _initializing || !_initialized */\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":531:620  require(_initializing || !_initialized, \"Initializable: contract is already initialized\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_196\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":631:650  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":654:667  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":653:667  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:724  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":711:731  _initializing = true */\n      dup1\n      sload\n      not(0xff)\n      not(0xff00)\n      swap1\n      swap2\n      and\n      0x0100\n      or\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":727:731  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":745:764  _initialized = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":677:775  if (isTopLevelCall) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1219  _transferOwnership(_msgSender()) */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1218  _msgSender() */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1216  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1206:1218  _msgSender() */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1205  _transferOwnership */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1187:1219  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3525:3748  function functionCall(... */\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3658:3670  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3741  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3711:3717  target */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3719:3723  data */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3725:3726  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3728:3740  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3710  functionCallWithValue */\n      tag_274\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3689:3741  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3682:3741  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":3525:3748  function functionCall(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4612:5111  function functionCallWithValue(... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4777:4789  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4834:4839  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4809:4830  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4809:4839  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4801:4882  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_278\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4918  isContract(target) */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4911:4917  target */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4910  isContract */\n      tag_280\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4900:4918  isContract(target) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4892:4952  require(isContract(target), \"Address: call to non-contract\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_283\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4964:4976  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4978:5001  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5011  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5016  target.call */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5024:5029  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5031:5035  data */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5005:5036  target.call{value: value}(data) */\n      mload(0x40)\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_288\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_287)\n    tag_288:\n      0x60\n      swap2\n      pop\n    tag_287:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":4963:5036  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5104  verifyCallResult(success, returndata, errorMessage) */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5070:5077  success */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5079:5089  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5091:5103  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5069  verifyCallResult */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":5053:5104  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":782:1159  function isContract(address account) internal view returns (bool) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1098:1118  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1144:1152  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":782:1159  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6275:6967  function verifyCallResult(... */\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6421:6433  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6449:6456  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6445:6961  if (success) {... */\n      iszero\n      tag_293\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6479:6489  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6472:6489  return returndata */\n      jump(tag_215)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6445:6961  if (success) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6607  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6590:6611  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6586:6951  if (returndata.length > 0) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6784:6794  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6778:6795  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6844:6859  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6831:6841  returndata */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6827:6829  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6823:6842  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6816:6860  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6733:6878  {... */\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6923:6935  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6916:6936  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n        /* \"#utility.yul\":14:204   */\n    tag_300:\n        /* \"#utility.yul\":95:108   */\n      dup1\n      mload\n      sub(shl(0x70, 0x01), 0x01)\n        /* \"#utility.yul\":137:179   */\n      dup2\n      and\n        /* \"#utility.yul\":127:180   */\n      dup2\n      eq\n        /* \"#utility.yul\":117:119   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":191:192   */\n      dup1\n        /* \"#utility.yul\":184:196   */\n      revert\n        /* \"#utility.yul\":209:468   */\n    tag_45:\n      0x00\n        /* \"#utility.yul\":321:323   */\n      0x20\n        /* \"#utility.yul\":309:318   */\n      dup3\n        /* \"#utility.yul\":300:307   */\n      dup5\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:291   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":342:348   */\n      dup1\n        /* \"#utility.yul\":334:340   */\n      dup2\n        /* \"#utility.yul\":327:349   */\n      revert\n        /* \"#utility.yul\":289:291   */\n    tag_304:\n        /* \"#utility.yul\":386:395   */\n      dup2\n        /* \"#utility.yul\":373:396   */\n      calldataload\n        /* \"#utility.yul\":405:438   */\n      tag_215\n        /* \"#utility.yul\":432:437   */\n      dup2\n        /* \"#utility.yul\":405:438   */\n      tag_306\n      jump\t// in\n        /* \"#utility.yul\":473:736   */\n    tag_119:\n      0x00\n        /* \"#utility.yul\":596:598   */\n      0x20\n        /* \"#utility.yul\":584:593   */\n      dup3\n        /* \"#utility.yul\":575:582   */\n      dup5\n        /* \"#utility.yul\":571:594   */\n      sub\n        /* \"#utility.yul\":567:599   */\n      slt\n        /* \"#utility.yul\":564:566   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":617:623   */\n      dup1\n        /* \"#utility.yul\":609:615   */\n      dup2\n        /* \"#utility.yul\":602:624   */\n      revert\n        /* \"#utility.yul\":564:566   */\n    tag_308:\n        /* \"#utility.yul\":654:663   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      mload\n        /* \"#utility.yul\":673:706   */\n      tag_215\n        /* \"#utility.yul\":700:705   */\n      dup2\n        /* \"#utility.yul\":673:706   */\n      tag_306\n      jump\t// in\n        /* \"#utility.yul\":741:1286   */\n    tag_66:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":887:889   */\n      0x60\n        /* \"#utility.yul\":875:884   */\n      dup5\n        /* \"#utility.yul\":866:873   */\n      dup7\n        /* \"#utility.yul\":862:885   */\n      sub\n        /* \"#utility.yul\":858:890   */\n      slt\n        /* \"#utility.yul\":855:857   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":908:914   */\n      dup2\n        /* \"#utility.yul\":900:906   */\n      dup3\n        /* \"#utility.yul\":893:915   */\n      revert\n        /* \"#utility.yul\":855:857   */\n    tag_311:\n        /* \"#utility.yul\":952:961   */\n      dup4\n        /* \"#utility.yul\":939:962   */\n      calldataload\n        /* \"#utility.yul\":971:1004   */\n      tag_312\n        /* \"#utility.yul\":998:1003   */\n      dup2\n        /* \"#utility.yul\":971:1004   */\n      tag_306\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1023:1028   */\n      swap3\n      pop\n        /* \"#utility.yul\":1080:1082   */\n      0x20\n        /* \"#utility.yul\":1065:1083   */\n      dup5\n      add\n        /* \"#utility.yul\":1052:1084   */\n      calldataload\n        /* \"#utility.yul\":1093:1128   */\n      tag_313\n        /* \"#utility.yul\":1052:1084   */\n      dup2\n        /* \"#utility.yul\":1093:1128   */\n      tag_306\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1147:1154   */\n      swap2\n      pop\n        /* \"#utility.yul\":1206:1208   */\n      0x40\n        /* \"#utility.yul\":1191:1209   */\n      dup5\n      add\n        /* \"#utility.yul\":1178:1210   */\n      calldataload\n        /* \"#utility.yul\":1219:1254   */\n      tag_314\n        /* \"#utility.yul\":1178:1210   */\n      dup2\n        /* \"#utility.yul\":1219:1254   */\n      tag_306\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1273:1280   */\n      dup1\n        /* \"#utility.yul\":1263:1280   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":845:1286   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1291:1687   */\n    tag_23:\n      0x00\n      dup1\n        /* \"#utility.yul\":1417:1419   */\n      0x40\n        /* \"#utility.yul\":1405:1414   */\n      dup4\n        /* \"#utility.yul\":1396:1403   */\n      dup6\n        /* \"#utility.yul\":1392:1415   */\n      sub\n        /* \"#utility.yul\":1388:1420   */\n      slt\n        /* \"#utility.yul\":1385:1387   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":1438:1444   */\n      dup2\n        /* \"#utility.yul\":1430:1436   */\n      dup3\n        /* \"#utility.yul\":1423:1445   */\n      revert\n        /* \"#utility.yul\":1385:1387   */\n    tag_316:\n        /* \"#utility.yul\":1482:1491   */\n      dup3\n        /* \"#utility.yul\":1469:1492   */\n      calldataload\n        /* \"#utility.yul\":1501:1534   */\n      tag_317\n        /* \"#utility.yul\":1528:1533   */\n      dup2\n        /* \"#utility.yul\":1501:1534   */\n      tag_306\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1553:1558   */\n      swap2\n      pop\n        /* \"#utility.yul\":1610:1612   */\n      0x20\n        /* \"#utility.yul\":1595:1613   */\n      dup4\n      add\n        /* \"#utility.yul\":1582:1614   */\n      calldataload\n        /* \"#utility.yul\":1623:1655   */\n      tag_318\n        /* \"#utility.yul\":1582:1614   */\n      dup2\n        /* \"#utility.yul\":1623:1655   */\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1674:1681   */\n      dup1\n        /* \"#utility.yul\":1664:1681   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1375:1687   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1692:2019   */\n    tag_61:\n      0x00\n      dup1\n        /* \"#utility.yul\":1821:1823   */\n      0x40\n        /* \"#utility.yul\":1809:1818   */\n      dup4\n        /* \"#utility.yul\":1800:1807   */\n      dup6\n        /* \"#utility.yul\":1796:1819   */\n      sub\n        /* \"#utility.yul\":1792:1824   */\n      slt\n        /* \"#utility.yul\":1789:1791   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":1842:1848   */\n      dup2\n        /* \"#utility.yul\":1834:1840   */\n      dup3\n        /* \"#utility.yul\":1827:1849   */\n      revert\n        /* \"#utility.yul\":1789:1791   */\n    tag_321:\n        /* \"#utility.yul\":1886:1895   */\n      dup3\n        /* \"#utility.yul\":1873:1896   */\n      calldataload\n        /* \"#utility.yul\":1905:1938   */\n      tag_322\n        /* \"#utility.yul\":1932:1937   */\n      dup2\n        /* \"#utility.yul\":1905:1938   */\n      tag_306\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1957:1962   */\n      swap5\n        /* \"#utility.yul\":2009:2011   */\n      0x20\n        /* \"#utility.yul\":1994:2012   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1981:2013   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1779:2019   */\n      jump\t// out\n        /* \"#utility.yul\":2024:2277   */\n    tag_29:\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2103   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2154:2160   */\n      dup1\n        /* \"#utility.yul\":2146:2152   */\n      dup2\n        /* \"#utility.yul\":2139:2161   */\n      revert\n        /* \"#utility.yul\":2101:2103   */\n    tag_324:\n        /* \"#utility.yul\":2198:2207   */\n      dup2\n        /* \"#utility.yul\":2185:2208   */\n      calldataload\n        /* \"#utility.yul\":2217:2247   */\n      tag_215\n        /* \"#utility.yul\":2241:2246   */\n      dup2\n        /* \"#utility.yul\":2217:2247   */\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":2282:2539   */\n    tag_148:\n      0x00\n        /* \"#utility.yul\":2402:2404   */\n      0x20\n        /* \"#utility.yul\":2390:2399   */\n      dup3\n        /* \"#utility.yul\":2381:2388   */\n      dup5\n        /* \"#utility.yul\":2377:2400   */\n      sub\n        /* \"#utility.yul\":2373:2405   */\n      slt\n        /* \"#utility.yul\":2370:2372   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2423:2429   */\n      dup1\n        /* \"#utility.yul\":2415:2421   */\n      dup2\n        /* \"#utility.yul\":2408:2430   */\n      revert\n        /* \"#utility.yul\":2370:2372   */\n    tag_327:\n        /* \"#utility.yul\":2460:2469   */\n      dup2\n        /* \"#utility.yul\":2454:2470   */\n      mload\n        /* \"#utility.yul\":2479:2509   */\n      tag_215\n        /* \"#utility.yul\":2503:2508   */\n      dup2\n        /* \"#utility.yul\":2479:2509   */\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":2544:3018   */\n    tag_114:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2700:2702   */\n      0x60\n        /* \"#utility.yul\":2688:2697   */\n      dup5\n        /* \"#utility.yul\":2679:2686   */\n      dup7\n        /* \"#utility.yul\":2675:2698   */\n      sub\n        /* \"#utility.yul\":2671:2703   */\n      slt\n        /* \"#utility.yul\":2668:2670   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":2721:2727   */\n      dup3\n        /* \"#utility.yul\":2713:2719   */\n      dup4\n        /* \"#utility.yul\":2706:2728   */\n      revert\n        /* \"#utility.yul\":2668:2670   */\n    tag_330:\n        /* \"#utility.yul\":2749:2791   */\n      tag_331\n        /* \"#utility.yul\":2781:2790   */\n      dup5\n        /* \"#utility.yul\":2749:2791   */\n      tag_300\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2739:2791   */\n      swap3\n      pop\n        /* \"#utility.yul\":2810:2861   */\n      tag_332\n        /* \"#utility.yul\":2857:2859   */\n      0x20\n        /* \"#utility.yul\":2846:2855   */\n      dup6\n        /* \"#utility.yul\":2842:2860   */\n      add\n        /* \"#utility.yul\":2810:2861   */\n      tag_300\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2800:2861   */\n      swap2\n      pop\n        /* \"#utility.yul\":2904:2906   */\n      0x40\n        /* \"#utility.yul\":2893:2902   */\n      dup5\n        /* \"#utility.yul\":2889:2907   */\n      add\n        /* \"#utility.yul\":2883:2908   */\n      mload\n        /* \"#utility.yul\":2948:2958   */\n      0xffffffff\n        /* \"#utility.yul\":2941:2946   */\n      dup2\n        /* \"#utility.yul\":2937:2959   */\n      and\n        /* \"#utility.yul\":2930:2935   */\n      dup2\n        /* \"#utility.yul\":2927:2960   */\n      eq\n        /* \"#utility.yul\":2917:2919   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":2979:2985   */\n      dup2\n        /* \"#utility.yul\":2971:2977   */\n      dup3\n        /* \"#utility.yul\":2964:2986   */\n      revert\n        /* \"#utility.yul\":3023:3217   */\n    tag_127:\n      0x00\n        /* \"#utility.yul\":3146:3148   */\n      0x20\n        /* \"#utility.yul\":3134:3143   */\n      dup3\n        /* \"#utility.yul\":3125:3132   */\n      dup5\n        /* \"#utility.yul\":3121:3144   */\n      sub\n        /* \"#utility.yul\":3117:3149   */\n      slt\n        /* \"#utility.yul\":3114:3116   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":3167:3173   */\n      dup1\n        /* \"#utility.yul\":3159:3165   */\n      dup2\n        /* \"#utility.yul\":3152:3174   */\n      revert\n        /* \"#utility.yul\":3114:3116   */\n    tag_335:\n      pop\n        /* \"#utility.yul\":3195:3211   */\n      mload\n      swap2\n        /* \"#utility.yul\":3104:3217   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3481   */\n    tag_336:\n      0x00\n        /* \"#utility.yul\":3303:3308   */\n      dup2\n        /* \"#utility.yul\":3297:3309   */\n      mload\n        /* \"#utility.yul\":3330:3336   */\n      dup1\n        /* \"#utility.yul\":3325:3328   */\n      dup5\n        /* \"#utility.yul\":3318:3337   */\n      mstore\n        /* \"#utility.yul\":3346:3409   */\n      tag_338\n        /* \"#utility.yul\":3402:3408   */\n      dup2\n        /* \"#utility.yul\":3395:3399   */\n      0x20\n        /* \"#utility.yul\":3390:3393   */\n      dup7\n        /* \"#utility.yul\":3386:3400   */\n      add\n        /* \"#utility.yul\":3379:3383   */\n      0x20\n        /* \"#utility.yul\":3372:3377   */\n      dup7\n        /* \"#utility.yul\":3368:3384   */\n      add\n        /* \"#utility.yul\":3346:3409   */\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3463:3465   */\n      0x1f\n        /* \"#utility.yul\":3442:3457   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3438:3467   */\n      and\n        /* \"#utility.yul\":3429:3468   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3470:3474   */\n      0x20\n        /* \"#utility.yul\":3425:3475   */\n      add\n      swap3\n        /* \"#utility.yul\":3273:3481   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3760   */\n    tag_285:\n      0x00\n        /* \"#utility.yul\":3653:3659   */\n      dup3\n        /* \"#utility.yul\":3647:3660   */\n      mload\n        /* \"#utility.yul\":3669:3722   */\n      tag_341\n        /* \"#utility.yul\":3715:3721   */\n      dup2\n        /* \"#utility.yul\":3710:3713   */\n      dup5\n        /* \"#utility.yul\":3703:3707   */\n      0x20\n        /* \"#utility.yul\":3695:3701   */\n      dup8\n        /* \"#utility.yul\":3691:3708   */\n      add\n        /* \"#utility.yul\":3669:3722   */\n      tag_339\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3738:3754   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":3623:3760   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3765:3968   */\n    tag_35:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3929:3961   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3911:3962   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3899:3901   */\n      0x20\n        /* \"#utility.yul\":3884:3902   */\n      add\n      swap1\n        /* \"#utility.yul\":3866:3968   */\n      jump\t// out\n        /* \"#utility.yul\":3973:4247   */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4165:4197   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4147:4198   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4229:4231   */\n      0x20\n        /* \"#utility.yul\":4214:4232   */\n      dup3\n      add\n        /* \"#utility.yul\":4207:4241   */\n      mstore\n        /* \"#utility.yul\":4135:4137   */\n      0x40\n        /* \"#utility.yul\":4120:4138   */\n      add\n      swap1\n        /* \"#utility.yul\":4102:4247   */\n      jump\t// out\n        /* \"#utility.yul\":4252:4439   */\n    tag_26:\n        /* \"#utility.yul\":4417:4431   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4410:4432   */\n      iszero\n        /* \"#utility.yul\":4392:4433   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4380:4382   */\n      0x20\n        /* \"#utility.yul\":4365:4383   */\n      add\n      swap1\n        /* \"#utility.yul\":4347:4439   */\n      jump\t// out\n        /* \"#utility.yul\":4444:4665   */\n    tag_298:\n      0x00\n        /* \"#utility.yul\":4593:4595   */\n      0x20\n        /* \"#utility.yul\":4582:4591   */\n      dup3\n        /* \"#utility.yul\":4575:4596   */\n      mstore\n        /* \"#utility.yul\":4613:4659   */\n      tag_215\n        /* \"#utility.yul\":4655:4657   */\n      0x20\n        /* \"#utility.yul\":4644:4653   */\n      dup4\n        /* \"#utility.yul\":4640:4658   */\n      add\n        /* \"#utility.yul\":4632:4638   */\n      dup5\n        /* \"#utility.yul\":4613:4659   */\n      tag_336\n      jump\t// in\n        /* \"#utility.yul\":4670:5072   */\n    tag_210:\n        /* \"#utility.yul\":4872:4874   */\n      0x20\n        /* \"#utility.yul\":4854:4875   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4911:4913   */\n      0x26\n        /* \"#utility.yul\":4891:4909   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4884:4914   */\n      mstore\n        /* \"#utility.yul\":4950:4984   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4945:4947   */\n      0x40\n        /* \"#utility.yul\":4930:4948   */\n      dup3\n      add\n        /* \"#utility.yul\":4923:4985   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5016:5018   */\n      0x60\n        /* \"#utility.yul\":5001:5019   */\n      dup3\n      add\n        /* \"#utility.yul\":4994:5030   */\n      mstore\n        /* \"#utility.yul\":5062:5065   */\n      0x80\n        /* \"#utility.yul\":5047:5066   */\n      add\n      swap1\n        /* \"#utility.yul\":4844:5072   */\n      jump\t// out\n        /* \"#utility.yul\":5077:5477   */\n    tag_108:\n        /* \"#utility.yul\":5279:5281   */\n      0x20\n        /* \"#utility.yul\":5261:5282   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5318:5320   */\n      0x24\n        /* \"#utility.yul\":5298:5316   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5291:5321   */\n      mstore\n        /* \"#utility.yul\":5357:5391   */\n      0x6578656375746f723a2063616c6c6572206973206e6f74207468652065786563\n        /* \"#utility.yul\":5352:5354   */\n      0x40\n        /* \"#utility.yul\":5337:5355   */\n      dup3\n      add\n        /* \"#utility.yul\":5330:5392   */\n      mstore\n      shl(0xe1, 0x3aba37b9)\n        /* \"#utility.yul\":5423:5425   */\n      0x60\n        /* \"#utility.yul\":5408:5426   */\n      dup3\n      add\n        /* \"#utility.yul\":5401:5435   */\n      mstore\n        /* \"#utility.yul\":5467:5470   */\n      0x80\n        /* \"#utility.yul\":5452:5471   */\n      add\n      swap1\n        /* \"#utility.yul\":5251:5477   */\n      jump\t// out\n        /* \"#utility.yul\":5482:5884   */\n    tag_278:\n        /* \"#utility.yul\":5684:5686   */\n      0x20\n        /* \"#utility.yul\":5666:5687   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5723:5725   */\n      0x26\n        /* \"#utility.yul\":5703:5721   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5696:5726   */\n      mstore\n        /* \"#utility.yul\":5762:5796   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":5757:5759   */\n      0x40\n        /* \"#utility.yul\":5742:5760   */\n      dup3\n      add\n        /* \"#utility.yul\":5735:5797   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":5828:5830   */\n      0x60\n        /* \"#utility.yul\":5813:5831   */\n      dup3\n      add\n        /* \"#utility.yul\":5806:5842   */\n      mstore\n        /* \"#utility.yul\":5874:5877   */\n      0x80\n        /* \"#utility.yul\":5859:5878   */\n      add\n      swap1\n        /* \"#utility.yul\":5656:5884   */\n      jump\t// out\n        /* \"#utility.yul\":5889:6299   */\n    tag_196:\n        /* \"#utility.yul\":6091:6093   */\n      0x20\n        /* \"#utility.yul\":6073:6094   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6130:6132   */\n      0x2e\n        /* \"#utility.yul\":6110:6128   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6103:6133   */\n      mstore\n        /* \"#utility.yul\":6169:6203   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":6164:6166   */\n      0x40\n        /* \"#utility.yul\":6149:6167   */\n      dup3\n      add\n        /* \"#utility.yul\":6142:6204   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":6235:6237   */\n      0x60\n        /* \"#utility.yul\":6220:6238   */\n      dup3\n      add\n        /* \"#utility.yul\":6213:6257   */\n      mstore\n        /* \"#utility.yul\":6289:6292   */\n      0x80\n        /* \"#utility.yul\":6274:6293   */\n      add\n      swap1\n        /* \"#utility.yul\":6063:6299   */\n      jump\t// out\n        /* \"#utility.yul\":6304:6660   */\n    tag_83:\n        /* \"#utility.yul\":6506:6508   */\n      0x20\n        /* \"#utility.yul\":6488:6509   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6525:6543   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6518:6548   */\n      mstore\n        /* \"#utility.yul\":6584:6618   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6579:6581   */\n      0x40\n        /* \"#utility.yul\":6564:6582   */\n      dup3\n      add\n        /* \"#utility.yul\":6557:6619   */\n      mstore\n        /* \"#utility.yul\":6651:6653   */\n      0x60\n        /* \"#utility.yul\":6636:6654   */\n      add\n      swap1\n        /* \"#utility.yul\":6478:6660   */\n      jump\t// out\n        /* \"#utility.yul\":6665:7018   */\n    tag_283:\n        /* \"#utility.yul\":6867:6869   */\n      0x20\n        /* \"#utility.yul\":6849:6870   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6906:6908   */\n      0x1d\n        /* \"#utility.yul\":6886:6904   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6879:6909   */\n      mstore\n        /* \"#utility.yul\":6945:6976   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":6940:6942   */\n      0x40\n        /* \"#utility.yul\":6925:6943   */\n      dup3\n      add\n        /* \"#utility.yul\":6918:6977   */\n      mstore\n        /* \"#utility.yul\":7009:7011   */\n      0x60\n        /* \"#utility.yul\":6994:7012   */\n      add\n      swap1\n        /* \"#utility.yul\":6839:7018   */\n      jump\t// out\n        /* \"#utility.yul\":7023:7429   */\n    tag_252:\n        /* \"#utility.yul\":7225:7227   */\n      0x20\n        /* \"#utility.yul\":7207:7228   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7264:7266   */\n      0x2a\n        /* \"#utility.yul\":7244:7262   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7237:7267   */\n      mstore\n        /* \"#utility.yul\":7303:7337   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":7298:7300   */\n      0x40\n        /* \"#utility.yul\":7283:7301   */\n      dup3\n      add\n        /* \"#utility.yul\":7276:7338   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":7369:7371   */\n      0x60\n        /* \"#utility.yul\":7354:7372   */\n      dup3\n      add\n        /* \"#utility.yul\":7347:7387   */\n      mstore\n        /* \"#utility.yul\":7419:7422   */\n      0x80\n        /* \"#utility.yul\":7404:7423   */\n      add\n      swap1\n        /* \"#utility.yul\":7197:7429   */\n      jump\t// out\n        /* \"#utility.yul\":7434:7894   */\n    tag_158:\n      0x00\n        /* \"#utility.yul\":7665:7671   */\n      dup6\n        /* \"#utility.yul\":7654:7663   */\n      dup3\n        /* \"#utility.yul\":7647:7672   */\n      mstore\n        /* \"#utility.yul\":7708:7714   */\n      dup5\n        /* \"#utility.yul\":7703:7705   */\n      0x20\n        /* \"#utility.yul\":7692:7701   */\n      dup4\n        /* \"#utility.yul\":7688:7706   */\n      add\n        /* \"#utility.yul\":7681:7715   */\n      mstore\n        /* \"#utility.yul\":7780:7781   */\n      0x01\n        /* \"#utility.yul\":7776:7777   */\n      dup1\n        /* \"#utility.yul\":7771:7774   */\n      0xa0\n        /* \"#utility.yul\":7767:7778   */\n      shl\n        /* \"#utility.yul\":7763:7782   */\n      sub\n        /* \"#utility.yul\":7755:7761   */\n      dup5\n        /* \"#utility.yul\":7751:7783   */\n      and\n        /* \"#utility.yul\":7746:7748   */\n      0x40\n        /* \"#utility.yul\":7735:7744   */\n      dup4\n        /* \"#utility.yul\":7731:7749   */\n      add\n        /* \"#utility.yul\":7724:7784   */\n      mstore\n        /* \"#utility.yul\":7820:7823   */\n      0x80\n        /* \"#utility.yul\":7815:7817   */\n      0x60\n        /* \"#utility.yul\":7804:7813   */\n      dup4\n        /* \"#utility.yul\":7800:7818   */\n      add\n        /* \"#utility.yul\":7793:7824   */\n      mstore\n        /* \"#utility.yul\":7841:7888   */\n      tag_355\n        /* \"#utility.yul\":7883:7886   */\n      0x80\n        /* \"#utility.yul\":7872:7881   */\n      dup4\n        /* \"#utility.yul\":7868:7887   */\n      add\n        /* \"#utility.yul\":7860:7866   */\n      dup5\n        /* \"#utility.yul\":7841:7888   */\n      tag_336\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7833:7888   */\n      swap7\n        /* \"#utility.yul\":7637:7894   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7899:8027   */\n    tag_255:\n      0x00\n        /* \"#utility.yul\":7970:7971   */\n      dup3\n        /* \"#utility.yul\":7966:7972   */\n      not\n        /* \"#utility.yul\":7963:7964   */\n      dup3\n        /* \"#utility.yul\":7960:7973   */\n      gt\n        /* \"#utility.yul\":7957:7959   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":7976:7994   */\n      tag_358\n      tag_359\n      jump\t// in\n    tag_358:\n      pop\n        /* \"#utility.yul\":8012:8021   */\n      add\n      swap1\n        /* \"#utility.yul\":7947:8027   */\n      jump\t// out\n        /* \"#utility.yul\":8032:8249   */\n    tag_219:\n      0x00\n        /* \"#utility.yul\":8098:8099   */\n      dup3\n        /* \"#utility.yul\":8088:8090   */\n      tag_361\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":8123:8154   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8177:8181   */\n      0x12\n        /* \"#utility.yul\":8174:8175   */\n      0x04\n        /* \"#utility.yul\":8167:8182   */\n      mstore\n        /* \"#utility.yul\":8205:8209   */\n      0x24\n        /* \"#utility.yul\":8130:8131   */\n      dup2\n        /* \"#utility.yul\":8195:8210   */\n      revert\n        /* \"#utility.yul\":8088:8090   */\n    tag_361:\n      pop\n        /* \"#utility.yul\":8234:8243   */\n      div\n      swap1\n        /* \"#utility.yul\":8078:8249   */\n      jump\t// out\n        /* \"#utility.yul\":8254:8422   */\n    tag_216:\n      0x00\n        /* \"#utility.yul\":8360:8361   */\n      dup2\n        /* \"#utility.yul\":8356:8357   */\n      0x00\n        /* \"#utility.yul\":8352:8358   */\n      not\n        /* \"#utility.yul\":8348:8362   */\n      div\n        /* \"#utility.yul\":8345:8346   */\n      dup4\n        /* \"#utility.yul\":8342:8363   */\n      gt\n        /* \"#utility.yul\":8337:8338   */\n      dup3\n        /* \"#utility.yul\":8330:8339   */\n      iszero\n        /* \"#utility.yul\":8323:8340   */\n      iszero\n        /* \"#utility.yul\":8319:8364   */\n      and\n        /* \"#utility.yul\":8316:8318   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":8367:8385   */\n      tag_364\n      tag_359\n      jump\t// in\n    tag_364:\n      pop\n        /* \"#utility.yul\":8407:8416   */\n      mul\n      swap1\n        /* \"#utility.yul\":8306:8422   */\n      jump\t// out\n        /* \"#utility.yul\":8427:8552   */\n    tag_222:\n      0x00\n        /* \"#utility.yul\":8495:8496   */\n      dup3\n        /* \"#utility.yul\":8492:8493   */\n      dup3\n        /* \"#utility.yul\":8489:8497   */\n      lt\n        /* \"#utility.yul\":8486:8488   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":8500:8518   */\n      tag_367\n      tag_359\n      jump\t// in\n    tag_367:\n      pop\n        /* \"#utility.yul\":8537:8546   */\n      sub\n      swap1\n        /* \"#utility.yul\":8476:8552   */\n      jump\t// out\n        /* \"#utility.yul\":8557:8815   */\n    tag_339:\n        /* \"#utility.yul\":8629:8630   */\n      0x00\n        /* \"#utility.yul\":8639:8752   */\n    tag_369:\n        /* \"#utility.yul\":8653:8659   */\n      dup4\n        /* \"#utility.yul\":8650:8651   */\n      dup2\n        /* \"#utility.yul\":8647:8660   */\n      lt\n        /* \"#utility.yul\":8639:8752   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":8729:8740   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8723:8741   */\n      mload\n        /* \"#utility.yul\":8710:8721   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":8703:8742   */\n      mstore\n        /* \"#utility.yul\":8675:8677   */\n      0x20\n        /* \"#utility.yul\":8668:8678   */\n      add\n        /* \"#utility.yul\":8639:8752   */\n      jump(tag_369)\n    tag_371:\n        /* \"#utility.yul\":8770:8776   */\n      dup4\n        /* \"#utility.yul\":8767:8768   */\n      dup2\n        /* \"#utility.yul\":8764:8777   */\n      gt\n        /* \"#utility.yul\":8761:8763   */\n      iszero\n      tag_201\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":8805:8806   */\n      0x00\n        /* \"#utility.yul\":8787:8803   */\n      swap2\n      add\n        /* \"#utility.yul\":8780:8807   */\n      mstore\n        /* \"#utility.yul\":8610:8815   */\n      jump\t// out\n        /* \"#utility.yul\":8820:8947   */\n    tag_359:\n        /* \"#utility.yul\":8881:8891   */\n      0x4e487b71\n        /* \"#utility.yul\":8876:8879   */\n      0xe0\n        /* \"#utility.yul\":8872:8892   */\n      shl\n        /* \"#utility.yul\":8869:8870   */\n      0x00\n        /* \"#utility.yul\":8862:8893   */\n      mstore\n        /* \"#utility.yul\":8912:8916   */\n      0x11\n        /* \"#utility.yul\":8909:8910   */\n      0x04\n        /* \"#utility.yul\":8902:8917   */\n      mstore\n        /* \"#utility.yul\":8936:8940   */\n      0x24\n        /* \"#utility.yul\":8933:8934   */\n      0x00\n        /* \"#utility.yul\":8926:8941   */\n      revert\n        /* \"#utility.yul\":8952:9085   */\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9029:9060   */\n      dup2\n      and\n        /* \"#utility.yul\":9019:9061   */\n      dup2\n      eq\n        /* \"#utility.yul\":9009:9011   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":9075:9076   */\n      0x00\n        /* \"#utility.yul\":9072:9073   */\n      dup1\n        /* \"#utility.yul\":9065:9077   */\n      revert\n        /* \"#utility.yul\":9090:9210   */\n    tag_319:\n        /* \"#utility.yul\":9178:9183   */\n      dup1\n        /* \"#utility.yul\":9171:9184   */\n      iszero\n        /* \"#utility.yul\":9164:9185   */\n      iszero\n        /* \"#utility.yul\":9157:9162   */\n      dup2\n        /* \"#utility.yul\":9154:9186   */\n      eq\n        /* \"#utility.yul\":9144:9146   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":9200:9201   */\n      0x00\n        /* \"#utility.yul\":9197:9198   */\n      dup1\n        /* \"#utility.yul\":9190:9202   */\n      revert\n\n    auxdata: 0xa2646970667358221220d152e2b969a20236d022cd70a748923817e5c217e2629d01422cb564072649a364736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14EE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x796C7BE7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC0C53B8B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xD4A67930 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xF1EAE64A EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D1 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x796C7BE7 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x7E6F7A09 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x930ED033 EQ PUSH2 0x19B JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3C03B9A4 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x3C03B9A4 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x48C7E528 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x179 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x29E9A524 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x3011D3D5 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST PUSH2 0x13E PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x10D PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x13E PUSH2 0x32F JUMP JUMPDEST PUSH2 0x10D PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST PUSH2 0x181 PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x39E JUMP JUMPDEST PUSH2 0x13E PUSH2 0x99D JUMP JUMPDEST PUSH2 0x13E PUSH2 0x9AC JUMP JUMPDEST PUSH2 0x10D PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x10D PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x10D PUSH2 0xB00 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FF PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x22E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x278 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST POP PUSH1 0x68 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D7 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E8 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST POP PUSH1 0x68 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x35B PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x36C PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x0 PUSH2 0xB85 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x68 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ PUSH2 0x519 JUMPI DUP5 DUP5 PUSH2 0x51C JUMP JUMPDEST DUP4 DUP6 JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH2 0x559 SWAP3 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x118F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x585 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH2 0x5E3 SWAP3 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x118F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x653 DUP3 PUSH2 0x64D DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 GT DUP1 ISZERO PUSH2 0x675 JUMPI POP PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 PUSH2 0x68B PUSH1 0x2 PUSH2 0x64D DUP7 DUP7 PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x6BE SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST POP PUSH1 0x66 SLOAD PUSH1 0x68 SLOAD PUSH2 0x72E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73B DUP3 DUP8 DUP10 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x68 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND SWAP2 AND EQ PUSH2 0x760 JUMPI DUP3 PUSH1 0x0 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x7AB SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT DUP1 ISZERO PUSH2 0x802 JUMPI POP PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 PUSH2 0x818 PUSH1 0x2 PUSH2 0x64D DUP6 DUP8 PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x84E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x118F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x87A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x8B1 JUMPI POP DUP1 PUSH2 0x8B4 JUMP JUMPDEST POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x98A JUMPI PUSH1 0x66 SLOAD PUSH1 0x67 SLOAD PUSH2 0x8D7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E4 DUP3 DUP11 DUP11 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x67 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND SWAP2 AND EQ PUSH2 0x909 JUMPI DUP3 PUSH1 0x0 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x954 SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x982 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 SWAP9 POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C5 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9D6 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0xA10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0xC02 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA32 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xA81 PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x67 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP5 DUP8 AND SWAP2 SWAP1 SWAP4 AND OR SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xA0 SHL OR AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xB18 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB29 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0xB7E DUP2 PUSH2 0xB85 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP3 DUP5 PUSH2 0x141D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP3 DUP5 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP3 DUP5 PUSH2 0x143C JUMP JUMPDEST PUSH2 0xC58 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC21 SWAP3 SWAP2 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xD2F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC6C DUP6 PUSH2 0x26F2 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC7A DUP3 DUP6 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC94 DUP4 PUSH2 0xC8E DUP9 PUSH2 0x2710 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP PUSH2 0xCA0 DUP2 DUP4 PUSH2 0x13FD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xCC4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD13 PUSH2 0xDCA JUMP JUMPDEST PUSH2 0xD1B PUSH2 0xE3D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD84 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xC58 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0xC58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP3 DUP5 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xDE3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xDFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD1B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE56 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD1B PUSH2 0xEA8 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEBC DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xEC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0xEEF DUP6 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0xF0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF27 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xCA0 DUP3 DUP3 DUP7 PUSH2 0xF7F JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xF8E JUMPI POP DUP2 PUSH2 0xBE3 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xF9E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBE3 DUP2 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBE3 DUP2 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x101B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1026 DUP2 PUSH2 0x1495 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1036 DUP2 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1046 DUP2 PUSH2 0x1495 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1063 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x106E DUP2 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x107E DUP2 PUSH2 0x14AA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x109B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x10A6 DUP2 PUSH2 0x1495 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBE3 DUP2 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBE3 DUP2 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1100 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1109 DUP5 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 POP PUSH2 0x1117 PUSH1 0x20 DUP6 ADD PUSH2 0xFB8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1046 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1140 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x115F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1185 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1453 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xBE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578656375746F723A2063616C6C6572206973206E6F74207468652065786563 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3ABA37B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x13DB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1147 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F8 PUSH2 0x147F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1418 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1437 JUMPI PUSH2 0x1437 PUSH2 0x147F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x144E JUMPI PUSH2 0x144E PUSH2 0x147F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x146E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1456 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAEA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 MSTORE 0xE2 0xB9 PUSH10 0xA20236D022CD70A74892 CODESIZE OR 0xE5 0xC2 OR 0xE2 PUSH3 0x9D0142 0x2C 0xB5 PUSH5 0x72649A364 PUSH20 0x6F6C634300080000330000000000000000000000 ",
							"sourceMap": "677:4672:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9212:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:128:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "182:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "191:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "194:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "184:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "184:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "184:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "148:30:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:42:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:53:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:61:9"
															},
															"nodeType": "YulIf",
															"src": "117:2:9"
														}
													]
												},
												"name": "abi_decode_t_uint112_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:9",
														"type": ""
													}
												],
												"src": "14:190:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:189:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "334:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "342:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:9"
															},
															"nodeType": "YulIf",
															"src": "289:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "360:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "386:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "373:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "364:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "432:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "405:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "405:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "447:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "457:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "447:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "245:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "256:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "268:6:9",
														"type": ""
													}
												],
												"src": "209:259:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "554:182:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "600:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "609:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "617:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "602:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "602:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "602:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "575:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "584:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "571:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "571:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "596:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "567:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "567:32:9"
															},
															"nodeType": "YulIf",
															"src": "564:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "635:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "654:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "648:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "639:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "700:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "673:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "673:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "673:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "715:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "725:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "715:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "520:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "531:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "543:6:9",
														"type": ""
													}
												],
												"src": "473:263:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "845:441:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "891:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "900:6:9"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "908:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "893:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "893:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "893:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "866:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "875:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "862:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "887:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:32:9"
															},
															"nodeType": "YulIf",
															"src": "855:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "926:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "952:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "939:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "930:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "998:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "971:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "971:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "971:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1013:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1023:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1013:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1037:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1069:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1080:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1065:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1065:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1052:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1052:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1041:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1120:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1093:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1093:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1093:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1137:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1147:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1163:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1195:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1206:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1191:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1178:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1178:32:9"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "1167:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "1246:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1219:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1219:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1219:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1263:17:9",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "1273:7:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1263:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "795:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "806:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "818:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "826:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "834:6:9",
														"type": ""
													}
												],
												"src": "741:545:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1375:312:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1421:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1430:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1438:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1423:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1423:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1396:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1392:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1388:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:32:9"
															},
															"nodeType": "YulIf",
															"src": "1385:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1482:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1469:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1460:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1528:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1501:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1501:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1501:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1543:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1553:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1543:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1599:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1610:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1595:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1595:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1582:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1571:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1647:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1623:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1623:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1664:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1674:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1664:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1333:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1344:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1356:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1364:6:9",
														"type": ""
													}
												],
												"src": "1291:396:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1779:240:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1825:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1834:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1842:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1827:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1827:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1827:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1800:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1809:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1796:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1821:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1792:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:32:9"
															},
															"nodeType": "YulIf",
															"src": "1789:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1860:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1886:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1873:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1864:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1932:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1905:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1905:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1905:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1947:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1957:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1971:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1998:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2009:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1994:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1994:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1981:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1981:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1971:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1737:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1748:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1760:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1768:6:9",
														"type": ""
													}
												],
												"src": "1692:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2091:186:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2137:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2146:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2154:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2139:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2139:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:32:9"
															},
															"nodeType": "YulIf",
															"src": "2101:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2172:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2198:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2185:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2185:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2176:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2241:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2217:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2217:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2217:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2256:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2266:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2057:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2068:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2080:6:9",
														"type": ""
													}
												],
												"src": "2024:253:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2360:179:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2406:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2415:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2423:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2408:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2408:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2408:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2381:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2390:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2377:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2402:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:32:9"
															},
															"nodeType": "YulIf",
															"src": "2370:2:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2441:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2460:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2454:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2445:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2503:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2479:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2479:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2479:30:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2518:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2528:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2326:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2337:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2349:6:9",
														"type": ""
													}
												],
												"src": "2282:257:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2658:360:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2704:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2713:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2721:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2706:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2706:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2706:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2679:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2688:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2675:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2675:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2671:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:32:9"
															},
															"nodeType": "YulIf",
															"src": "2668:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2739:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2781:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2749:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:42:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2800:61:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2846:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2857:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2842:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2842:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2810:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:51:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2870:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2904:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2889:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2889:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2883:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:25:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2874:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2962:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "2971:6:9"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "2979:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2964:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2964:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2964:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2930:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2941:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2948:10:9",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2937:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2937:22:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2927:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2927:33:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2920:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:41:9"
															},
															"nodeType": "YulIf",
															"src": "2917:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2997:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3007:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2608:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2619:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2631:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2639:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2647:6:9",
														"type": ""
													}
												],
												"src": "2544:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3104:113:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3150:26:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3159:6:9"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3167:6:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3152:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3152:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3152:22:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3125:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3134:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3146:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3117:32:9"
															},
															"nodeType": "YulIf",
															"src": "3114:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3185:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3201:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3195:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3195:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3185:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3070:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3081:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3093:6:9",
														"type": ""
													}
												],
												"src": "3023:194:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3273:208:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3283:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3303:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3297:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:12:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3287:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3325:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3330:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:19:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3372:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3379:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3368:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3368:16:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3390:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3395:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3386:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3386:14:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3402:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3346:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3346:63:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3346:63:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3418:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3433:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3446:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3454:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3442:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3442:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3463:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3459:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3459:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3438:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3438:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:39:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3470:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3425:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3425:50:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3250:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3257:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3265:3:9",
														"type": ""
													}
												],
												"src": "3222:259:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3623:137:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3633:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3653:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3647:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3637:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3695:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3703:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3691:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3691:17:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3710:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3715:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3669:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3669:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3731:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3742:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3747:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3738:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3738:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3731:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3599:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3604:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3615:3:9",
														"type": ""
													}
												],
												"src": "3486:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3866:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3876:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3888:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3899:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3884:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3876:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3933:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3949:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3954:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3945:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3945:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3958:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3941:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3941:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3929:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3929:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3911:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3911:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3835:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3846:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3857:4:9",
														"type": ""
													}
												],
												"src": "3765:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4102:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4112:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4124:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4135:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4120:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4120:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4112:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4154:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4169:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4185:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4190:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4181:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4181:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4194:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4177:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4177:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4165:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4165:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4147:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4147:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4218:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4229:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4214:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4214:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4234:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4207:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4063:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4074:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4082:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4093:4:9",
														"type": ""
													}
												],
												"src": "3973:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4347:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4357:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4369:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4380:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4365:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4357:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4399:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4424:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4417:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4417:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4410:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4392:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4392:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4316:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4327:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4338:4:9",
														"type": ""
													}
												],
												"src": "4252:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4565:100:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4582:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4593:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4575:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4575:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4575:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4605:54:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4632:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4644:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4655:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4640:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4640:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4613:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:46:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4605:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4534:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4556:4:9",
														"type": ""
													}
												],
												"src": "4444:221:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4844:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4861:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4872:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4854:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4854:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4895:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4906:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4891:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4891:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4911:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4884:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4884:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4934:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4945:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4930:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4930:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4950:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4923:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4923:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5005:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5016:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5001:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5001:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5021:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4994:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4994:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4994:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5039:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5051:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5062:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5047:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5047:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5039:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4821:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4835:4:9",
														"type": ""
													}
												],
												"src": "4670:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5251:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5268:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5279:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5261:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5261:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5261:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5302:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5313:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5298:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5298:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5318:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5291:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5291:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5291:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5341:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5352:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5337:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5337:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5357:34:9",
																		"type": "",
																		"value": "executor: caller is not the exec"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5330:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5330:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5330:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5412:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5423:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5408:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5408:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5428:6:9",
																		"type": "",
																		"value": "utor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5401:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5401:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5401:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5444:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5456:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5467:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5452:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5444:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5228:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5242:4:9",
														"type": ""
													}
												],
												"src": "5077:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5656:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5673:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5684:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5666:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5707:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5718:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5703:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5703:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5696:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5746:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5757:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5742:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5762:34:9",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5735:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5735:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5735:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5817:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5828:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5813:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5813:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5833:8:9",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5806:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5806:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5851:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5863:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5874:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5859:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5859:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5851:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5633:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5647:4:9",
														"type": ""
													}
												],
												"src": "5482:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6063:236:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6080:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6091:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6073:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6073:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6073:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6114:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6125:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6110:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6110:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6130:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6103:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6103:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6103:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6153:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6164:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6149:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6149:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6169:34:9",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6142:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6142:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6142:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6224:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6235:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6220:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6220:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6240:16:9",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6213:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6213:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6213:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6266:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6278:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6289:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6274:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6274:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6266:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6040:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6054:4:9",
														"type": ""
													}
												],
												"src": "5889:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6478:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6495:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6506:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6488:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6488:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6488:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6529:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6540:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6525:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6525:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6545:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6518:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6518:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6518:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6568:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6579:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6564:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6564:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6584:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6557:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6557:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6557:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6628:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6640:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6651:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6636:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6636:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6628:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6455:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6469:4:9",
														"type": ""
													}
												],
												"src": "6304:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6839:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6856:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6867:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6849:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6849:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6890:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6901:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6886:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6886:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6879:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6879:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6929:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6940:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6925:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6945:31:9",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6918:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6918:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6986:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6998:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7009:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6994:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6994:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6986:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6816:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6830:4:9",
														"type": ""
													}
												],
												"src": "6665:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7197:232:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7214:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7225:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7248:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7259:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7244:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7244:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7264:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7237:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7237:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7237:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7287:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7298:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7283:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7283:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7303:34:9",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7276:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7276:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7276:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7358:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7369:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7354:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7354:18:9"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7374:12:9",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7347:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:40:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7347:40:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7396:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7408:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7419:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7404:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7404:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7396:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7174:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7188:4:9",
														"type": ""
													}
												],
												"src": "7023:406:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7637:257:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7654:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7665:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7647:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7647:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7647:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7692:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7703:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7688:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7688:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7708:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7681:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7681:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7681:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7735:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7746:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7731:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7731:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "7755:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7771:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7776:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7767:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7767:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7780:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7763:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7763:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7751:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7751:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7724:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7724:60:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7724:60:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7804:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7815:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7800:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7800:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7820:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7793:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7793:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7793:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7833:55:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7860:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7872:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7883:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7868:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7868:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7841:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7841:47:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7833:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7582:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7593:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7601:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7609:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7617:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7628:4:9",
														"type": ""
													}
												],
												"src": "7434:460:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7947:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7974:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7976:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7976:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7976:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7963:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7970:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7966:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7966:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7960:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7960:13:9"
															},
															"nodeType": "YulIf",
															"src": "7957:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8005:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8016:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8019:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8012:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8012:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8005:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7930:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7933:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7939:3:9",
														"type": ""
													}
												],
												"src": "7899:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8078:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8109:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "8130:1:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8137:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8142:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8133:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8133:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8123:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8123:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8123:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8174:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8177:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8167:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8167:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8167:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "8202:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8205:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8195:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8195:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8195:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8098:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8091:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8091:9:9"
															},
															"nodeType": "YulIf",
															"src": "8088:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8229:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8238:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8241:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8234:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8229:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8063:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8066:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8072:1:9",
														"type": ""
													}
												],
												"src": "8032:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8306:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8365:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8367:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8367:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8367:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8337:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8330:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8330:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8323:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8323:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8345:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8356:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "8352:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8352:6:9"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8360:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8348:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8348:14:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8342:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:21:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8319:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8319:45:9"
															},
															"nodeType": "YulIf",
															"src": "8316:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8396:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8411:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8414:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8407:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8407:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8396:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8285:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8288:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8294:7:9",
														"type": ""
													}
												],
												"src": "8254:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8476:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8498:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8500:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8500:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8500:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8492:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8495:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8489:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8489:8:9"
															},
															"nodeType": "YulIf",
															"src": "8486:2:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8529:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8541:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8544:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8537:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8537:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8529:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8458:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8461:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8467:4:9",
														"type": ""
													}
												],
												"src": "8427:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8610:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8620:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8629:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8624:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8689:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8714:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8719:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8710:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8710:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8733:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8738:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8729:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8729:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8723:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8723:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8703:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8703:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8703:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8650:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8653:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8647:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8647:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8661:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8663:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8672:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8675:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8668:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8668:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8663:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8643:3:9",
																"statements": []
															},
															"src": "8639:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8778:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8791:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "8796:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8787:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8787:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8805:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8780:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8780:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8780:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8767:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8770:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8764:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8764:13:9"
															},
															"nodeType": "YulIf",
															"src": "8761:2:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8588:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8593:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8598:6:9",
														"type": ""
													}
												],
												"src": "8557:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8852:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8869:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8876:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8881:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8872:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8872:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8862:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8862:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8862:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8909:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8912:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8902:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8902:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8902:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8933:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8936:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8926:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8926:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8926:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8820:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8999:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9063:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9072:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9075:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9065:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9065:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9065:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9022:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9033:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9048:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9053:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "9044:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9044:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9057:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "9040:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9040:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9029:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9029:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9019:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9019:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9012:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9012:50:9"
															},
															"nodeType": "YulIf",
															"src": "9009:2:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8988:5:9",
														"type": ""
													}
												],
												"src": "8952:133:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9134:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9188:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9197:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9200:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9190:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9190:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9190:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9157:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9178:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9171:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9171:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9164:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9164:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9154:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9154:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9147:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9147:40:9"
															},
															"nodeType": "YulIf",
															"src": "9144:2:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9123:5:9",
														"type": ""
													}
												],
												"src": "9090:120:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_2)\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_bool(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_uint112_fromMemory(headStart)\n        value1 := abi_decode_t_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(value2, value2) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"executor: caller is not the exec\")\n        mstore(add(headStart, 96), \"utor\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__to_t_uint256_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_t_bytes(value3, add(headStart, 128))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063796c7be711610097578063c0c53b8b11610066578063c0c53b8b146101ae578063d4a67930146101c1578063f1eae64a146101c9578063f2fde38b146101d1576100f5565b8063796c7be7146101835780637e6f7a091461018b5780638da5cb5b14610193578063930ed0331461019b576100f5565b80633c03b9a4116100d35780633c03b9a41461014b5780633e413bee1461015e57806348c7e52814610166578063715018a614610179576100f5565b80631e1bff3f146100fa57806329e9a524146101235780633011d3d514610136575b600080fd5b61010d610108366004611051565b6101e4565b60405161011a91906111bc565b60405180910390f35b61010d6101313660046110b4565b61025d565b61013e6102be565b60405161011a919061118f565b61010d6101593660046110b4565b6102cd565b61013e61032f565b61010d610174366004610fcf565b61033e565b610181610353565b005b61010d61039e565b61013e61099d565b61013e6109ac565b61010d6101a9366004611089565b6109bb565b6101816101bc366004611007565b610a19565b61010d610af0565b61010d610b00565b6101816101df366004610fcf565b610b10565b60006101ee610b81565b6001600160a01b03166101ff6109ac565b6001600160a01b03161461022e5760405162461bcd60e51b8152600401610225906112f8565b60405180910390fd5b506001600160a01b0382166000908152606560205260409020805482151560ff19909116179055600192915050565b6000610267610b81565b6001600160a01b03166102786109ac565b6001600160a01b03161461029e5760405162461bcd60e51b8152600401610225906112f8565b506068805460ff60a01b1916600160a01b8315150217905560015b919050565b6068546001600160a01b031681565b60006102d7610b81565b6001600160a01b03166102e86109ac565b6001600160a01b03161461030e5760405162461bcd60e51b8152600401610225906112f8565b5060688054821515600160a81b0260ff60a81b199091161790556001919050565b6067546001600160a01b031681565b60656020526000908152604090205460ff1681565b61035b610b81565b6001600160a01b031661036c6109ac565b6001600160a01b0316146103925760405162461bcd60e51b8152600401610225906112f8565b61039c6000610b85565b565b3360009081526065602052604081205460ff166103cd5760405162461bcd60e51b815260040161022590611220565b600080606660009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045691906110ec565b506001600160701b031691506001600160701b031691506000606660009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156104bd57600080fd5b505afa1580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f59190610feb565b60685490915060009081906001600160a01b0380851691161461051957848461051c565b83855b6067546066546040516370a0823160e01b81529395509193506000926001600160a01b03918216926370a08231926105599291169060040161118f565b60206040518083038186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a9919061112f565b6068546066546040516370a0823160e01b81529293506000926001600160a01b03928316926370a08231926105e39291169060040161118f565b60206040518083038186803b1580156105fb57600080fd5b505afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610633919061112f565b905060006106538261064d85670de0b6b3a7640000610bd7565b90610bea565b9050670de0b6b3a7640000811180156106755750606854600160a81b900460ff165b156107e257600061068b600261064d8686610bf6565b6068546040516340c10f1960e01b81529192506001600160a01b0316906340c10f19906106be90309085906004016111a3565b602060405180830381600087803b1580156106d857600080fd5b505af11580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071091906110d0565b5060665460685461072e916001600160a01b03918216911683610c02565b600061073b828789610c5d565b60685490915060009081906001600160a01b038b811691161461076057826000610764565b6000835b6066546040805160008152602081019182905263022c0d9f60e01b9091529294509092506001600160a01b03169063022c0d9f906107ab90859085903090602481016113ae565b600060405180830381600087803b1580156107c557600080fd5b505af11580156107d9573d6000803e3d6000fd5b50505050505050505b670de0b6b3a7640000811080156108025750606854600160a01b900460ff165b1561098e576000610818600261064d8587610bf6565b6067546040516370a0823160e01b81529192506000916001600160a01b03909116906370a082319061084e90309060040161118f565b60206040518083038186803b15801561086657600080fd5b505afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e919061112f565b90506000818311156108b15750806108b4565b50815b801561098a576066546067546108d7916001600160a01b03918216911683610c02565b60006108e4828a8a610c5d565b60675490915060009081906001600160a01b038d81169116146109095782600061090d565b6000835b6066546040805160008152602081019182905263022c0d9f60e01b9091529294509092506001600160a01b03169063022c0d9f9061095490859085903090602481016113ae565b600060405180830381600087803b15801561096e57600080fd5b505af1158015610982573d6000803e3d6000fd5b505050505050505b5050505b60019850505050505050505090565b6066546001600160a01b031681565b6033546001600160a01b031690565b60006109c5610b81565b6001600160a01b03166109d66109ac565b6001600160a01b0316146109fc5760405162461bcd60e51b8152600401610225906112f8565b610a106001600160a01b0384163384610c02565b50600192915050565b600054610100900460ff1680610a32575060005460ff16155b610a4e5760405162461bcd60e51b8152600401610225906112aa565b600054610100900460ff16158015610a79576000805460ff1961ff0019909116610100171660011790555b610a81610cab565b606680546001600160a01b038087166001600160a01b031992831617909255606780548684169083161790556068805460ff60a81b1960ff60a01b19948716919093161792909216600160a01b1716600160a81b1790558015610aea576000805461ff00191690555b50505050565b606854600160a01b900460ff1681565b606854600160a81b900460ff1681565b610b18610b81565b6001600160a01b0316610b296109ac565b6001600160a01b031614610b4f5760405162461bcd60e51b8152600401610225906112f8565b6001600160a01b038116610b755760405162461bcd60e51b8152600401610225906111da565b610b7e81610b85565b50565b3390565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610be3828461141d565b9392505050565b6000610be382846113fd565b6000610be3828461143c565b610c588363a9059cbb60e01b8484604051602401610c219291906111a3565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610d2f565b505050565b600080610c6c856126f2610bd7565b90506000610c7a8285610bd7565b90506000610c9483610c8e88612710610bd7565b90610dbe565b9050610ca081836113fd565b979650505050505050565b600054610100900460ff1680610cc4575060005460ff16155b610ce05760405162461bcd60e51b8152600401610225906112aa565b600054610100900460ff16158015610d0b576000805460ff1961ff0019909116610100171660011790555b610d13610dca565b610d1b610e3d565b8015610b7e576000805461ff001916905550565b6000610d84826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ead9092919063ffffffff16565b805190915015610c585780806020019051810190610da291906110d0565b610c585760405162461bcd60e51b815260040161022590611364565b6000610be382846113e5565b600054610100900460ff1680610de3575060005460ff16155b610dff5760405162461bcd60e51b8152600401610225906112aa565b600054610100900460ff16158015610d1b576000805460ff1961ff0019909116610100171660011790558015610b7e576000805461ff001916905550565b600054610100900460ff1680610e56575060005460ff16155b610e725760405162461bcd60e51b8152600401610225906112aa565b600054610100900460ff16158015610e9d576000805460ff1961ff0019909116610100171660011790555b610d1b610ea8610b81565b610b85565b6060610ebc8484600085610ec4565b949350505050565b606082471015610ee65760405162461bcd60e51b815260040161022590611264565b610eef85610f79565b610f0b5760405162461bcd60e51b81526004016102259061132d565b600080866001600160a01b03168587604051610f279190611173565b60006040518083038185875af1925050503d8060008114610f64576040519150601f19603f3d011682016040523d82523d6000602084013e610f69565b606091505b5091509150610ca0828286610f7f565b3b151590565b60608315610f8e575081610be3565b825115610f9e5782518084602001fd5b8160405162461bcd60e51b815260040161022591906111c7565b80516001600160701b03811681146102b957600080fd5b600060208284031215610fe0578081fd5b8135610be381611495565b600060208284031215610ffc578081fd5b8151610be381611495565b60008060006060848603121561101b578182fd5b833561102681611495565b9250602084013561103681611495565b9150604084013561104681611495565b809150509250925092565b60008060408385031215611063578182fd5b823561106e81611495565b9150602083013561107e816114aa565b809150509250929050565b6000806040838503121561109b578182fd5b82356110a681611495565b946020939093013593505050565b6000602082840312156110c5578081fd5b8135610be3816114aa565b6000602082840312156110e1578081fd5b8151610be3816114aa565b600080600060608486031215611100578283fd5b61110984610fb8565b925061111760208501610fb8565b9150604084015163ffffffff81168114611046578182fd5b600060208284031215611140578081fd5b5051919050565b6000815180845261115f816020860160208601611453565b601f01601f19169290920160200192915050565b60008251611185818460208701611453565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b600060208252610be36020830184611147565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526024908201527f6578656375746f723a2063616c6c6572206973206e6f742074686520657865636040820152633aba37b960e11b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b600085825284602083015260018060a01b0384166040830152608060608301526113db6080830184611147565b9695505050505050565b600082198211156113f8576113f861147f565b500190565b60008261141857634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156114375761143761147f565b500290565b60008282101561144e5761144e61147f565b500390565b60005b8381101561146e578181015183820152602001611456565b83811115610aea5750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610b7e57600080fd5b8015158114610b7e57600080fdfea2646970667358221220d152e2b969a20236d022cd70a748923817e5c217e2629d01422cb564072649a364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x796C7BE7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC0C53B8B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xD4A67930 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xF1EAE64A EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D1 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x796C7BE7 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x7E6F7A09 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x930ED033 EQ PUSH2 0x19B JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3C03B9A4 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x3C03B9A4 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x48C7E528 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x179 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1E1BFF3F EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x29E9A524 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x3011D3D5 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST PUSH2 0x13E PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x10D PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x2CD JUMP JUMPDEST PUSH2 0x13E PUSH2 0x32F JUMP JUMPDEST PUSH2 0x10D PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x33E JUMP JUMPDEST PUSH2 0x181 PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x39E JUMP JUMPDEST PUSH2 0x13E PUSH2 0x99D JUMP JUMPDEST PUSH2 0x13E PUSH2 0x9AC JUMP JUMPDEST PUSH2 0x10D PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x9BB JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x10D PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x10D PUSH2 0xB00 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FF PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x22E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x278 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST POP PUSH1 0x68 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D7 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E8 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x30E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST POP PUSH1 0x68 DUP1 SLOAD DUP3 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x35B PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x36C PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x39C PUSH1 0x0 PUSH2 0xB85 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x432 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x10EC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND SWAP2 POP PUSH1 0x0 PUSH1 0x66 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x68 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ PUSH2 0x519 JUMPI DUP5 DUP5 PUSH2 0x51C JUMP JUMPDEST DUP4 DUP6 JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH2 0x559 SWAP3 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x118F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x585 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x66 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH2 0x5E3 SWAP3 SWAP2 AND SWAP1 PUSH1 0x4 ADD PUSH2 0x118F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x653 DUP3 PUSH2 0x64D DUP6 PUSH8 0xDE0B6B3A7640000 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 GT DUP1 ISZERO PUSH2 0x675 JUMPI POP PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 PUSH2 0x68B PUSH1 0x2 PUSH2 0x64D DUP7 DUP7 PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH2 0x6BE SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST POP PUSH1 0x66 SLOAD PUSH1 0x68 SLOAD PUSH2 0x72E SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73B DUP3 DUP8 DUP10 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x68 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND SWAP2 AND EQ PUSH2 0x760 JUMPI DUP3 PUSH1 0x0 PUSH2 0x764 JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x7AB SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT DUP1 ISZERO PUSH2 0x802 JUMPI POP PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 PUSH2 0x818 PUSH1 0x2 PUSH2 0x64D DUP6 DUP8 PUSH2 0xBF6 JUMP JUMPDEST PUSH1 0x67 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x84E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x118F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x87A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x112F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x8B1 JUMPI POP DUP1 PUSH2 0x8B4 JUMP JUMPDEST POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x98A JUMPI PUSH1 0x66 SLOAD PUSH1 0x67 SLOAD PUSH2 0x8D7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E4 DUP3 DUP11 DUP11 PUSH2 0xC5D JUMP JUMPDEST PUSH1 0x67 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND SWAP2 AND EQ PUSH2 0x909 JUMPI DUP3 PUSH1 0x0 PUSH2 0x90D JUMP JUMPDEST PUSH1 0x0 DUP4 JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL SWAP1 SWAP2 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x22C0D9F SWAP1 PUSH2 0x954 SWAP1 DUP6 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 PUSH1 0x24 DUP2 ADD PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x982 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 SWAP9 POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x66 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C5 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9D6 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0xA10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER DUP5 PUSH2 0xC02 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA32 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xA81 PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x67 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x68 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP5 DUP8 AND SWAP2 SWAP1 SWAP4 AND OR SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0xA0 SHL OR AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xAEA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xB18 PUSH2 0xB81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB29 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0xB7E DUP2 PUSH2 0xB85 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP3 DUP5 PUSH2 0x141D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP3 DUP5 PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP3 DUP5 PUSH2 0x143C JUMP JUMPDEST PUSH2 0xC58 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xC21 SWAP3 SWAP2 SWAP1 PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0xD2F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC6C DUP6 PUSH2 0x26F2 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC7A DUP3 DUP6 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC94 DUP4 PUSH2 0xC8E DUP9 PUSH2 0x2710 PUSH2 0xBD7 JUMP JUMPDEST SWAP1 PUSH2 0xDBE JUMP JUMPDEST SWAP1 POP PUSH2 0xCA0 DUP2 DUP4 PUSH2 0x13FD JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xCC4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD13 PUSH2 0xDCA JUMP JUMPDEST PUSH2 0xD1B PUSH2 0xE3D JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD84 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xC58 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDA2 SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0xC58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP3 DUP5 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xDE3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xDFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD1B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xE56 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xE9D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD1B PUSH2 0xEA8 PUSH2 0xB81 JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEBC DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xEC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0xEEF DUP6 PUSH2 0xF79 JUMP JUMPDEST PUSH2 0xF0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xF27 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF64 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xCA0 DUP3 DUP3 DUP7 PUSH2 0xF7F JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xF8E JUMPI POP DUP2 PUSH2 0xBE3 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xF9E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x11C7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBE3 DUP2 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBE3 DUP2 PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x101B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1026 DUP2 PUSH2 0x1495 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1036 DUP2 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1046 DUP2 PUSH2 0x1495 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1063 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x106E DUP2 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x107E DUP2 PUSH2 0x14AA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x109B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x10A6 DUP2 PUSH2 0x1495 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBE3 DUP2 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBE3 DUP2 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1100 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1109 DUP5 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 POP PUSH2 0x1117 PUSH1 0x20 DUP6 ADD PUSH2 0xFB8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1046 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1140 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x115F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1185 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1453 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xBE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x6578656375746F723A2063616C6C6572206973206E6F74207468652065786563 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3ABA37B9 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP3 MSTORE DUP5 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x13DB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1147 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F8 PUSH2 0x147F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1418 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1437 JUMPI PUSH2 0x1437 PUSH2 0x147F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x144E JUMPI PUSH2 0x144E PUSH2 0x147F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x146E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1456 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAEA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 MSTORE 0xE2 0xB9 PUSH10 0xA20236D022CD70A74892 CODESIZE OR 0xE5 0xC2 OR 0xE2 PUSH3 0x9D0142 0x2C 0xB5 PUSH5 0x72649A364 PUSH20 0x6F6C634300080000330000000000000000000000 ",
							"sourceMap": "677:4672:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:177;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5101:119;;;;;;:::i;:::-;;:::i;963:18::-;;;:::i;:::-;;;;;;;:::i;5226:121::-;;;;;;:::i;:::-;;:::i;938:19::-;;;:::i;853:40::-;;;;;;:::i;:::-;;:::i;1934:101:0:-;;;:::i;:::-;;2131:2743:8;;;:::i;899:33::-;;;:::i;1302:85:0:-;;;:::i;4880:215:8:-;;;;;;:::i;:::-;;:::i;1437:378::-;;;;;;:::i;:::-;;:::i;988:19::-;;;:::i;1013:20::-;;;:::i;2184:198:0:-;;;;;;:::i;:::-;;:::i;1821:177:8:-;1924:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;1944:18:8;::::1;;::::0;;;:8:::1;:18;::::0;;;;:26;;;::::1;;-1:-1:-1::0;;1944:26:8;;::::1;;::::0;;;1821:177;;;;:::o;5101:119::-;5161:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;5177:7:8::1;:15:::0;;-1:-1:-1;;;;5177:15:8::1;-1:-1:-1::0;;;5177:15:8;::::1;;;;::::0;;-1:-1:-1;1584:1:0::1;5101:119:8::0;;;:::o;963:18::-;;;-1:-1:-1;;;;;963:18:8;;:::o;5226:121::-;5287:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;5303:8:8::1;:16:::0;;;::::1;;-1:-1:-1::0;;;5303:16:8::1;-1:-1:-1::0;;;;5303:16:8;;::::1;;::::0;;-1:-1:-1;5226:121:8;;;:::o;938:19::-;;;-1:-1:-1;;;;;938:19:8;;:::o;853:40::-;;;;;;;;;;;;;;;:::o;1934:101:0:-;1525:12;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;1998:30:::1;2025:1;1998:18;:30::i;:::-;1934:101::o:0;2131:2743:8:-;2055:10;2186:4;2046:20;;;:8;:20;;;;;;;;2038:69;;;;-1:-1:-1;;;2038:69:8;;;;;;;:::i;:::-;2203:16:::1;2221::::0;2271:18:::1;;;;;;;;;-1:-1:-1::0;;;;;2271:18:8::1;-1:-1:-1::0;;;;;2243:68:8::1;;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2202:111;-1:-1:-1::0;;;;;2202:111:8::1;;;-1:-1:-1::0;;;;;2202:111:8::1;;;2323:14;2355:18;;;;;;;;;-1:-1:-1::0;;;;;2355:18:8::1;-1:-1:-1::0;;;;;2340:41:8::1;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2527:3;::::0;2323:60;;-1:-1:-1;2468:17:8::1;::::0;;;-1:-1:-1;;;;;2509:22:8;;::::1;2527:3:::0;::::1;2509:22;:92;;2582:8;2592;2509:92;;;2547:8;2557;2509:92;2650:4;::::0;2679:18:::1;::::0;2632:75:::1;::::0;-1:-1:-1;;;2632:75:8;;2467:134;;-1:-1:-1;2467:134:8;;-1:-1:-1;2612:17:8::1;::::0;-1:-1:-1;;;;;2650:4:8;;::::1;::::0;2632:33:::1;::::0;:75:::1;::::0;2679:18;::::1;::::0;2632:75:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2754:3;::::0;2769:18:::1;::::0;2736:52:::1;::::0;-1:-1:-1;;;2736:52:8;;2612:95;;-1:-1:-1;2717:16:8::1;::::0;-1:-1:-1;;;;;2754:3:8;;::::1;::::0;2736:32:::1;::::0;:52:::1;::::0;2769:18;::::1;::::0;2736:52:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2717:71:::0;-1:-1:-1;2798:13:8::1;2814:33;2717:71:::0;2814:19:::1;:9:::0;2828:4:::1;2814:13;:19::i;:::-;:23:::0;::::1;:33::i;:::-;2798:49;;2869:4;2861:5;:12;:24;;;;-1:-1:-1::0;2877:8:8::1;::::0;-1:-1:-1;;;2877:8:8;::::1;;;2861:24;2857:795;;;2901:19;2923:32;2953:1;2924:23;:9:::0;2938:8;2924:13:::1;:23::i;2923:32::-;2982:3;::::0;2969:51:::1;::::0;-1:-1:-1;;;2969:51:8;;2901:54;;-1:-1:-1;;;;;;2982:3:8::1;::::0;2969:23:::1;::::0;:51:::1;::::0;3001:4:::1;::::0;2901:54;;2969:51:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3088:18:8::1;::::0;3053:3:::1;::::0;3035:114:::1;::::0;-1:-1:-1;;;;;3053:3:8;;::::1;::::0;3088:18:::1;3124:11:::0;3035:35:::1;:114::i;:::-;3163:17;3183:110;3213:11;3242:10;3270:9;3183:12;:110::i;:::-;3369:3;::::0;3163:130;;-1:-1:-1;3309:18:8::1;::::0;;;-1:-1:-1;;;;;3351:22:8;;::::1;3369:3:::0;::::1;3351:22;:106;;3435:9;3454:1;3351:106;;;3401:1;3405:9;3351:106;3486:18;::::0;3615:12:::1;::::0;;3486:18:::1;3615:12:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3471:170:8;;;3308:149;;-1:-1:-1;3308:149:8;;-1:-1:-1;;;;;;3486:18:8::1;::::0;3471:39:::1;::::0;:170:::1;::::0;3308:149;;;;3592:4:::1;::::0;3471:170;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2857:795;;;;;3674:4;3666:5;:12;:23;;;;-1:-1:-1::0;3682:7:8::1;::::0;-1:-1:-1;;;3682:7:8;::::1;;;3666:23;3662:1185;;;3705:18;3726:32;3756:1;3727:23;:8:::0;3740:9;3727:12:::1;:23::i;3726:32::-;3819:4;::::0;3801:78:::1;::::0;-1:-1:-1;;;3801:78:8;;3705:53;;-1:-1:-1;3772:26:8::1;::::0;-1:-1:-1;;;;;3819:4:8;;::::1;::::0;3801:33:::1;::::0;:78:::1;::::0;3860:4:::1;::::0;3801:78:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3772:107;;3893:16;3940:18;3927:10;:31;3923:159;;;-1:-1:-1::0;3989:18:8;3923:159:::1;;;-1:-1:-1::0;4057:10:8;3923:159:::1;4099:13:::0;;4095:742:::1;;4190:18;::::0;4150:4:::1;::::0;4132:124:::1;::::0;-1:-1:-1;;;;;4150:4:8;;::::1;::::0;4190:18:::1;4230:8:::0;4132:36:::1;:124::i;:::-;4274:17;4294:123;4328:8;4358:9;4389:10;4294:12;:123::i;:::-;4517:4;::::0;4274:143;;-1:-1:-1;4437:18:8::1;::::0;;;-1:-1:-1;;;;;4479:43:8;;::::1;4517:4:::0;::::1;4479:43;:135;;4592:9;4611:1;4479:135;;;4554:1;4558:9;4479:135;4647:18;::::0;4792:12:::1;::::0;;4647:18:::1;4792:12:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4632:190:8;;;4436:178;;-1:-1:-1;4436:178:8;;-1:-1:-1;;;;;;4647:18:8::1;::::0;4632:39:::1;::::0;:190:::1;::::0;4436:178;;;;4765:4:::1;::::0;4632:190;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4095:742;;;;3662:1185;;;;4863:4;4856:11;;;;;;;;;;2131:2743:::0;:::o;899:33::-;;;-1:-1:-1;;;;;899:33:8;;:::o;1302:85:0:-;1374:6;;-1:-1:-1;;;;;1374:6:0;1302:85;:::o;4880:215:8:-;4989:4;1525:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;5009:58:8::1;-1:-1:-1::0;;;;;5009:40:8;::::1;5050:10;5062:4:::0;5009:40:::1;:58::i;:::-;-1:-1:-1::0;5084:4:8::1;4880:215:::0;;;;:::o;1437:378::-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;1609:16:8::1;:14;:16::i;:::-;1677:18;:40:::0;;-1:-1:-1;;;;;1677:40:8;;::::1;-1:-1:-1::0;;;;;;1677:40:8;;::::1;;::::0;;;1727:4:::1;:12:::0;;;;::::1;::::0;;::::1;;::::0;;1749:3:::1;:10:::0;;-1:-1:-1;;;;;;;;1749:10:8;;::::1;::::0;;;::::1;;1769:14:::0;;;::::1;-1:-1:-1::0;;;1769:14:8::1;1793:15;-1:-1:-1::0;;;1793:15:8::1;::::0;;797:66:1;;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;797:66;1437:378:8;;;;:::o;988:19::-;;;-1:-1:-1;;;988:19:8;;;;;:::o;1013:20::-;;;-1:-1:-1;;;1013:20:8;;;;;:::o;2184:198:0:-;1525:12;:10;:12::i;:::-;-1:-1:-1;;;;;1514:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1514:23:0;;1506:68;;;;-1:-1:-1;;;1506:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2272:22:0;::::1;2264:73;;;;-1:-1:-1::0;;;2264:73:0::1;;;;;;;:::i;:::-;2347:28;2366:8;2347:18;:28::i;:::-;2184:198:::0;:::o;876:96:5:-;955:10;876:96;:::o;2536:187:0:-;2628:6;;;-1:-1:-1;;;;;2644:17:0;;;-1:-1:-1;;;;;;2644:17:0;;;;;;;2676:40;;2628:6;;;2644:17;2628:6;;2676:40;;2609:16;;2676:40;2536:187;;:::o;3462:96:6:-;3520:7;3546:5;3550:1;3546;:5;:::i;:::-;3539:12;3462:96;-1:-1:-1;;;3462:96:6:o;3847:::-;3905:7;3931:5;3935:1;3931;:5;:::i;3119:96::-;3177:7;3203:5;3207:1;3203;:5;:::i;745:216:3:-;868:86;888:5;918:23;;;943:2;947:5;895:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;895:58:3;;;;;;;;;;;;;;-1:-1:-1;;;;;895:58:3;-1:-1:-1;;;;;;895:58:3;;;;;;;;;;868:19;:86::i;:::-;745:216;;;:::o;1040:391:8:-;1172:17;;1227:18;:8;1240:4;1227:12;:18::i;:::-;1201:44;-1:-1:-1;1255:17:8;1275:31;1201:44;1295:10;1275:19;:31::i;:::-;1255:51;-1:-1:-1;1316:19:8;1338:41;1363:15;1338:20;:9;1352:5;1338:13;:20::i;:::-;:24;;:41::i;:::-;1316:63;-1:-1:-1;1401:23:8;1316:63;1401:9;:23;:::i;:::-;1389:35;1040:391;-1:-1:-1;;;;;;;1040:391:8:o;988:126:0:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;1045:26:0::1;:24;:26::i;:::-;1081;:24;:26::i;:::-;801:14:1::0;797:66;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;988:126:0;:::o;3306:717:3:-;3736:23;3762:69;3790:4;3762:69;;;;;;;;;;;;;;;;;3770:5;-1:-1:-1;;;;;3762:27:3;;;:69;;;;;:::i;:::-;3845:17;;3736:95;;-1:-1:-1;3845:21:3;3841:176;;3940:10;3929:30;;;;;;;;;;;;:::i;:::-;3921:85;;;;-1:-1:-1;;;3921:85:3;;;;;;;:::i;2752:96:6:-;2810:7;2836:5;2840:1;2836;:5;:::i;807:64:5:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;801:14;797:66;;;847:5;831:21;;-1:-1:-1;;831:21:1;;;807:64:5;:::o;1120:106:0:-;539:13:1;;;;;;;;:30;;-1:-1:-1;557:12:1;;;;556:13;539:30;531:89;;;;-1:-1:-1;;;531:89:1;;;;;;;:::i;:::-;631:19;654:13;;;;;;653:14;677:98;;;;711:13;:20;;-1:-1:-1;;;;711:20:1;;;;;745:19;727:4;745:19;;;677:98;1187:32:0::1;1206:12;:10;:12::i;:::-;1187:18;:32::i;3525:223:4:-:0;3658:12;3689:52;3711:6;3719:4;3725:1;3728:12;3689:21;:52::i;:::-;3682:59;3525:223;-1:-1:-1;;;;3525:223:4:o;4612:499::-;4777:12;4834:5;4809:21;:30;;4801:81;;;;-1:-1:-1;;;4801:81:4;;;;;;;:::i;:::-;4900:18;4911:6;4900:10;:18::i;:::-;4892:60;;;;-1:-1:-1;;;4892:60:4;;;;;;;:::i;:::-;4964:12;4978:23;5005:6;-1:-1:-1;;;;;5005:11:4;5024:5;5031:4;5005:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4963:73;;;;5053:51;5070:7;5079:10;5091:12;5053:16;:51::i;782:377::-;1098:20;1144:8;;;782:377::o;6275:692::-;6421:12;6449:7;6445:516;;;-1:-1:-1;6479:10:4;6472:17;;6445:516;6590:17;;:21;6586:365;;6784:10;6778:17;6844:15;6831:10;6827:2;6823:19;6816:44;6733:145;6923:12;6916:20;;-1:-1:-1;;;6916:20:4;;;;;;;;:::i;14:190:9:-;95:13;;-1:-1:-1;;;;;137:42:9;;127:53;;117:2;;194:1;191;184:12;209:259;;321:2;309:9;300:7;296:23;292:32;289:2;;;342:6;334;327:22;289:2;386:9;373:23;405:33;432:5;405:33;:::i;473:263::-;;596:2;584:9;575:7;571:23;567:32;564:2;;;617:6;609;602:22;564:2;654:9;648:16;673:33;700:5;673:33;:::i;741:545::-;;;;887:2;875:9;866:7;862:23;858:32;855:2;;;908:6;900;893:22;855:2;952:9;939:23;971:33;998:5;971:33;:::i;:::-;1023:5;-1:-1:-1;1080:2:9;1065:18;;1052:32;1093:35;1052:32;1093:35;:::i;:::-;1147:7;-1:-1:-1;1206:2:9;1191:18;;1178:32;1219:35;1178:32;1219:35;:::i;:::-;1273:7;1263:17;;;845:441;;;;;:::o;1291:396::-;;;1417:2;1405:9;1396:7;1392:23;1388:32;1385:2;;;1438:6;1430;1423:22;1385:2;1482:9;1469:23;1501:33;1528:5;1501:33;:::i;:::-;1553:5;-1:-1:-1;1610:2:9;1595:18;;1582:32;1623;1582;1623;:::i;:::-;1674:7;1664:17;;;1375:312;;;;;:::o;1692:327::-;;;1821:2;1809:9;1800:7;1796:23;1792:32;1789:2;;;1842:6;1834;1827:22;1789:2;1886:9;1873:23;1905:33;1932:5;1905:33;:::i;:::-;1957:5;2009:2;1994:18;;;;1981:32;;-1:-1:-1;;;1779:240:9:o;2024:253::-;;2133:2;2121:9;2112:7;2108:23;2104:32;2101:2;;;2154:6;2146;2139:22;2101:2;2198:9;2185:23;2217:30;2241:5;2217:30;:::i;2282:257::-;;2402:2;2390:9;2381:7;2377:23;2373:32;2370:2;;;2423:6;2415;2408:22;2370:2;2460:9;2454:16;2479:30;2503:5;2479:30;:::i;2544:474::-;;;;2700:2;2688:9;2679:7;2675:23;2671:32;2668:2;;;2721:6;2713;2706:22;2668:2;2749:42;2781:9;2749:42;:::i;:::-;2739:52;;2810:51;2857:2;2846:9;2842:18;2810:51;:::i;:::-;2800:61;;2904:2;2893:9;2889:18;2883:25;2948:10;2941:5;2937:22;2930:5;2927:33;2917:2;;2979:6;2971;2964:22;3023:194;;3146:2;3134:9;3125:7;3121:23;3117:32;3114:2;;;3167:6;3159;3152:22;3114:2;-1:-1:-1;3195:16:9;;3104:113;-1:-1:-1;3104:113:9:o;3222:259::-;;3303:5;3297:12;3330:6;3325:3;3318:19;3346:63;3402:6;3395:4;3390:3;3386:14;3379:4;3372:5;3368:16;3346:63;:::i;:::-;3463:2;3442:15;-1:-1:-1;;3438:29:9;3429:39;;;;3470:4;3425:50;;3273:208;-1:-1:-1;;3273:208:9:o;3486:274::-;;3653:6;3647:13;3669:53;3715:6;3710:3;3703:4;3695:6;3691:17;3669:53;:::i;:::-;3738:16;;;;;3623:137;-1:-1:-1;;3623:137:9:o;3765:203::-;-1:-1:-1;;;;;3929:32:9;;;;3911:51;;3899:2;3884:18;;3866:102::o;3973:274::-;-1:-1:-1;;;;;4165:32:9;;;;4147:51;;4229:2;4214:18;;4207:34;4135:2;4120:18;;4102:145::o;4252:187::-;4417:14;;4410:22;4392:41;;4380:2;4365:18;;4347:92::o;4444:221::-;;4593:2;4582:9;4575:21;4613:46;4655:2;4644:9;4640:18;4632:6;4613:46;:::i;4670:402::-;4872:2;4854:21;;;4911:2;4891:18;;;4884:30;4950:34;4945:2;4930:18;;4923:62;-1:-1:-1;;;5016:2:9;5001:18;;4994:36;5062:3;5047:19;;4844:228::o;5077:400::-;5279:2;5261:21;;;5318:2;5298:18;;;5291:30;5357:34;5352:2;5337:18;;5330:62;-1:-1:-1;;;5423:2:9;5408:18;;5401:34;5467:3;5452:19;;5251:226::o;5482:402::-;5684:2;5666:21;;;5723:2;5703:18;;;5696:30;5762:34;5757:2;5742:18;;5735:62;-1:-1:-1;;;5828:2:9;5813:18;;5806:36;5874:3;5859:19;;5656:228::o;5889:410::-;6091:2;6073:21;;;6130:2;6110:18;;;6103:30;6169:34;6164:2;6149:18;;6142:62;-1:-1:-1;;;6235:2:9;6220:18;;6213:44;6289:3;6274:19;;6063:236::o;6304:356::-;6506:2;6488:21;;;6525:18;;;6518:30;6584:34;6579:2;6564:18;;6557:62;6651:2;6636:18;;6478:182::o;6665:353::-;6867:2;6849:21;;;6906:2;6886:18;;;6879:30;6945:31;6940:2;6925:18;;6918:59;7009:2;6994:18;;6839:179::o;7023:406::-;7225:2;7207:21;;;7264:2;7244:18;;;7237:30;7303:34;7298:2;7283:18;;7276:62;-1:-1:-1;;;7369:2:9;7354:18;;7347:40;7419:3;7404:19;;7197:232::o;7434:460::-;;7665:6;7654:9;7647:25;7708:6;7703:2;7692:9;7688:18;7681:34;7780:1;7776;7771:3;7767:11;7763:19;7755:6;7751:32;7746:2;7735:9;7731:18;7724:60;7820:3;7815:2;7804:9;7800:18;7793:31;7841:47;7883:3;7872:9;7868:19;7860:6;7841:47;:::i;:::-;7833:55;7637:257;-1:-1:-1;;;;;;7637:257:9:o;7899:128::-;;7970:1;7966:6;7963:1;7960:13;7957:2;;;7976:18;;:::i;:::-;-1:-1:-1;8012:9:9;;7947:80::o;8032:217::-;;8098:1;8088:2;;-1:-1:-1;;;8123:31:9;;8177:4;8174:1;8167:15;8205:4;8130:1;8195:15;8088:2;-1:-1:-1;8234:9:9;;8078:171::o;8254:168::-;;8360:1;8356;8352:6;8348:14;8345:1;8342:21;8337:1;8330:9;8323:17;8319:45;8316:2;;;8367:18;;:::i;:::-;-1:-1:-1;8407:9:9;;8306:116::o;8427:125::-;;8495:1;8492;8489:8;8486:2;;;8500:18;;:::i;:::-;-1:-1:-1;8537:9:9;;8476:76::o;8557:258::-;8629:1;8639:113;8653:6;8650:1;8647:13;8639:113;;;8729:11;;;8723:18;8710:11;;;8703:39;8675:2;8668:10;8639:113;;;8770:6;8767:1;8764:13;8761:2;;;-1:-1:-1;;8805:1:9;8787:16;;8780:27;8610:205::o;8820:127::-;8881:10;8876:3;8872:20;8869:1;8862:31;8912:4;8909:1;8902:15;8936:4;8933:1;8926:15;8952:133;-1:-1:-1;;;;;9029:31:9;;9019:42;;9009:2;;9075:1;9072;9065:12;9090:120;9178:5;9171:13;9164:21;9157:5;9154:32;9144:2;;9200:1;9197;9190:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1071600",
								"executionCost": "1114",
								"totalCost": "1072714"
							},
							"external": {
								"executor(address)": "1325",
								"goStabilizer()": "infinite",
								"initialize(address,address,address)": "infinite",
								"openBuy()": "1101",
								"openSell()": "1123",
								"owner()": "1137",
								"renounceOwnership()": "23596",
								"setExecutor(address,bool)": "infinite",
								"setOpenBuy(bool)": "22211",
								"setOpenSell(bool)": "22193",
								"transferOwnership(address)": "infinite",
								"usc()": "1138",
								"usdc()": "1115",
								"usdc_usc_lpAddress()": "1115",
								"withdrawalERC20(address,uint256)": "infinite"
							},
							"internal": {
								"getAmountOut(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 677,
									"end": 5349,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 5349,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d152e2b969a20236d022cd70a748923817e5c217e2629d01422cb564072649a364736f6c63430008000033",
									".code": [
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "796C7BE7"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "C0C53B8B"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "C0C53B8B"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "D4A67930"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "F1EAE64A"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "796C7BE7"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "7E6F7A09"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "930ED033"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "3C03B9A4"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "3C03B9A4"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "3E413BEE"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "48C7E528"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "1E1BFF3F"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "29E9A524"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "3011D3D5"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 677,
											"end": 5349,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 963,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 963,
											"end": 981,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 963,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 963,
											"end": 981,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 963,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 938,
											"end": 957,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 938,
											"end": 957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 938,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 938,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 938,
											"end": 957,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 4874,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2131,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2131,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2131,
											"end": 4874,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 932,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 899,
											"end": 932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 899,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 899,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 899,
											"end": 932,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1924,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1952,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1944,
											"end": 1970,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1821,
											"end": 1998,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5161,
											"end": 5165,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5177,
											"end": 5184,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5101,
											"end": 5220,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 963,
											"end": 981,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 963,
											"end": 981,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 963,
											"end": 981,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 963,
											"end": 981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 963,
											"end": 981,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5303,
											"end": 5311,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5319,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5347,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 938,
											"end": 957,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 938,
											"end": 957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 938,
											"end": 957,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 938,
											"end": 957,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 938,
											"end": 957,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 938,
											"end": 957,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 938,
											"end": 957,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 853,
											"end": 893,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 853,
											"end": 893,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2131,
											"end": 4874,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2131,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2065,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2190,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2054,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2046,
											"end": 2066,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2038,
											"end": 2107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2203,
											"end": 2219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2237,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2243,
											"end": 2311,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2311,
											"name": "PUSH",
											"source": 8,
											"value": "902F1AC"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2243,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2202,
											"end": 2313,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2202,
											"end": 2313,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2313,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2313,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2337,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2340,
											"end": 2381,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2381,
											"name": "PUSH",
											"source": 8,
											"value": "DFE1681"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 2340,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2530,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2527,
											"end": 2530,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2383,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2323,
											"end": 2383,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2530,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2530,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2509,
											"end": 2601,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2590,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2600,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2509,
											"end": 2601,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2601,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2509,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2547,
											"end": 2555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2565,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2601,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2509,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2601,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2601,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2467,
											"end": 2601,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2601,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2612,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2629,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2632,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 2707,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2612,
											"end": 2707,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2733,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2768,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 2736,
											"end": 2768,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2736,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2798,
											"end": 2811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2717,
											"end": 2788,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2814,
											"end": 2823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 2832,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2814,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2814,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2837,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2814,
											"end": 2847,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2814,
											"end": 2847,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2814,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2798,
											"end": 2847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2869,
											"end": 2873,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2873,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2877,
											"end": 2885,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2877,
											"end": 2885,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2877,
											"end": 2885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2885,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2877,
											"end": 2885,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2877,
											"end": 2885,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 3652,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2857,
											"end": 3652,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2953,
											"end": 2954,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2924,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 2924,
											"end": 2933,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2938,
											"end": 2946,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 2924,
											"end": 2947,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2923,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2985,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2982,
											"end": 2985,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C10F19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 2955,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 2955,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2982,
											"end": 2985,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2985,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 2992,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 2969,
											"end": 2992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3005,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 2955,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 2955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3035,
											"end": 3149,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3106,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3135,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3035,
											"end": 3149,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3035,
											"end": 3149,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 3035,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3213,
											"end": 3224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3252,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3183,
											"end": 3293,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3183,
											"end": 3293,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3183,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3373,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3373,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3369,
											"end": 3372,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3373,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3351,
											"end": 3457,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 3351,
											"end": 3457,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3351,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3401,
											"end": 3402,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3351,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 3351,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3615,
											"end": 3627,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22C0D9F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3457,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3457,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3308,
											"end": 3457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3457,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "PUSH",
											"source": 8,
											"value": "22C0D9F"
										},
										{
											"begin": 3471,
											"end": 3510,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3457,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3457,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3596,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3596,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 3652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 3652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 3652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 3652,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 3652,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2857,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3678,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3678,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3689,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3689,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3666,
											"end": 3689,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3689,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3682,
											"end": 3689,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3689,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3682,
											"end": 3689,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3682,
											"end": 3689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3666,
											"end": 3689,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3666,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 4847,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3662,
											"end": 4847,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 3756,
											"end": 3757,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3727,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 3727,
											"end": 3735,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3740,
											"end": 3749,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3727,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 3727,
											"end": 3750,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3726,
											"end": 3758,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 3726,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3772,
											"end": 3798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3834,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 3801,
											"end": 3834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3860,
											"end": 3864,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3860,
											"end": 3864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3801,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3879,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3893,
											"end": 3909,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3937,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3958,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 4082,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3923,
											"end": 4082,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4007,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 3923,
											"end": 4082,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 4082,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3923,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4057,
											"end": 4067,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 4082,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 3923,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4112,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 4095,
											"end": 4837,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 4132,
											"end": 4256,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4150,
											"end": 4154,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4238,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4132,
											"end": 4256,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4132,
											"end": 4256,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 4132,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 4328,
											"end": 4336,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4358,
											"end": 4367,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 4389,
											"end": 4399,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 4294,
											"end": 4417,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4417,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 4294,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4521,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4517,
											"end": 4521,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4274,
											"end": 4417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4479,
											"end": 4522,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4522,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4522,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4521,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4522,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 4479,
											"end": 4614,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4592,
											"end": 4601,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4611,
											"end": 4612,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4479,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 4479,
											"end": 4614,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4614,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 4479,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4567,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4614,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 4479,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4792,
											"end": 4804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22C0D9F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4436,
											"end": 4614,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4436,
											"end": 4614,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4436,
											"end": 4614,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4436,
											"end": 4614,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4671,
											"name": "PUSH",
											"source": 8,
											"value": "22C0D9F"
										},
										{
											"begin": 4632,
											"end": 4671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4436,
											"end": 4614,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4436,
											"end": 4614,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4436,
											"end": 4614,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4436,
											"end": 4614,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4632,
											"end": 4822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4837,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4837,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4837,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4095,
											"end": 4837,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 4095,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 4847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3662,
											"end": 4847,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3662,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 4874,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 4874,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 932,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 899,
											"end": 932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 899,
											"end": 932,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 899,
											"end": 932,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 899,
											"end": 932,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 899,
											"end": 932,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 899,
											"end": 932,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1302,
											"end": 1387,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4989,
											"end": 4993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5009,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5060,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5062,
											"end": 5066,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 5009,
											"end": 5067,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5009,
											"end": 5067,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5009,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5084,
											"end": 5088,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 5095,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1609,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1609,
											"end": 1625,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1609,
											"end": 1625,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1609,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1717,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1731,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1739,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1752,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1759,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1769,
											"end": 1783,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1808,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1808,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1808,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1793,
											"end": 1808,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 797,
											"end": 863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1815,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1033,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1525,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1525,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1506,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2264,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2366,
											"end": 2374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2347,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2382,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 955,
											"end": 965,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 876,
											"end": 972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 876,
											"end": 972,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2644,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2716,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2723,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3546,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3558,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3935,
											"end": 3936,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3932,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3119,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3207,
											"end": 3208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 888,
											"end": 893,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 943,
											"end": 945,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 947,
											"end": 952,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 895,
											"end": 953,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 868,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 868,
											"end": 954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 745,
											"end": 961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1040,
											"end": 1431,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1040,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1172,
											"end": 1189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1189,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1227,
											"end": 1235,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1240,
											"end": 1244,
											"name": "PUSH",
											"source": 8,
											"value": "26F2"
										},
										{
											"begin": 1227,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1245,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1255,
											"end": 1272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1201,
											"end": 1245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1295,
											"end": 1305,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1275,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1316,
											"end": 1335,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1363,
											"end": 1378,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "2710"
										},
										{
											"begin": 1338,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1338,
											"end": 1358,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1358,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1338,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1338,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1316,
											"end": 1379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1401,
											"end": 1410,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1389,
											"end": 1424,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1431,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1431,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1045,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1045,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1081,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1081,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 988,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 3306,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3775,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3762,
											"end": 3789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 3762,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3736,
											"end": 3831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3841,
											"end": 4017,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3940,
											"end": 3950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 3929,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 3921,
											"end": 4006,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2752,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 801,
											"end": 815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 797,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 797,
											"end": 863,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 847,
											"end": 852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 831,
											"end": 852,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 852,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 807,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1120,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 539,
											"end": 552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 539,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 557,
											"end": 569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 557,
											"end": 569,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 556,
											"end": 569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 539,
											"end": 569,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 539,
											"end": 569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 531,
											"end": 620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 631,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 654,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 654,
											"end": 667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 711,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 711,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 711,
											"end": 731,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 727,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 764,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 764,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 677,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 677,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1206,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 1206,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1187,
											"end": 1219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3723,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3740,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 3689,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3741,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3525,
											"end": 3748,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 4612,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4777,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4834,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 4801,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 4911,
											"end": 4917,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 4892,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4978,
											"end": 5001,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5011,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5005,
											"end": 5016,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5024,
											"end": 5029,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 5036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 5070,
											"end": 5077,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5079,
											"end": 5089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 5103,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5053,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 5053,
											"end": 5104,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 1159,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 6275,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6433,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6449,
											"end": 6456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6479,
											"end": 6489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 6472,
											"end": 6489,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6445,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6607,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6590,
											"end": 6611,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 6586,
											"end": 6951,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6784,
											"end": 6794,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6778,
											"end": 6795,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6859,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6823,
											"end": 6842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 6733,
											"end": 6878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6923,
											"end": 6935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 204,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 14,
											"end": 204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 95,
											"end": 108,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 95,
											"end": 108,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 137,
											"end": 179,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 137,
											"end": 179,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 127,
											"end": 180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 127,
											"end": 180,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 117,
											"end": 119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 117,
											"end": 119,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 192,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 184,
											"end": 196,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 209,
											"end": 468,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 209,
											"end": 468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 209,
											"end": 468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 289,
											"end": 291,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 289,
											"end": 291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 289,
											"end": 291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 342,
											"end": 348,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 327,
											"end": 349,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 289,
											"end": 291,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 289,
											"end": 291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 386,
											"end": 395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 373,
											"end": 396,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 405,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 432,
											"end": 437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 405,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 405,
											"end": 438,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 736,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 473,
											"end": 736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 575,
											"end": 582,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 571,
											"end": 594,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 567,
											"end": 599,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 564,
											"end": 566,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 564,
											"end": 566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 564,
											"end": 566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 617,
											"end": 623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 602,
											"end": 624,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 564,
											"end": 566,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 564,
											"end": 566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 654,
											"end": 663,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 648,
											"end": 664,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 673,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 700,
											"end": 705,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 673,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 673,
											"end": 706,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 1286,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 741,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 741,
											"end": 1286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 1286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 741,
											"end": 1286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 889,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 875,
											"end": 884,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 866,
											"end": 873,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 862,
											"end": 885,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 858,
											"end": 890,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 855,
											"end": 857,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 855,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 855,
											"end": 857,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 900,
											"end": 906,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 893,
											"end": 915,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 855,
											"end": 857,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 855,
											"end": 857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 952,
											"end": 961,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 939,
											"end": 962,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 971,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 998,
											"end": 1003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 971,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 971,
											"end": 1004,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 971,
											"end": 1004,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 971,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1028,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1080,
											"end": 1082,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1065,
											"end": 1083,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1084,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1093,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1052,
											"end": 1084,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1093,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 1093,
											"end": 1128,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1093,
											"end": 1128,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 1093,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1154,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1206,
											"end": 1208,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1209,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1178,
											"end": 1210,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1178,
											"end": 1210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 1219,
											"end": 1254,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1219,
											"end": 1254,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 1219,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1273,
											"end": 1280,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1280,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1280,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 845,
											"end": 1286,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 845,
											"end": 1286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 845,
											"end": 1286,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 845,
											"end": 1286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 845,
											"end": 1286,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 845,
											"end": 1286,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1291,
											"end": 1687,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1291,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1291,
											"end": 1687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1417,
											"end": 1419,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1403,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1392,
											"end": 1415,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1420,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1385,
											"end": 1387,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1385,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1385,
											"end": 1387,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1385,
											"end": 1387,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 1385,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1482,
											"end": 1491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1469,
											"end": 1492,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1528,
											"end": 1533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 1501,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1610,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1582,
											"end": 1614,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 1582,
											"end": 1614,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 1623,
											"end": 1655,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1623,
											"end": 1655,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 1623,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1681,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1687,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1687,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1375,
											"end": 1687,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 2019,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1692,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 2019,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 2019,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1807,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1792,
											"end": 1824,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1789,
											"end": 1791,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1789,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1789,
											"end": 1791,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1827,
											"end": 1849,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1789,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1789,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1895,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1896,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1932,
											"end": 1937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1905,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 1905,
											"end": 1938,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1905,
											"end": 1938,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1905,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 2013,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1779,
											"end": 2019,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2024,
											"end": 2277,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2024,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2277,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2103,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 2101,
											"end": 2103,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2160,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2161,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2103,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 2101,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2198,
											"end": 2207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2208,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2241,
											"end": 2246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2217,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2217,
											"end": 2247,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2282,
											"end": 2539,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2282,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2404,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2399,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2388,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2400,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2373,
											"end": 2405,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2470,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2479,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2503,
											"end": 2508,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2479,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2479,
											"end": 2509,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2544,
											"end": 3018,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2544,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2544,
											"end": 3018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 3018,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2544,
											"end": 3018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2688,
											"end": 2697,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2679,
											"end": 2686,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2675,
											"end": 2698,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2671,
											"end": 2703,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2721,
											"end": 2727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2706,
											"end": 2728,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 2668,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 2781,
											"end": 2790,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 2749,
											"end": 2791,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2749,
											"end": 2791,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 2749,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2791,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2739,
											"end": 2791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2857,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 2810,
											"end": 2861,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2810,
											"end": 2861,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 2810,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2800,
											"end": 2861,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2800,
											"end": 2861,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2906,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2908,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2958,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2941,
											"end": 2946,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 2959,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2960,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2971,
											"end": 2977,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3217,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3023,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3132,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3144,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3149,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3116,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3114,
											"end": 3116,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3174,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3114,
											"end": 3116,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 3114,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3217,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3104,
											"end": 3217,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3222,
											"end": 3481,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 3222,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3481,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3309,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3328,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 3402,
											"end": 3408,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3399,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3393,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3372,
											"end": 3377,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3346,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3346,
											"end": 3409,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3346,
											"end": 3409,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 3346,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3465,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3442,
											"end": 3457,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3468,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3468,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3468,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3468,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3470,
											"end": 3474,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3475,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3273,
											"end": 3481,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3486,
											"end": 3760,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3486,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3659,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3647,
											"end": 3660,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3669,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3715,
											"end": 3721,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3710,
											"end": 3713,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3703,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3695,
											"end": 3701,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 3708,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3669,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 3669,
											"end": 3722,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3669,
											"end": 3722,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 3669,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3754,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3760,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3623,
											"end": 3760,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3765,
											"end": 3968,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3765,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3929,
											"end": 3961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3929,
											"end": 3961,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3911,
											"end": 3962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3899,
											"end": 3901,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3866,
											"end": 3968,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3973,
											"end": 4247,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3973,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4165,
											"end": 4197,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4197,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4197,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4198,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4229,
											"end": 4231,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4135,
											"end": 4137,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4120,
											"end": 4138,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4247,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4252,
											"end": 4439,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4252,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4431,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4410,
											"end": 4432,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4433,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4382,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4439,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4665,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 4444,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4595,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4596,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4613,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 4655,
											"end": 4657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4644,
											"end": 4653,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4613,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 4613,
											"end": 4659,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 5072,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4670,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4874,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4913,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4891,
											"end": 4909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4891,
											"end": 4909,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4891,
											"end": 4909,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4884,
											"end": 4914,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4984,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4945,
											"end": 4947,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4930,
											"end": 4948,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4930,
											"end": 4948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4985,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5016,
											"end": 5018,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5001,
											"end": 5019,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 5030,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5047,
											"end": 5066,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5047,
											"end": 5066,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4844,
											"end": 5072,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5077,
											"end": 5477,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 5077,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5261,
											"end": 5282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5320,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5298,
											"end": 5316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5298,
											"end": 5316,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5321,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5357,
											"end": 5391,
											"name": "PUSH",
											"source": 9,
											"value": "6578656375746F723A2063616C6C6572206973206E6F74207468652065786563"
										},
										{
											"begin": 5352,
											"end": 5354,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5337,
											"end": 5355,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5337,
											"end": 5355,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5392,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3ABA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5423,
											"end": 5425,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5408,
											"end": 5426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5401,
											"end": 5435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5470,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5452,
											"end": 5471,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5452,
											"end": 5471,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5251,
											"end": 5477,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5482,
											"end": 5884,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 5482,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5686,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5687,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5666,
											"end": 5687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5666,
											"end": 5687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5723,
											"end": 5725,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5703,
											"end": 5721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5726,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5762,
											"end": 5796,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 5757,
											"end": 5759,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5742,
											"end": 5760,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5735,
											"end": 5797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5828,
											"end": 5830,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5813,
											"end": 5831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5813,
											"end": 5831,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5806,
											"end": 5842,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5874,
											"end": 5877,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5859,
											"end": 5878,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5884,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5889,
											"end": 6299,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 5889,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6091,
											"end": 6093,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6073,
											"end": 6094,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6073,
											"end": 6094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6073,
											"end": 6094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "PUSH",
											"source": 9,
											"value": "2E"
										},
										{
											"begin": 6110,
											"end": 6128,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6110,
											"end": 6128,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6110,
											"end": 6128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6133,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6169,
											"end": 6203,
											"name": "PUSH",
											"source": 9,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 6164,
											"end": 6166,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6142,
											"end": 6204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6235,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6220,
											"end": 6238,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6220,
											"end": 6238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6213,
											"end": 6257,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6289,
											"end": 6292,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6274,
											"end": 6293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6274,
											"end": 6293,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6063,
											"end": 6299,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6304,
											"end": 6660,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 6304,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6508,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6488,
											"end": 6509,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6488,
											"end": 6509,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6488,
											"end": 6509,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6548,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6584,
											"end": 6618,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6579,
											"end": 6581,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6557,
											"end": 6619,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6651,
											"end": 6653,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6636,
											"end": 6654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6660,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6665,
											"end": 7018,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6665,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6867,
											"end": 6869,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6849,
											"end": 6870,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6849,
											"end": 6870,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6886,
											"end": 6904,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6879,
											"end": 6909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6976,
											"name": "PUSH",
											"source": 9,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 6940,
											"end": 6942,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6925,
											"end": 6943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6918,
											"end": 6977,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7011,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6839,
											"end": 7018,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7023,
											"end": 7429,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7023,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7207,
											"end": 7228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7207,
											"end": 7228,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 7244,
											"end": 7262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7244,
											"end": 7262,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7244,
											"end": 7262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7237,
											"end": 7267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7303,
											"end": 7337,
											"name": "PUSH",
											"source": 9,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 7298,
											"end": 7300,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7276,
											"end": 7338,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7354,
											"end": 7372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7419,
											"end": 7422,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7404,
											"end": 7423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7404,
											"end": 7423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7197,
											"end": 7429,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7434,
											"end": 7894,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 7434,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7434,
											"end": 7894,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7671,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7654,
											"end": 7663,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7647,
											"end": 7672,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7703,
											"end": 7705,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7692,
											"end": 7701,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7688,
											"end": 7706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7681,
											"end": 7715,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7781,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7776,
											"end": 7777,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7771,
											"end": 7774,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 7767,
											"end": 7778,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7763,
											"end": 7782,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7755,
											"end": 7761,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7783,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7746,
											"end": 7748,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7735,
											"end": 7744,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7724,
											"end": 7784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7820,
											"end": 7823,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7815,
											"end": 7817,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7804,
											"end": 7813,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7800,
											"end": 7818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 7883,
											"end": 7886,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7872,
											"end": 7881,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7868,
											"end": 7887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7860,
											"end": 7866,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7841,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 7841,
											"end": 7888,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7841,
											"end": 7888,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 7841,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7833,
											"end": 7888,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 7637,
											"end": 7894,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7637,
											"end": 7894,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7899,
											"end": 8027,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 7899,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 8027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 7972,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 7973,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7959,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7957,
											"end": 7959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 7957,
											"end": 7959,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 7976,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7976,
											"end": 7994,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7976,
											"end": 7994,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 7976,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8012,
											"end": 8021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8012,
											"end": 8021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7947,
											"end": 8027,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8032,
											"end": 8249,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 8032,
											"end": 8249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8032,
											"end": 8249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8088,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 8088,
											"end": 8090,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8123,
											"end": 8154,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8154,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8177,
											"end": 8181,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8174,
											"end": 8175,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8167,
											"end": 8182,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8205,
											"end": 8209,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8130,
											"end": 8131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8195,
											"end": 8210,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8088,
											"end": 8090,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 8088,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8234,
											"end": 8243,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8234,
											"end": 8243,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8249,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8254,
											"end": 8422,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 8254,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8360,
											"end": 8361,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8356,
											"end": 8357,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8362,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8346,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8342,
											"end": 8363,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8339,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8323,
											"end": 8340,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8319,
											"end": 8364,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8316,
											"end": 8318,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8316,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 8316,
											"end": 8318,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8407,
											"end": 8416,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8422,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8427,
											"end": 8552,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 8427,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8552,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8493,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8497,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8486,
											"end": 8488,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8486,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 8486,
											"end": 8488,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8500,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 8500,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 8500,
											"end": 8518,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8500,
											"end": 8518,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 8500,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8537,
											"end": 8546,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8537,
											"end": 8546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8552,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8557,
											"end": 8815,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 8557,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8629,
											"end": 8630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8639,
											"end": 8752,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 8639,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8653,
											"end": 8659,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8647,
											"end": 8660,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8639,
											"end": 8752,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8639,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 8639,
											"end": 8752,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8740,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8740,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8729,
											"end": 8740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8710,
											"end": 8721,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8710,
											"end": 8721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8710,
											"end": 8721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8675,
											"end": 8677,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8668,
											"end": 8678,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8639,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 8639,
											"end": 8752,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8639,
											"end": 8752,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 8639,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 8776,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8767,
											"end": 8768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8764,
											"end": 8777,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8763,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 8761,
											"end": 8763,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8805,
											"end": 8806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8787,
											"end": 8803,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8787,
											"end": 8803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8780,
											"end": 8807,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8610,
											"end": 8815,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8820,
											"end": 8947,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 8820,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8891,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 8876,
											"end": 8879,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8869,
											"end": 8870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8862,
											"end": 8893,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8912,
											"end": 8916,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8902,
											"end": 8917,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8936,
											"end": 8940,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8933,
											"end": 8934,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8926,
											"end": 8941,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 9085,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 8952,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9029,
											"end": 9060,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9029,
											"end": 9060,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9061,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9061,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9009,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 9009,
											"end": 9011,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9075,
											"end": 9076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9072,
											"end": 9073,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9077,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9210,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9090,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9178,
											"end": 9183,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9171,
											"end": 9184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9164,
											"end": 9185,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9154,
											"end": 9186,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9144,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 9144,
											"end": 9146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9200,
											"end": 9201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9197,
											"end": 9198,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9190,
											"end": 9202,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"executor(address)": "48c7e528",
							"goStabilizer()": "796c7be7",
							"initialize(address,address,address)": "c0c53b8b",
							"openBuy()": "d4a67930",
							"openSell()": "f1eae64a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setExecutor(address,bool)": "1e1bff3f",
							"setOpenBuy(bool)": "29e9a524",
							"setOpenSell(bool)": "3c03b9a4",
							"transferOwnership(address)": "f2fde38b",
							"usc()": "3011d3d5",
							"usdc()": "3e413bee",
							"usdc_usc_lpAddress()": "7e6f7a09",
							"withdrawalERC20(address,uint256)": "930ed033"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goStabilizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc_usc_lpAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usc\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_type\",\"type\":\"bool\"}],\"name\":\"setExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_type\",\"type\":\"bool\"}],\"name\":\"setOpenBuy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_type\",\"type\":\"bool\"}],\"name\":\"setOpenSell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc_usc_lpAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"withdrawalERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stabilizer.sol\":\"stabilizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://272fdc13ea6d62470f1009a1adf0d28b67be2c75415e9f24eee38164dd69fb04\",\"dweb:/ipfs/QmfZDcxQEFdAi1AwMTHozZJrwFoUCEZnbcJcRhqmahuTBR\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x5f13da6a5f023d6e9b3e48a3690458bfceea5872c0e3ddf1b2b528133f87a992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f10cded435297e67d3720adb22790ee7f8ab7f5d977a815e87f33560800819c\",\"dweb:/ipfs/QmeMx1jpSb66jrT1P184kTuh8p9FSqbYUXoVbXNdnJPqkf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xb34b8dc5fbc20d8d7e5ed2fd1a0ed87e1fb024d3ae0c61fd4368565ce733aa7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ff7fe6e13cf851da3cdc27c7c4c58249ca6a53765f1bb40a5b8ec87b1b84599\",\"dweb:/ipfs/QmZ7JzzhpEMBgk7p9TVzwXDduvJJQtZhQwF3R1vZ9EdgMP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x7090f66700fbb4955abf72ba8e06e4a1eafb5bae1423032102dcbb2172da5543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3c830201b945b96b0f7db921aeed52a7a40382ddab6466b5a97ecdd5a1571a\",\"dweb:/ipfs/QmcMWcz6DveTkqXE3EWwf3A9xPXhdUUZTXgKoSvzFyeYe9\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xf308459c5ea0cde035b8c3b3d9144086a2c777c46dbe401f634e75dea1aba1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51755c6934703b61e7edb7d3edef985f429be6bef384b15e1b616ea65176934\",\"dweb:/ipfs/QmQVb4hBJcTMthp5hJquUy5tPsDwgiKQ8nGExckR75G88u\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2125524ea896700181f25ee543d35a980b9477eaf13fd1878ae24be5dcc3ba75\",\"dweb:/ipfs/QmXw9DTW1t1UiTZanfESSJ6jm2xVSQpsdsdKnBTYeBnwqh\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x23ee0c2d7bcce5d09d40f3a14c91f29000d3a83b8a9c26440cd1b3748a93ea47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f7975f651c46b43acd346786d7cf5f78027d21a2dd694377b271ba97209ada\",\"dweb:/ipfs/QmNS7ppgMivJCJgu6JzEN8MvjWM7ctsDREcNyHTcZzYXRG\"]},\"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x08f9a63b34855eec941be8d36a04424f1a1725a2c030373fcef3afeb480ca385\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://174219f9a6c90b4d0133475da5333403aea21ba49d303f3ba28cb4e9a2a0141e\",\"dweb:/ipfs/QmdDy25xsAfWxaKnRbGJys7d9BaPhpbGorMQCY4Au2auZL\"]},\"contracts/stabilizer.sol\":{\"keccak256\":\"0x941eaa1f02f8c25f75ae2cf698eeb4f454dc9ba115dd7fad2a0c83c4f0e55640\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df12de24236f41479bf23e0a4b4b53b7bbbfc2cef411736acec10bdc3f38c14e\",\"dweb:/ipfs/QmWAevJQyoD4cPNu6QQieRsYkimbiMtGsjWxQ48D45R9vN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 133,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 760,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 124,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1353,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "executor",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1355,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "usdc_usc_lpAddress",
								"offset": 0,
								"slot": "102",
								"type": "t_address"
							},
							{
								"astId": 1357,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "usdc",
								"offset": 0,
								"slot": "103",
								"type": "t_address"
							},
							{
								"astId": 1359,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "usc",
								"offset": 0,
								"slot": "104",
								"type": "t_address"
							},
							{
								"astId": 1361,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "openBuy",
								"offset": 20,
								"slot": "104",
								"type": "t_bool"
							},
							{
								"astId": 1363,
								"contract": "contracts/stabilizer.sol:stabilizer",
								"label": "openSell",
								"offset": 21,
								"slot": "104",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							761
						],
						"Initializable": [
							170
						],
						"OwnableUpgradeable": [
							125
						]
					},
					"id": 126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 762,
							"src": "112:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 126,
							"sourceUnit": 171,
							"src": "154:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "733:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "733:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 761,
										"src": "748:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "748:18:0"
								}
							],
							"contractDependencies": [
								170,
								761
							],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "198:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 125,
							"linearizedBaseContracts": [
								125,
								761,
								170
							],
							"name": "OwnableUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "773:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "829:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "860:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:57:0"
									},
									"src": "802:84:0"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "1035:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "1045:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1045:26:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1081:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1081:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "1081:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "892:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"modifierName": {
												"id": 19,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1023:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1023:11:0"
										}
									],
									"name": "__Ownable_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:0:0"
									},
									"scope": 125,
									"src": "988:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 35,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "1206:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1206:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 34,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1187:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1187:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1187:32:0"
											}
										]
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 32,
											"modifierName": {
												"id": 31,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1165:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1165:11:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 125,
									"src": "1120:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1357:30:0",
										"statements": [
											{
												"expression": {
													"id": 46,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 45,
												"id": 47,
												"nodeType": "Return",
												"src": "1367:13:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1232:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1348:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:9:0"
									},
									"scope": 125,
									"src": "1302:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "1496:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 53,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "1514:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1514:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 55,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "1525:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1525:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1514:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1506:68:0"
											},
											{
												"id": 61,
												"nodeType": "PlaceholderStatement",
												"src": "1584:1:0"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1393:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 63,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1493:2:0"
									},
									"src": "1475:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1988:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2025:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2017:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 70,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2017:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 69,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1998:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1998:30:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "1598:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 67,
											"modifierName": {
												"id": 66,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1960:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 125,
									"src": "1934:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2254:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 86,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2272:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2292:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2284:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 87,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2284:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2284:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2272:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2296:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "2264:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2366:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2347:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2347:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "2347:28:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2041:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 83,
											"modifierName": {
												"id": 82,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "2244:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2244:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2211:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:18:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2254:0:0"
									},
									"scope": 125,
									"src": "2184:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "2599:124:0",
										"statements": [
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "2609:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 106,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2609:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 109,
												"initialValue": {
													"id": 108,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2628:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2609:25:0"
											},
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 110,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2644:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 111,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2653:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2644:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2644:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 115,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "2697:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2707:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 114,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2676:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2676:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "EmitStatement",
												"src": "2671:45:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2388:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "2564:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2599:0:0"
									},
									"scope": 125,
									"src": "2536:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 125,
									"src": "2728:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 121,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2728:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 123,
										"length": {
											"hexValue": "3439",
											"id": 122,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2736:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "2728:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 126,
							"src": "693:2063:0"
						}
					],
					"src": "87:2670:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							170
						]
					},
					"id": 171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "161:73:1",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 130,
									"mutability": "mutable",
									"name": "_initialized",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "239:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "239:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "271:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 133,
									"mutability": "mutable",
									"name": "_initializing",
									"nodeType": "VariableDeclaration",
									"scope": 170,
									"src": "367:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 132,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "367:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "521:348:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "539:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "556:13:1",
																"subExpression": {
																	"id": 138,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "557:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "539:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "571:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "531:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "531:89:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "531:89:1"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"scope": 168,
														"src": "631:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 144,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "631:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "653:14:1",
													"subExpression": {
														"id": 146,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "654:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "631:36:1"
											},
											{
												"condition": {
													"id": 149,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "681:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "677:98:1",
												"trueBody": {
													"id": 158,
													"nodeType": "Block",
													"src": "697:78:1",
													"statements": [
														{
															"expression": {
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 150,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "711:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "727:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "711:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 153,
															"nodeType": "ExpressionStatement",
															"src": "711:20:1"
														},
														{
															"expression": {
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 154,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "745:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "760:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "745:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 157,
															"nodeType": "ExpressionStatement",
															"src": "745:19:1"
														}
													]
												}
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "785:1:1"
											},
											{
												"condition": {
													"id": 161,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "801:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "IfStatement",
												"src": "797:66:1",
												"trueBody": {
													"id": 166,
													"nodeType": "Block",
													"src": "817:46:1",
													"statements": [
														{
															"expression": {
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 162,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "831:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "847:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "831:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 165,
															"nodeType": "ExpressionStatement",
															"src": "831:21:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "400:93:1",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 169,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:2:1"
									},
									"src": "498:371:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 171,
							"src": "123:748:1"
						}
					],
					"src": "98:774:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							248
						]
					},
					"id": 249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 172,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 173,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 248,
							"linearizedBaseContracts": [
								248
							],
							"name": "IERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "221:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "312:2:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "338:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:9:2"
									},
									"scope": 248,
									"src": "292:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "353:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "449:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:17:2"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "489:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:9:2"
									},
									"scope": 248,
									"src": "430:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "504:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "736:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "755:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "735:35:2"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "789:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "789:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:6:2"
									},
									"scope": 248,
									"src": "718:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "801:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1089:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1104:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:32:2"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1144:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:9:2"
									},
									"scope": 248,
									"src": "1070:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "1159:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1823:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1840:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:33:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1874:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1874:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:6:2"
									},
									"scope": 248,
									"src": "1806:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "1886:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2218:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2242:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2269:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:81:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2308:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:6:2"
									},
									"scope": 248,
									"src": "2187:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2320:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 238,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2498:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2520:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2520:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2540:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2497:57:2"
									},
									"src": "2483:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2561:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 247,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2729:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2752:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2752:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "2777:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:63:2"
									},
									"src": "2714:78:2"
								}
							],
							"scope": 249,
							"src": "187:2607:2"
						}
					],
					"src": "91:2704:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						],
						"IERC20Upgradeable": [
							248
						],
						"SafeERC20Upgradeable": [
							472
						]
					},
					"id": 473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 250,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 251,
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 249,
							"src": "125:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../../utils/AddressUpgradeable.sol",
							"id": 252,
							"nodeType": "ImportDirective",
							"scope": 473,
							"sourceUnit": 718,
							"src": "160:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "209:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 472,
							"linearizedBaseContracts": [
								472
							],
							"name": "SafeERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 256,
									"libraryName": {
										"id": 254,
										"name": "AddressUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 717,
										"src": "708:18:3"
									},
									"nodeType": "UsingForDirective",
									"src": "702:37:3",
									"typeName": {
										"id": 255,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "858:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 267,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "888:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 270,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "918:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 197,
																		"src": "918:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "918:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 273,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "943:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 274,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "947:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 268,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "895:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "895:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "895:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 266,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "868:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "868:86:3"
											}
										]
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "776:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 257,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "776:17:3"
													},
													"referencedDeclaration": 248,
													"src": "776:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "809:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "829:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:82:3"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:3"
									},
									"scope": 472,
									"src": "745:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1106:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1136:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 295,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1166:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 229,
																		"src": "1166:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1166:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 298,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "1195:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 299,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1201:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 300,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "1205:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 293,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1143:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1143:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1143:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 291,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1116:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "1116:96:3"
											}
										]
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1002:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 280,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1002:17:3"
													},
													"referencedDeclaration": 248,
													"src": "1002:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1035:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1057:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1077:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1077:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:104:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:0:3"
									},
									"scope": 472,
									"src": "967:252:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1596:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "1845:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1854:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1845:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1844:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 325,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1885:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																								"typeString": "library SafeERC20Upgradeable"
																							}
																						],
																						"id": 324,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1877:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 323,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1877:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1877:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 327,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "1892:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 321,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "1861:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 207,
																				"src": "1861:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1861:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1904:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1861:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1860:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1844:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1920:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1823:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1823:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "1823:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "2016:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 340,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 309,
																			"src": "2046:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2046:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2046:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 343,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "2070:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "2079:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 338,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2023:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2023:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2023:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 336,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "1996:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1996:90:3"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "1225:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1509:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 308,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 307,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "1509:17:3"
													},
													"referencedDeclaration": 248,
													"src": "1509:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1542:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:87:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:3"
									},
									"scope": 472,
									"src": "1479:614:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "2226:194:3",
										"statements": [
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 384,
														"src": "2236:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2236:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 365,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2283:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																			"typeString": "library SafeERC20Upgradeable"
																		}
																	],
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2275:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 363,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2275:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2275:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 367,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "2290:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 361,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "2259:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																	"typeString": "contract IERC20Upgradeable"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 207,
															"src": "2259:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 369,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2301:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2259:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2236:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "2336:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 376,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "2366:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																				"typeString": "contract IERC20Upgradeable"
																			}
																		},
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "2366:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2366:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 379,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2390:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 380,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "2399:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 374,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2343:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2343:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2343:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 372,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2316:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20Upgradeable,bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "2316:97:3"
											}
										]
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2139:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 350,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "2139:17:3"
													},
													"referencedDeclaration": 248,
													"src": "2139:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2172:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2197:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:87:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:3"
									},
									"scope": 472,
									"src": "2099:321:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2553:370:3",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "2563:354:3",
												"statements": [
													{
														"assignments": [
															396
														],
														"declarations": [
															{
																"constant": false,
																"id": 396,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2587:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 395,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2587:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 405,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 401,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2634:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20Upgradeable_$472",
																				"typeString": "library SafeERC20Upgradeable"
																			}
																		],
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2626:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 399,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2626:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2626:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 403,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 397,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2610:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 207,
																"src": "2610:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2610:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2587:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 407,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "2671:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 408,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2687:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2671:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2694:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 406,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2663:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 412,
														"nodeType": "ExpressionStatement",
														"src": "2663:75:3"
													},
													{
														"assignments": [
															414
														],
														"declarations": [
															{
																"constant": false,
																"id": 414,
																"mutability": "mutable",
																"name": "newAllowance",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "2752:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 413,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2752:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 418,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "2775:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 416,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "2790:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2775:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2752:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 420,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2829:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 423,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "2859:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 217,
																				"src": "2859:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2859:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 426,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "2883:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 427,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 414,
																			"src": "2892:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 421,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2836:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2836:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2836:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 419,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "2809:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20Upgradeable,bytes memory)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2809:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "2809:97:3"
													}
												]
											}
										]
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2466:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 386,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "2466:17:3"
													},
													"referencedDeclaration": 248,
													"src": "2466:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2499:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2524:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:87:3"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2553:0:3"
									},
									"scope": 472,
									"src": "2426:497:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3387:636:3",
										"statements": [
											{
												"assignments": [
													443
												],
												"declarations": [
													{
														"constant": false,
														"id": 443,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 470,
														"src": "3736:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 442,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3736:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"arguments": [
														{
															"id": 449,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "3790:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3796:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 446,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "3770:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																		"typeString": "contract IERC20Upgradeable"
																	}
																],
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3762:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 444,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3762:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3762:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 563,
														"src": "3762:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3762:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3736:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 453,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3845:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3845:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3865:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3845:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 469,
												"nodeType": "IfStatement",
												"src": "3841:176:3",
												"trueBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "3868:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 460,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 443,
																				"src": "3940:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3953:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 461,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3953:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 463,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3952:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 458,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3929:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3929:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3929:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3961:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 457,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3921:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3921:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "3921:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2929:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3335:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
													"typeString": "contract IERC20Upgradeable"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20Upgradeable",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 248,
														"src": "3335:17:3"
													},
													"referencedDeclaration": 248,
													"src": "3335:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3360:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3360:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3334:44:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3387:0:3"
									},
									"scope": 472,
									"src": "3306:717:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 473,
							"src": "667:3358:3"
						}
					],
					"src": "100:3926:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						]
					},
					"id": 718,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 717,
							"linearizedBaseContracts": [
								717
							],
							"name": "AddressUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "848:311:4",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "1045:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 485,
												"nodeType": "VariableDeclarationStatement",
												"src": "1045:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1076:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1090:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1110:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1098:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1090:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 478,
														"isOffset": false,
														"isSlot": false,
														"src": "1110:7:4",
														"valueSize": 1
													},
													{
														"declaration": 484,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:4:4",
														"valueSize": 1
													}
												],
												"id": 486,
												"nodeType": "InlineAssembly",
												"src": "1067:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 487,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "1144:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1151:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1144:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 482,
												"id": 490,
												"nodeType": "Return",
												"src": "1137:15:4"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "212:565:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "802:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:17:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "842:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "842:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:6:4"
									},
									"scope": 717,
									"src": "782:377:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "2147:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 503,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2173:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2165:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 501,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2165:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2165:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2165:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 506,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2190:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2165:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2198:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2157:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2157:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2157:73:4"
											},
											{
												"assignments": [
													512,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "2242:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 511,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2242:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 519,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 513,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "2260:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2260:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 515,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "2282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2260:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2241:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "2311:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2320:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2303:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "2303:78:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1165:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2095:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2095:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "2122:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:43:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:0:4"
									},
									"scope": 717,
									"src": "2076:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "3219:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3249:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3257:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3263:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 536,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															543,
															563
														],
														"referencedDeclaration": 563,
														"src": "3236:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 535,
												"id": 541,
												"nodeType": "Return",
												"src": "3229:67:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "2394:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3152:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3168:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3168:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:35:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "3205:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3205:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:14:4"
									},
									"scope": 717,
									"src": "3130:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "3672:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "3711:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3719:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3725:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 559,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3728:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 555,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "3689:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3689:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 554,
												"id": 561,
												"nodeType": "Return",
												"src": "3682:59:4"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "3309:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3556:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3556:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3580:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3580:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3607:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3607:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3546:93:4"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3658:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3658:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:14:4"
									},
									"scope": 717,
									"src": "3525:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "4253:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "4292:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4300:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "4306:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4313:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 575,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															583,
															633
														],
														"referencedDeclaration": 633,
														"src": "4270:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4270:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 574,
												"id": 581,
												"nodeType": "Return",
												"src": "4263:94:4"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3754:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4150:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4174:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4201:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:80:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "4239:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4239:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:14:4"
									},
									"scope": 717,
									"src": "4110:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4791:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 600,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4817:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$717",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4809:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 598,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4809:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4809:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4809:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "4834:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4809:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4841:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4801:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "4801:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 610,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "4911:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 609,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "4900:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4900:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4920:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4892:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4892:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "4892:60:4"
											},
											{
												"assignments": [
													616,
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4964:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4964:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4978:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 617,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4978:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"id": 623,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "5031:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 619,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "5005:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5005:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 621,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "5024:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5005:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5005:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4963:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 627,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "5070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 628,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "5079:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 629,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "5091:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 626,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5053:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5053:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 596,
												"id": 631,
												"nodeType": "Return",
												"src": "5046:58:4"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "4370:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4676:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4676:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4703:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4726:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4642:116:4"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4777:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4777:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4776:14:4"
									},
									"scope": 717,
									"src": "4612:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "5388:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "5424:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5432:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5438:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 643,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															650,
															685
														],
														"referencedDeclaration": 685,
														"src": "5405:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5405:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 642,
												"id": 648,
												"nodeType": "Return",
												"src": "5398:80:4"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5117:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5316:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5332:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5332:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:35:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5374:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5374:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:14:4"
									},
									"scope": 717,
									"src": "5288:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "5827:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 664,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "5856:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 663,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "5845:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5845:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5865:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5837:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5837:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5837:67:4"
											},
											{
												"assignments": [
													670,
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 670,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "5916:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 669,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5916:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "5930:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 671,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5930:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"arguments": [
														{
															"id": 675,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "5975:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 673,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "5957:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5957:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5957:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5915:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 679,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "6014:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 680,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "6023:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 681,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "6035:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 678,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5997:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5997:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 661,
												"id": 683,
												"nodeType": "Return",
												"src": "5990:58:4"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "5491:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5706:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5730:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5730:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5757:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5757:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:93:4"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "5813:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5813:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5812:14:4"
									},
									"scope": 717,
									"src": "5669:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "6435:532:4",
										"statements": [
											{
												"condition": {
													"id": 697,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 688,
													"src": "6449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "6506:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 701,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "6590:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6590:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6610:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6590:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 711,
																"nodeType": "Block",
																"src": "6898:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 708,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 692,
																					"src": "6923:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 707,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "6916:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6916:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 710,
																		"nodeType": "ExpressionStatement",
																		"src": "6916:20:4"
																	}
																]
															},
															"id": 712,
															"nodeType": "IfStatement",
															"src": "6586:365:4",
															"trueBody": {
																"id": 706,
																"nodeType": "Block",
																"src": "6613:279:4",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6733:145:4",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6755:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6784:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6778:5:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6778:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6759:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6827:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6831:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6823:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6823:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6844:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6816:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6816:44:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6816:44:4"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 690,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6784:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 690,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6831:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 705,
																		"nodeType": "InlineAssembly",
																		"src": "6724:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 714,
												"nodeType": "IfStatement",
												"src": "6445:516:4",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "6458:42:4",
													"statements": [
														{
															"expression": {
																"id": 698,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "6479:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 696,
															"id": 699,
															"nodeType": "Return",
															"src": "6472:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "6061:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6310:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6310:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6332:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6332:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6365:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6365:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6300:97:4"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "6421:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6421:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:14:4"
									},
									"scope": 717,
									"src": "6275:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 718,
							"src": "179:6790:4"
						}
					],
					"src": "86:6884:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							761
						],
						"Initializable": [
							170
						]
					},
					"id": 762,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 719,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 720,
							"nodeType": "ImportDirective",
							"scope": 762,
							"sourceUnit": 171,
							"src": "110:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 722,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "691:13:5"
									},
									"id": 723,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:5"
								}
							],
							"contractDependencies": [
								170
							],
							"contractKind": "contract",
							"documentation": {
								"id": 721,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 761,
							"linearizedBaseContracts": [
								761,
								170
							],
							"name": "ContextUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "758:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 728,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "768:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "768:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "768:26:5"
											}
										]
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 726,
											"modifierName": {
												"id": 725,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "746:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:11:5"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:5"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:0:5"
									},
									"scope": 761,
									"src": "711:90:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "864:7:5",
										"statements": []
									},
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 735,
											"modifierName": {
												"id": 734,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "852:11:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "852:11:5"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "864:0:5"
									},
									"scope": 761,
									"src": "807:64:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "938:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 743,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "955:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "955:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 742,
												"id": 745,
												"nodeType": "Return",
												"src": "948:17:5"
											}
										]
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:2:5"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "929:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:9:5"
									},
									"scope": 761,
									"src": "876:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "1045:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 752,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1062:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1062:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 751,
												"id": 754,
												"nodeType": "Return",
												"src": "1055:15:5"
											}
										]
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:2:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1029:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1029:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:16:5"
									},
									"scope": 761,
									"src": "978:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 760,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 761,
									"src": "1082:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 757,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 759,
										"length": {
											"hexValue": "3530",
											"id": 758,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1090:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1082:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 762,
							"src": "651:459:5"
						}
					],
					"src": "86:1025:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
					"exportedSymbols": {
						"SafeMathUpgradeable": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 763,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 764,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "SafeMathUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "713:140:6",
										"statements": [
											{
												"id": 794,
												"nodeType": "UncheckedBlock",
												"src": "723:124:6",
												"statements": [
													{
														"assignments": [
															777
														],
														"declarations": [
															{
																"constant": false,
																"id": 777,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 794,
																"src": "747:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 776,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "747:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 781,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 779,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "759:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "747:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 782,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "782:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 783,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 767,
																"src": "786:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "782:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 789,
														"nodeType": "IfStatement",
														"src": "778:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "797:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "796:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 775,
															"id": 788,
															"nodeType": "Return",
															"src": "789:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "828:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 791,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "834:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 792,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "827:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 775,
														"id": 793,
														"nodeType": "Return",
														"src": "820:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "501:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "653:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "664:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:22:6"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "698:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "704:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:15:6"
									},
									"scope": 1073,
									"src": "637:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "1075:113:6",
										"statements": [
											{
												"id": 822,
												"nodeType": "UncheckedBlock",
												"src": "1085:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 808,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "1113:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 809,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "1117:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1113:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 815,
														"nodeType": "IfStatement",
														"src": "1109:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1128:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1135:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 807,
															"id": 814,
															"nodeType": "Return",
															"src": "1120:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1159:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 817,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "1165:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 818,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "1169:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1165:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 820,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1158:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 807,
														"id": 821,
														"nodeType": "Return",
														"src": "1151:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "859:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1015:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1026:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:22:6"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1060:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1060:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "1066:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:15:6"
									},
									"scope": 1073,
									"src": "999:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "1412:417:6",
										"statements": [
											{
												"id": 864,
												"nodeType": "UncheckedBlock",
												"src": "1422:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1680:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1685:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1680:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "1676:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1702:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1695:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 842,
															"nodeType": "Return",
															"src": "1688:16:6"
														}
													},
													{
														"assignments": [
															845
														],
														"declarations": [
															{
																"constant": false,
																"id": 845,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 864,
																"src": "1718:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1718:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 849,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1730:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 847,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1734:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1730:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1718:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 850,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1753:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 851,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "1757:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1753:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 853,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "1762:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1753:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 859,
														"nodeType": "IfStatement",
														"src": "1749:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1773:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1780:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1772:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 835,
															"id": 858,
															"nodeType": "Return",
															"src": "1765:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1804:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 861,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1810:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 862,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1803:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 835,
														"id": 863,
														"nodeType": "Return",
														"src": "1796:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "1194:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1352:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1363:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:22:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1397:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1397:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1403:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:15:6"
									},
									"scope": 1073,
									"src": "1336:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "2054:114:6",
										"statements": [
											{
												"id": 892,
												"nodeType": "UncheckedBlock",
												"src": "2064:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 878,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "2092:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2097:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2092:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 885,
														"nodeType": "IfStatement",
														"src": "2088:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2108:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2115:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2107:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 877,
															"id": 884,
															"nodeType": "Return",
															"src": "2100:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2139:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 887,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "2145:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 888,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "2149:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2145:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 890,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2138:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 877,
														"id": 891,
														"nodeType": "Return",
														"src": "2131:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1835:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "1994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2005:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:22:6"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2039:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2039:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2045:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:15:6"
									},
									"scope": 1073,
									"src": "1978:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2403:114:6",
										"statements": [
											{
												"id": 920,
												"nodeType": "UncheckedBlock",
												"src": "2413:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "2441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2446:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2441:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 913,
														"nodeType": "IfStatement",
														"src": "2437:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2457:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2464:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2456:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 905,
															"id": 912,
															"nodeType": "Return",
															"src": "2449:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2488:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 915,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 897,
																		"src": "2494:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 916,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "2498:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2494:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 918,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2487:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 905,
														"id": 919,
														"nodeType": "Return",
														"src": "2480:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "2174:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2354:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2342:22:6"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2388:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2388:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "2394:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:15:6"
									},
									"scope": 1073,
									"src": "2327:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "2819:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 932,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2836:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 933,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2840:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2836:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 935,
												"nodeType": "Return",
												"src": "2829:12:6"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "2523:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2765:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2776:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2764:22:6"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2810:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:9:6"
									},
									"scope": 1073,
									"src": "2752:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "3186:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 947,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "3203:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3207:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3203:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 946,
												"id": 950,
												"nodeType": "Return",
												"src": "3196:12:6"
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2854:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3132:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3143:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3131:22:6"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3177:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:9:6"
									},
									"scope": 1073,
									"src": "3119:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "3529:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3546:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 963,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3550:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3546:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 961,
												"id": 965,
												"nodeType": "Return",
												"src": "3539:12:6"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "3221:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3475:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3486:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3474:22:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "3520:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3519:9:6"
									},
									"scope": 1073,
									"src": "3462:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "3914:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3931:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 978,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "3935:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3931:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 976,
												"id": 980,
												"nodeType": "Return",
												"src": "3924:12:6"
											}
										]
									},
									"documentation": {
										"id": 968,
										"nodeType": "StructuredDocumentation",
										"src": "3564:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3860:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3871:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3871:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3859:22:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "3905:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3905:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:9:6"
									},
									"scope": 1073,
									"src": "3847:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "4463:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "4480:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 993,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "4484:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4480:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 991,
												"id": 995,
												"nodeType": "Return",
												"src": "4473:12:6"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "3949:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4409:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4420:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4408:22:6"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "4454:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4454:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4453:9:6"
									},
									"scope": 1073,
									"src": "4396:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "5081:106:6",
										"statements": [
											{
												"id": 1020,
												"nodeType": "UncheckedBlock",
												"src": "5091:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1010,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "5123:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1011,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "5128:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5123:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1013,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "5131:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1009,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5115:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5115:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1015,
														"nodeType": "ExpressionStatement",
														"src": "5115:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "5165:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1017,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "5169:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5165:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1008,
														"id": 1019,
														"nodeType": "Return",
														"src": "5158:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "4498:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4978:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4997:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5016:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1003,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5016:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:80:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "5072:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5072:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5071:9:6"
									},
									"scope": 1073,
									"src": "4956:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "5796:105:6",
										"statements": [
											{
												"id": 1045,
												"nodeType": "UncheckedBlock",
												"src": "5806:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1035,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1027,
																		"src": "5838:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5842:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5838:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1038,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5845:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1034,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5830:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5830:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1040,
														"nodeType": "ExpressionStatement",
														"src": "5830:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1041,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "5879:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1042,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "5883:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5879:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1033,
														"id": 1044,
														"nodeType": "Return",
														"src": "5872:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "5193:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5693:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5712:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5712:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5731:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5731:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5683:80:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "5787:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:9:6"
									},
									"scope": 1073,
									"src": "5671:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "6672:105:6",
										"statements": [
											{
												"id": 1070,
												"nodeType": "UncheckedBlock",
												"src": "6682:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1060,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "6714:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6718:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6714:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1063,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "6721:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1059,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6706:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6706:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1065,
														"nodeType": "ExpressionStatement",
														"src": "6706:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1066,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "6755:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1067,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "6759:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6755:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1058,
														"id": 1069,
														"nodeType": "Return",
														"src": "6748:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "5907:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6569:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6569:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6588:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6588:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6607:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6607:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6559:80:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "6663:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6662:9:6"
									},
									"scope": 1073,
									"src": "6547:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1074,
							"src": "467:6312:6"
						}
					],
					"src": "92:6688:6"
				},
				"id": 6
			},
			"@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							1315
						]
					},
					"id": 1316,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1315,
							"linearizedBaseContracts": [
								1315
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1083,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "109:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "132:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "132:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "157:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "157:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:60:7"
									},
									"src": "94:75:7"
								},
								{
									"anonymous": false,
									"id": 1091,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "189:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "211:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "231:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "231:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:54:7"
									},
									"src": "174:69:7"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1096,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:7"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "288:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1093,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "288:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:15:7"
									},
									"scope": 1315,
									"src": "249:54:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "323:2:7"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "349:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1098,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "349:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:15:7"
									},
									"scope": 1315,
									"src": "308:56:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:2:7"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "412:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1103,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "412:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:7:7"
									},
									"scope": 1315,
									"src": "369:50:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:7"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "470:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:6:7"
									},
									"scope": 1315,
									"src": "424:52:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "500:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:15:7"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "538:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "538:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:6:7"
									},
									"scope": 1315,
									"src": "481:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "568:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "583:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:32:7"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "623:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:6:7"
									},
									"scope": 1315,
									"src": "549:80:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "652:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "669:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:29:7"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "699:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "699:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:6:7"
									},
									"scope": 1315,
									"src": "635:70:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "728:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "740:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "740:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:24:7"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "770:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "770:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "769:6:7"
									},
									"scope": 1315,
									"src": "710:66:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "803:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "817:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "829:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:38:7"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "859:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "859:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "858:6:7"
									},
									"scope": 1315,
									"src": "781:84:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:2:7"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "922:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1158,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:9:7"
									},
									"scope": 1315,
									"src": "871:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:7"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "986:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:9:7"
									},
									"scope": 1315,
									"src": "936:59:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1016:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:15:7"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1054:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1054:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:6:7"
									},
									"scope": 1315,
									"src": "1000:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1082:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1097:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1114:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1114:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1126:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1126:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1141:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1182,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1141:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1150:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "1161:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:90:7"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1180:0:7"
									},
									"scope": 1315,
									"src": "1066:115:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1198,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1198:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1222:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1222:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1236:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1236:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:52:7"
									},
									"src": "1187:63:7"
								},
								{
									"anonymous": false,
									"id": 1208,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "1266:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "1290:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "1304:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1304:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "1318:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:72:7"
									},
									"src": "1255:83:7"
								},
								{
									"anonymous": false,
									"id": 1222,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "1363:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1363:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "1395:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1395:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "1419:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1419:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "1443:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1443:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "1468:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1468:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "1493:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1353:164:7"
									},
									"src": "1343:175:7"
								},
								{
									"anonymous": false,
									"id": 1228,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1534:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1223,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1552:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1225,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:36:7"
									},
									"src": "1523:47:7"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:2:7"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1628:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1628:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:6:7"
									},
									"scope": 1315,
									"src": "1576:58:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 1238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1655:2:7"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1681:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:7"
									},
									"scope": 1315,
									"src": "1639:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:7"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "1736:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1735:9:7"
									},
									"scope": 1315,
									"src": "1695:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:7"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1791:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:9:7"
									},
									"scope": 1315,
									"src": "1750:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:2:7"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1851:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1250,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1869:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1252,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1887:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1254,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1887:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:63:7"
									},
									"scope": 1315,
									"src": "1805:109:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 1262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:2:7"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1974:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1974:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:6:7"
									},
									"scope": 1315,
									"src": "1919:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2014:2:7"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2040:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2040:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:6:7"
									},
									"scope": 1315,
									"src": "1985:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 1272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2065:2:7"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "2091:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2091:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:6:7"
									},
									"scope": 1315,
									"src": "2051:46:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2117:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2116:12:7"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2147:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2147:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:16:7"
									},
									"scope": 1315,
									"src": "2103:60:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 1288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2182:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:12:7"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2212:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2212:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2226:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2226:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:28:7"
									},
									"scope": 1315,
									"src": "2168:72:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2259:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2259:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2276:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2276:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2293:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2305:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1295,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2305:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2258:67:7"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2334:0:7"
									},
									"scope": 1315,
									"src": "2245:90:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "2354:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:12:7"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:7"
									},
									"scope": 1315,
									"src": "2340:35:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2393:2:7"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2404:0:7"
									},
									"scope": 1315,
									"src": "2380:25:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2431:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2440:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:18:7"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2457:0:7"
									},
									"scope": 1315,
									"src": "2411:47:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1316,
							"src": "63:2397:7"
						}
					],
					"src": "37:2423:7"
				},
				"id": 7
			},
			"contracts/stabilizer.sol": {
				"ast": {
					"absolutePath": "contracts/stabilizer.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							717
						],
						"ContextUpgradeable": [
							761
						],
						"IERC20Upgradeable": [
							248
						],
						"IUSC": [
							1338
						],
						"IUniswapV2Pair": [
							1315
						],
						"Initializable": [
							170
						],
						"OwnableUpgradeable": [
							125
						],
						"SafeERC20Upgradeable": [
							472
						],
						"SafeMathUpgradeable": [
							1073
						],
						"stabilizer": [
							1798
						]
					},
					"id": 1799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1317,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 1318,
							"nodeType": "ImportDirective",
							"scope": 1799,
							"sourceUnit": 249,
							"src": "55:79:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
							"id": 1319,
							"nodeType": "ImportDirective",
							"scope": 1799,
							"sourceUnit": 473,
							"src": "135:88:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1320,
							"nodeType": "ImportDirective",
							"scope": 1799,
							"sourceUnit": 171,
							"src": "224:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1321,
							"nodeType": "ImportDirective",
							"scope": 1799,
							"sourceUnit": 126,
							"src": "300:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"id": 1322,
							"nodeType": "ImportDirective",
							"scope": 1799,
							"sourceUnit": 1074,
							"src": "376:80:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
							"file": "@sushiswap/core/contracts/uniswapv2/interfaces/IUniswapV2Pair.sol",
							"id": 1323,
							"nodeType": "ImportDirective",
							"scope": 1799,
							"sourceUnit": 1316,
							"src": "457:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1338,
							"linearizedBaseContracts": [
								1338
							],
							"name": "IUSC",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "42966c68",
									"id": 1328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "569:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:16:8"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:0:8"
									},
									"scope": 1338,
									"src": "555:39:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 1337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "account_",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "614:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "632:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:35:8"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "667:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "667:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:6:8"
									},
									"scope": 1338,
									"src": "600:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1799,
							"src": "534:141:8"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1339,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "700:13:8"
									},
									"id": 1340,
									"nodeType": "InheritanceSpecifier",
									"src": "700:13:8"
								},
								{
									"baseName": {
										"id": 1341,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 125,
										"src": "715:18:8"
									},
									"id": 1342,
									"nodeType": "InheritanceSpecifier",
									"src": "715:18:8"
								}
							],
							"contractDependencies": [
								125,
								170,
								761
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1798,
							"linearizedBaseContracts": [
								1798,
								125,
								761,
								170
							],
							"name": "stabilizer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1346,
									"libraryName": {
										"id": 1343,
										"name": "SafeERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 472,
										"src": "746:20:8"
									},
									"nodeType": "UsingForDirective",
									"src": "740:49:8",
									"typeName": {
										"id": 1345,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1344,
											"name": "IERC20Upgradeable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 248,
											"src": "771:17:8"
										},
										"referencedDeclaration": 248,
										"src": "771:17:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
											"typeString": "contract IERC20Upgradeable"
										}
									}
								},
								{
									"id": 1349,
									"libraryName": {
										"id": 1347,
										"name": "SafeMathUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1073,
										"src": "800:19:8"
									},
									"nodeType": "UsingForDirective",
									"src": "794:38:8",
									"typeName": {
										"id": 1348,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "48c7e528",
									"id": 1353,
									"mutability": "mutable",
									"name": "executor",
									"nodeType": "VariableDeclaration",
									"scope": 1798,
									"src": "853:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1352,
										"keyType": {
											"id": 1350,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "861:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "853:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1351,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "872:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e6f7a09",
									"id": 1355,
									"mutability": "mutable",
									"name": "usdc_usc_lpAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1798,
									"src": "899:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1354,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "899:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3e413bee",
									"id": 1357,
									"mutability": "mutable",
									"name": "usdc",
									"nodeType": "VariableDeclaration",
									"scope": 1798,
									"src": "938:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1356,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "938:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3011d3d5",
									"id": 1359,
									"mutability": "mutable",
									"name": "usc",
									"nodeType": "VariableDeclaration",
									"scope": 1798,
									"src": "963:18:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1358,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "963:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4a67930",
									"id": 1361,
									"mutability": "mutable",
									"name": "openBuy",
									"nodeType": "VariableDeclaration",
									"scope": 1798,
									"src": "988:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1360,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "988:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f1eae64a",
									"id": 1363,
									"mutability": "mutable",
									"name": "openSell",
									"nodeType": "VariableDeclaration",
									"scope": 1798,
									"src": "1013:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1362,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1013:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "1191:240:8",
										"statements": [
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nodeType": "VariableDeclaration",
														"scope": 1404,
														"src": "1201:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1201:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1380,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "39393730",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1240:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_9970_by_1",
																"typeString": "int_const 9970"
															},
															"value": "9970"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_9970_by_1",
																"typeString": "int_const 9970"
															}
														],
														"expression": {
															"id": 1376,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "1227:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 967,
														"src": "1227:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1227:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1201:44:8"
											},
											{
												"assignments": [
													1382
												],
												"declarations": [
													{
														"constant": false,
														"id": 1382,
														"mutability": "mutable",
														"name": "numerator",
														"nodeType": "VariableDeclaration",
														"scope": 1404,
														"src": "1255:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1255:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1387,
												"initialValue": {
													"arguments": [
														{
															"id": 1385,
															"name": "reserveOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "1295:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1383,
															"name": "amountInWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "1275:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 967,
														"src": "1275:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1255:51:8"
											},
											{
												"assignments": [
													1389
												],
												"declarations": [
													{
														"constant": false,
														"id": 1389,
														"mutability": "mutable",
														"name": "denominator",
														"nodeType": "VariableDeclaration",
														"scope": 1404,
														"src": "1316:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1388,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1316:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"arguments": [
														{
															"id": 1395,
															"name": "amountInWithFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "1363:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3130303030",
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1352:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	}
																],
																"expression": {
																	"id": 1390,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "1338:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "1338:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1338:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 937,
														"src": "1338:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1338:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1316:63:8"
											},
											{
												"expression": {
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1398,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "1389:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1399,
															"name": "numerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "1401:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1400,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "1413:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1401:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1389:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "1389:35:8"
											}
										]
									},
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "1071:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "1097:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "1124:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:87:8"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "1172:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:19:8"
									},
									"scope": 1798,
									"src": "1040:391:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1439,
										"nodeType": "Block",
										"src": "1599:216:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1416,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1609:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1609:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "1609:16:8"
											},
											{
												"expression": {
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1419,
														"name": "usdc_usc_lpAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "1677:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1420,
														"name": "_usdc_usc_lpAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "1698:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1677:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "1677:40:8"
											},
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1423,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "1727:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1424,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "1734:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1727:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "1727:12:8"
											},
											{
												"expression": {
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1427,
														"name": "usc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "1749:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1428,
														"name": "_usc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "1755:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1749:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "1749:10:8"
											},
											{
												"expression": {
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1431,
														"name": "openBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "1769:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1779:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1769:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "1769:14:8"
											},
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1435,
														"name": "openSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "1793:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1804:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1793:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "1793:15:8"
											}
										]
									},
									"functionSelector": "c0c53b8b",
									"id": 1440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1414,
											"modifierName": {
												"id": 1413,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 169,
												"src": "1587:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1587:11:8"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "_usdc_usc_lpAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1499:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_usdc",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1536:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "_usc",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1559:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1456:121:8"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1599:0:8"
									},
									"scope": 1798,
									"src": "1437:378:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "1934:64:8",
										"statements": [
											{
												"expression": {
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1451,
															"name": "executor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "1944:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1453,
														"indexExpression": {
															"id": 1452,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "1953:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1944:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1454,
														"name": "_type",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "1965:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1944:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "1944:26:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1987:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1450,
												"id": 1458,
												"nodeType": "Return",
												"src": "1980:11:8"
											}
										]
									},
									"functionSelector": "1e1bff3f",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1447,
											"modifierName": {
												"id": 1446,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "1897:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1897:9:8"
										}
									],
									"name": "setExecutor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1842:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "_type",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1860:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:30:8"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1924:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:6:8"
									},
									"scope": 1798,
									"src": "1821:177:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "2028:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1463,
																"name": "executor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "2046:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1466,
															"indexExpression": {
																"expression": {
																	"id": 1464,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2055:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2055:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2046:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6578656375746f723a2063616c6c6572206973206e6f7420746865206578656375746f72",
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2068:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a",
																"typeString": "literal_string \"executor: caller is not the executor\""
															},
															"value": "executor: caller is not the executor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_444a2fbd424141324bc9bde922e283fec3f00f9313c8ee58792c14af3d450e7a",
																"typeString": "literal_string \"executor: caller is not the executor\""
															}
														],
														"id": 1462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2038:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "2038:69:8"
											},
											{
												"id": 1470,
												"nodeType": "PlaceholderStatement",
												"src": "2117:1:8"
											}
										]
									},
									"id": 1472,
									"name": "onlyExecutor",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2025:2:8"
									},
									"src": "2004:121:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "2192:2682:8",
										"statements": [
											{
												"assignments": [
													1480,
													1482,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1480,
														"mutability": "mutable",
														"name": "reserve0",
														"nodeType": "VariableDeclaration",
														"scope": 1741,
														"src": "2203:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2203:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1482,
														"mutability": "mutable",
														"name": "reserve1",
														"nodeType": "VariableDeclaration",
														"scope": 1741,
														"src": "2221:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1481,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2221:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1488,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1484,
																	"name": "usdc_usc_lpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "2271:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1483,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "2243:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1315_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2243:56:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1315",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1257,
														"src": "2243:68:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2243:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2202:111:8"
											},
											{
												"assignments": [
													1490
												],
												"declarations": [
													{
														"constant": false,
														"id": 1490,
														"mutability": "mutable",
														"name": "token0",
														"nodeType": "VariableDeclaration",
														"scope": 1741,
														"src": "2323:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1489,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2323:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1492,
																	"name": "usdc_usc_lpAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "2355:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1491,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "2340:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1315_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2340:34:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$1315",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1243,
														"src": "2340:41:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2340:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2323:60:8"
											},
											{
												"assignments": [
													1498,
													1500
												],
												"declarations": [
													{
														"constant": false,
														"id": 1498,
														"mutability": "mutable",
														"name": "reserveIn",
														"nodeType": "VariableDeclaration",
														"scope": 1741,
														"src": "2468:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2468:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1500,
														"mutability": "mutable",
														"name": "reserveOut",
														"nodeType": "VariableDeclaration",
														"scope": 1741,
														"src": "2487:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1499,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2487:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1514,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1501,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "2509:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1504,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "2527:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2519:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1502,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2519:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2519:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2509:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 1510,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "2582:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1511,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "2592:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1512,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2581:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2509:92:8",
													"trueExpression": {
														"components": [
															{
																"id": 1507,
																"name": "reserve1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "2547:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1508,
																"name": "reserve0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "2557:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1509,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2546:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2467:134:8"
											},
											{
												"assignments": [
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "usdcForLP",
														"nodeType": "VariableDeclaration",
														"scope": 1741,
														"src": "2612:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1515,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2612:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1523,
												"initialValue": {
													"arguments": [
														{
															"id": 1521,
															"name": "usdc_usc_lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "2679:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1518,
																	"name": "usdc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "2650:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1517,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2632:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$248_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2632:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "2632:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2632:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2612:95:8"
											},
											{
												"assignments": [
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "uscForLP",
														"nodeType": "VariableDeclaration",
														"scope": 1741,
														"src": "2717:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1524,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2717:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [
														{
															"id": 1530,
															"name": "usdc_usc_lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "2769:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1527,
																	"name": "usc",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "2754:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1526,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2736:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$248_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2736:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 187,
														"src": "2736:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2736:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2717:71:8"
											},
											{
												"assignments": [
													1534
												],
												"declarations": [
													{
														"constant": false,
														"id": 1534,
														"mutability": "mutable",
														"name": "price",
														"nodeType": "VariableDeclaration",
														"scope": 1741,
														"src": "2798:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1533,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2798:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1542,
												"initialValue": {
													"arguments": [
														{
															"id": 1540,
															"name": "uscForLP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "2838:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2828:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"id": 1535,
																	"name": "usdcForLP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "2814:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 967,
																"src": "2814:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2814:19:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 982,
														"src": "2814:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2814:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2798:49:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1543,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "2861:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2869:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "2861:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1546,
														"name": "openSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "2877:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2861:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1630,
												"nodeType": "IfStatement",
												"src": "2857:795:8",
												"trueBody": {
													"id": 1629,
													"nodeType": "Block",
													"src": "2887:765:8",
													"statements": [
														{
															"assignments": [
																1549
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1549,
																	"mutability": "mutable",
																	"name": "neetSellAmt",
																	"nodeType": "VariableDeclaration",
																	"scope": 1629,
																	"src": "2901:19:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1548,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2901:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1558,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "32",
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2953:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		}
																	],
																	"expression": {
																		"components": [
																			{
																				"arguments": [
																					{
																						"id": 1552,
																						"name": "uscForLP",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1525,
																						"src": "2938:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1550,
																						"name": "usdcForLP",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1516,
																						"src": "2924:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 952,
																					"src": "2924:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1553,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2924:23:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1554,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2923:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 982,
																	"src": "2923:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2923:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2901:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1568,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3001:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_stabilizer_$1798",
																					"typeString": "contract stabilizer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_stabilizer_$1798",
																					"typeString": "contract stabilizer"
																				}
																			],
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2993:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1566,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2993:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2993:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1570,
																		"name": "neetSellAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "3008:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1562,
																						"name": "usc",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1359,
																						"src": "2982:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1561,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2974:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1560,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "2974:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2974:12:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1559,
																			"name": "IUSC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1338,
																			"src": "2969:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUSC_$1338_$",
																				"typeString": "type(contract IUSC)"
																			}
																		},
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2969:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUSC_$1338",
																			"typeString": "contract IUSC"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1337,
																	"src": "2969:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2969:51:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1572,
															"nodeType": "ExpressionStatement",
															"src": "2969:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1577,
																		"name": "usdc_usc_lpAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "3088:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1578,
																		"name": "neetSellAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "3124:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1574,
																				"name": "usc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1359,
																				"src": "3053:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1573,
																			"name": "IERC20Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 248,
																			"src": "3035:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$248_$",
																				"typeString": "type(contract IERC20Upgradeable)"
																			}
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3035:22:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 279,
																	"src": "3035:35:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
																		"typeString": "function (contract IERC20Upgradeable,address,uint256)"
																	}
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3035:114:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1580,
															"nodeType": "ExpressionStatement",
															"src": "3035:114:8"
														},
														{
															"assignments": [
																1582
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1582,
																	"mutability": "mutable",
																	"name": "amountOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 1629,
																	"src": "3163:17:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1581,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3163:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1588,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1584,
																		"name": "neetSellAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "3213:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1585,
																		"name": "reserveOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1500,
																		"src": "3242:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1586,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1498,
																		"src": "3270:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1583,
																	"name": "getAmountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "3183:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3183:110:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3163:130:8"
														},
														{
															"assignments": [
																1590,
																1592
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1590,
																	"mutability": "mutable",
																	"name": "amount0Out",
																	"nodeType": "VariableDeclaration",
																	"scope": 1629,
																	"src": "3309:18:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1589,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3309:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1592,
																	"mutability": "mutable",
																	"name": "amount1Out",
																	"nodeType": "VariableDeclaration",
																	"scope": 1629,
																	"src": "3329:18:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1591,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3329:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1612,
															"initialValue": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1593,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "3351:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1596,
																				"name": "usc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1359,
																				"src": "3369:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3361:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1594,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3361:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3361:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "3351:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"components": [
																		{
																			"id": 1605,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "3435:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1608,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3454:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3446:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1606,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3446:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3446:10:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1610,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3434:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "3351:106:8",
																"trueExpression": {
																	"components": [
																		{
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1601,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3401:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3393:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1599,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3393:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3393:10:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1603,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "3405:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1604,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3392:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3308:149:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1617,
																		"name": "amount0Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "3528:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1618,
																		"name": "amount1Out",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1592,
																		"src": "3556:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1621,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3592:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_stabilizer_$1798",
																					"typeString": "contract stabilizer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_stabilizer_$1798",
																					"typeString": "contract stabilizer"
																				}
																			],
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3584:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1619,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3584:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3584:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1625,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3625:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "NewExpression",
																			"src": "3615:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (bytes memory)"
																			},
																			"typeName": {
																				"id": 1623,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "3619:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_storage_ptr",
																					"typeString": "bytes"
																				}
																			}
																		},
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3615:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1614,
																				"name": "usdc_usc_lpAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1355,
																				"src": "3486:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1613,
																			"name": "IUniswapV2Pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "3471:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1315_$",
																				"typeString": "type(contract IUniswapV2Pair)"
																			}
																		},
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3471:34:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Pair_$1315",
																			"typeString": "contract IUniswapV2Pair"
																		}
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "swap",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1299,
																	"src": "3471:39:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (uint256,uint256,address,bytes memory) external"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3471:170:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1628,
															"nodeType": "ExpressionStatement",
															"src": "3471:170:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1631,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "3666:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3674:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "3666:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1634,
														"name": "openBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "3682:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3666:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1738,
												"nodeType": "IfStatement",
												"src": "3662:1185:8",
												"trueBody": {
													"id": 1737,
													"nodeType": "Block",
													"src": "3691:1156:8",
													"statements": [
														{
															"assignments": [
																1637
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1637,
																	"mutability": "mutable",
																	"name": "neetBuyAmt",
																	"nodeType": "VariableDeclaration",
																	"scope": 1737,
																	"src": "3705:18:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1636,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3705:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1646,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "32",
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3756:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		}
																	],
																	"expression": {
																		"components": [
																			{
																				"arguments": [
																					{
																						"id": 1640,
																						"name": "usdcForLP",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1516,
																						"src": "3740:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1638,
																						"name": "uscForLP",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1525,
																						"src": "3727:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1639,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 952,
																					"src": "3727:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3727:23:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1642,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3726:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 982,
																	"src": "3726:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3726:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3705:53:8"
														},
														{
															"assignments": [
																1648
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1648,
																	"mutability": "mutable",
																	"name": "thisAddressBalance",
																	"nodeType": "VariableDeclaration",
																	"scope": 1737,
																	"src": "3772:26:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1647,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3772:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1658,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1655,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3860:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_stabilizer_$1798",
																					"typeString": "contract stabilizer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_stabilizer_$1798",
																					"typeString": "contract stabilizer"
																				}
																			],
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3852:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1653,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3852:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3852:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1650,
																				"name": "usdc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1357,
																				"src": "3819:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1649,
																			"name": "IERC20Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 248,
																			"src": "3801:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$248_$",
																				"typeString": "type(contract IERC20Upgradeable)"
																			}
																		},
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3801:23:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																			"typeString": "contract IERC20Upgradeable"
																		}
																	},
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 187,
																	"src": "3801:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3801:78:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3772:107:8"
														},
														{
															"assignments": [
																1660
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1660,
																	"mutability": "mutable",
																	"name": "amountIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 1737,
																	"src": "3893:16:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1659,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3893:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1661,
															"nodeType": "VariableDeclarationStatement",
															"src": "3893:16:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1662,
																	"name": "neetBuyAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "3927:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1663,
																	"name": "thisAddressBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "3940:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3927:31:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1674,
																"nodeType": "Block",
																"src": "4028:54:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1670,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1660,
																				"src": "4046:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1671,
																				"name": "neetBuyAmt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1637,
																				"src": "4057:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4046:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1673,
																		"nodeType": "ExpressionStatement",
																		"src": "4046:21:8"
																	}
																]
															},
															"id": 1675,
															"nodeType": "IfStatement",
															"src": "3923:159:8",
															"trueBody": {
																"id": 1669,
																"nodeType": "Block",
																"src": "3960:62:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1665,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1660,
																				"src": "3978:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1666,
																				"name": "thisAddressBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1648,
																				"src": "3989:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3978:29:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1668,
																		"nodeType": "ExpressionStatement",
																		"src": "3978:29:8"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1676,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "4099:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4111:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4099:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1736,
															"nodeType": "IfStatement",
															"src": "4095:742:8",
															"trueBody": {
																"id": 1735,
																"nodeType": "Block",
																"src": "4114:723:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1683,
																					"name": "usdc_usc_lpAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1355,
																					"src": "4190:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1684,
																					"name": "amountIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1660,
																					"src": "4230:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1680,
																							"name": "usdc",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1357,
																							"src": "4150:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1679,
																						"name": "IERC20Upgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 248,
																						"src": "4132:17:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$248_$",
																							"typeString": "type(contract IERC20Upgradeable)"
																						}
																					},
																					"id": 1681,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4132:23:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																						"typeString": "contract IERC20Upgradeable"
																					}
																				},
																				"id": 1682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 279,
																				"src": "4132:36:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
																					"typeString": "function (contract IERC20Upgradeable,address,uint256)"
																				}
																			},
																			"id": 1685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4132:124:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1686,
																		"nodeType": "ExpressionStatement",
																		"src": "4132:124:8"
																	},
																	{
																		"assignments": [
																			1688
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1688,
																				"mutability": "mutable",
																				"name": "amountOut",
																				"nodeType": "VariableDeclaration",
																				"scope": 1735,
																				"src": "4274:17:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1687,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4274:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1694,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1690,
																					"name": "amountIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1660,
																					"src": "4328:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1691,
																					"name": "reserveIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1498,
																					"src": "4358:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1692,
																					"name": "reserveOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1500,
																					"src": "4389:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1689,
																				"name": "getAmountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1405,
																				"src": "4294:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4294:123:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4274:143:8"
																	},
																	{
																		"assignments": [
																			1696,
																			1698
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1696,
																				"mutability": "mutable",
																				"name": "amount0Out",
																				"nodeType": "VariableDeclaration",
																				"scope": 1735,
																				"src": "4437:18:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1695,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4437:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			},
																			{
																				"constant": false,
																				"id": 1698,
																				"mutability": "mutable",
																				"name": "amount1Out",
																				"nodeType": "VariableDeclaration",
																				"scope": 1735,
																				"src": "4457:18:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1697,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4457:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1718,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 1704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1699,
																					"name": "token0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1490,
																					"src": "4479:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 1702,
																							"name": "usdc",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1357,
																							"src": "4517:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1701,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4509:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1700,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4509:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1703,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4509:13:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "4479:43:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"components": [
																					{
																						"id": 1711,
																						"name": "amountOut",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1688,
																						"src": "4592:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"hexValue": "30",
																								"id": 1714,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4611:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 1713,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4603:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1712,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "4603:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1715,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4603:10:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1716,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4591:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"id": 1717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "4479:135:8",
																			"trueExpression": {
																				"components": [
																					{
																						"arguments": [
																							{
																								"hexValue": "30",
																								"id": 1707,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4554:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 1706,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4546:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1705,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "4546:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1708,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4546:10:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1709,
																						"name": "amountOut",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1688,
																						"src": "4558:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1710,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4545:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																					"typeString": "tuple(uint256,uint256)"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4436:178:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1723,
																					"name": "amount0Out",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1696,
																					"src": "4693:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1724,
																					"name": "amount1Out",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1698,
																					"src": "4725:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1727,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "4765:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_stabilizer_$1798",
																								"typeString": "contract stabilizer"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_stabilizer_$1798",
																								"typeString": "contract stabilizer"
																							}
																						],
																						"id": 1726,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4757:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1725,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "4757:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4757:13:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1731,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4802:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1730,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "NewExpression",
																						"src": "4792:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function (uint256) pure returns (bytes memory)"
																						},
																						"typeName": {
																							"id": 1729,
																							"name": "bytes",
																							"nodeType": "ElementaryTypeName",
																							"src": "4796:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_storage_ptr",
																								"typeString": "bytes"
																							}
																						}
																					},
																					"id": 1732,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4792:12:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1720,
																							"name": "usdc_usc_lpAddress",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1355,
																							"src": "4647:18:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1719,
																						"name": "IUniswapV2Pair",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1315,
																						"src": "4632:14:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1315_$",
																							"typeString": "type(contract IUniswapV2Pair)"
																						}
																					},
																					"id": 1721,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4632:34:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IUniswapV2Pair_$1315",
																						"typeString": "contract IUniswapV2Pair"
																					}
																				},
																				"id": 1722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "swap",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1299,
																				"src": "4632:39:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (uint256,uint256,address,bytes memory) external"
																				}
																			},
																			"id": 1733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4632:190:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1734,
																		"nodeType": "ExpressionStatement",
																		"src": "4632:190:8"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4863:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1478,
												"id": 1740,
												"nodeType": "Return",
												"src": "4856:11:8"
											}
										]
									},
									"functionSelector": "796c7be7",
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1475,
											"modifierName": {
												"id": 1474,
												"name": "onlyExecutor",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1472,
												"src": "2164:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2164:12:8"
										}
									],
									"name": "goStabilizer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2152:2:8"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "2186:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2186:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:6:8"
									},
									"scope": 1798,
									"src": "2131:2743:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "4999:96:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5050:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5050:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1759,
															"name": "_amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "5062:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1754,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "5027:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1753,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "5009:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$248_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5009:27:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$248",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "5009:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$248_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$248_$",
															"typeString": "function (contract IERC20Upgradeable,address,uint256)"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5009:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "5009:58:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5084:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1752,
												"id": 1763,
												"nodeType": "Return",
												"src": "5077:11:8"
											}
										]
									},
									"functionSelector": "930ed033",
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1749,
											"modifierName": {
												"id": 1748,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "4962:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4962:9:8"
										}
									],
									"name": "withdrawalERC20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4905:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4905:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "_amt",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4923:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4904:32:8"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4989:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4989:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4988:6:8"
									},
									"scope": 1798,
									"src": "4880:215:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "5167:53:8",
										"statements": [
											{
												"expression": {
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1774,
														"name": "openBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "5177:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1775,
														"name": "_type",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "5187:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5177:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "5177:15:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5209:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1773,
												"id": 1779,
												"nodeType": "Return",
												"src": "5202:11:8"
											}
										]
									},
									"functionSelector": "29e9a524",
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1770,
											"modifierName": {
												"id": 1769,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5142:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5142:9:8"
										}
									],
									"name": "setOpenBuy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "_type",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "5121:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5121:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5120:12:8"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "5161:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5161:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:6:8"
									},
									"scope": 1798,
									"src": "5101:119:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "5293:54:8",
										"statements": [
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1790,
														"name": "openSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "5303:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1791,
														"name": "_type",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "5314:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5303:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "5303:16:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5336:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1789,
												"id": 1795,
												"nodeType": "Return",
												"src": "5329:11:8"
											}
										]
									},
									"functionSelector": "3c03b9a4",
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1786,
											"modifierName": {
												"id": 1785,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 63,
												"src": "5268:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5268:9:8"
										}
									],
									"name": "setOpenSell",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "_type",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5247:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1782,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:12:8"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "5287:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5287:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5286:6:8"
									},
									"scope": 1798,
									"src": "5226:121:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1799,
							"src": "677:4672:8"
						}
					],
					"src": "32:5318:8"
				},
				"id": 8
			}
		}
	}
}
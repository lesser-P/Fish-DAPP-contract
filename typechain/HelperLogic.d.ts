/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface HelperLogicInterface extends ethers.utils.Interface {
  functions: {
    "Factory()": FunctionFragment;
    "PRECISION()": FunctionFragment;
    "Router()": FunctionFragment;
    "autoAdjustFarm()": FunctionFragment;
    "basePoint()": FunctionFragment;
    "dev()": FunctionFragment;
    "executor(address)": FunctionFragment;
    "farm()": FunctionFragment;
    "initialize(address,address,address,address,address,address,address)": FunctionFragment;
    "jointExecution()": FunctionFragment;
    "op()": FunctionFragment;
    "openStabilizer()": FunctionFragment;
    "owner()": FunctionFragment;
    "pid()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "sea()": FunctionFragment;
    "setAutoAdjustFarm(bool)": FunctionFragment;
    "setDev(address)": FunctionFragment;
    "setExecutor(address,bool)": FunctionFragment;
    "setFarm(address)": FunctionFragment;
    "setOp(address)": FunctionFragment;
    "setOpenStabilizer(bool)": FunctionFragment;
    "setPid(uint256)": FunctionFragment;
    "setStabilizer(address)": FunctionFragment;
    "setToDevPercent(uint256)": FunctionFragment;
    "setToOpPercent(uint256)": FunctionFragment;
    "setToSseaPercent(uint256)": FunctionFragment;
    "setUSDCAddress(address)": FunctionFragment;
    "ssea()": FunctionFragment;
    "stabilizer()": FunctionFragment;
    "toDevPercent()": FunctionFragment;
    "toOpPercent()": FunctionFragment;
    "toSseaPercent()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "usc()": FunctionFragment;
    "usdc()": FunctionFragment;
    "withdrawalERC20(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "Factory", values?: undefined): string;
  encodeFunctionData(functionFragment: "PRECISION", values?: undefined): string;
  encodeFunctionData(functionFragment: "Router", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "autoAdjustFarm",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "basePoint", values?: undefined): string;
  encodeFunctionData(functionFragment: "dev", values?: undefined): string;
  encodeFunctionData(functionFragment: "executor", values: [string]): string;
  encodeFunctionData(functionFragment: "farm", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string, string, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "jointExecution",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "op", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "openStabilizer",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "pid", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "sea", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setAutoAdjustFarm",
    values: [boolean]
  ): string;
  encodeFunctionData(functionFragment: "setDev", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setExecutor",
    values: [string, boolean]
  ): string;
  encodeFunctionData(functionFragment: "setFarm", values: [string]): string;
  encodeFunctionData(functionFragment: "setOp", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setOpenStabilizer",
    values: [boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setPid",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setStabilizer",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setToDevPercent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setToOpPercent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setToSseaPercent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setUSDCAddress",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "ssea", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "stabilizer",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "toDevPercent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "toOpPercent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "toSseaPercent",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "usc", values?: undefined): string;
  encodeFunctionData(functionFragment: "usdc", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "withdrawalERC20",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "Factory", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "PRECISION", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Router", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "autoAdjustFarm",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "basePoint", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "dev", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "executor", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "farm", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "jointExecution",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "op", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "openStabilizer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pid", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "sea", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setAutoAdjustFarm",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setDev", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setExecutor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setFarm", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setOp", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setOpenStabilizer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setPid", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setStabilizer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setToDevPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setToOpPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setToSseaPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setUSDCAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ssea", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "stabilizer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "toDevPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toOpPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toSseaPercent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "usc", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "usdc", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawalERC20",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export type OwnershipTransferredEvent = TypedEvent<
  [string, string] & { previousOwner: string; newOwner: string }
>;

export class HelperLogic extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: HelperLogicInterface;

  functions: {
    Factory(overrides?: CallOverrides): Promise<[string]>;

    PRECISION(overrides?: CallOverrides): Promise<[BigNumber]>;

    Router(overrides?: CallOverrides): Promise<[string]>;

    autoAdjustFarm(overrides?: CallOverrides): Promise<[boolean]>;

    basePoint(overrides?: CallOverrides): Promise<[BigNumber]>;

    dev(overrides?: CallOverrides): Promise<[string]>;

    executor(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    farm(overrides?: CallOverrides): Promise<[string]>;

    initialize(
      _Factory: string,
      _Router: string,
      _usc: string,
      _usdc: string,
      _sea: string,
      _ssea: string,
      _farm: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    jointExecution(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    op(overrides?: CallOverrides): Promise<[string]>;

    openStabilizer(overrides?: CallOverrides): Promise<[boolean]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    pid(overrides?: CallOverrides): Promise<[BigNumber]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    sea(overrides?: CallOverrides): Promise<[string]>;

    setAutoAdjustFarm(
      _bool: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setDev(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setExecutor(
      _address: string,
      _type: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFarm(
      _farm: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setOp(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setOpenStabilizer(
      _bool: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPid(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setStabilizer(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setToDevPercent(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setToOpPercent(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setToSseaPercent(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setUSDCAddress(
      _usdc: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    ssea(overrides?: CallOverrides): Promise<[string]>;

    stabilizer(overrides?: CallOverrides): Promise<[string]>;

    toDevPercent(overrides?: CallOverrides): Promise<[BigNumber]>;

    toOpPercent(overrides?: CallOverrides): Promise<[BigNumber]>;

    toSseaPercent(overrides?: CallOverrides): Promise<[BigNumber]>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    usc(overrides?: CallOverrides): Promise<[string]>;

    usdc(overrides?: CallOverrides): Promise<[string]>;

    withdrawalERC20(
      _address: string,
      _amt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  Factory(overrides?: CallOverrides): Promise<string>;

  PRECISION(overrides?: CallOverrides): Promise<BigNumber>;

  Router(overrides?: CallOverrides): Promise<string>;

  autoAdjustFarm(overrides?: CallOverrides): Promise<boolean>;

  basePoint(overrides?: CallOverrides): Promise<BigNumber>;

  dev(overrides?: CallOverrides): Promise<string>;

  executor(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  farm(overrides?: CallOverrides): Promise<string>;

  initialize(
    _Factory: string,
    _Router: string,
    _usc: string,
    _usdc: string,
    _sea: string,
    _ssea: string,
    _farm: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  jointExecution(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  op(overrides?: CallOverrides): Promise<string>;

  openStabilizer(overrides?: CallOverrides): Promise<boolean>;

  owner(overrides?: CallOverrides): Promise<string>;

  pid(overrides?: CallOverrides): Promise<BigNumber>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  sea(overrides?: CallOverrides): Promise<string>;

  setAutoAdjustFarm(
    _bool: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setDev(
    _address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setExecutor(
    _address: string,
    _type: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFarm(
    _farm: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setOp(
    _address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setOpenStabilizer(
    _bool: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPid(
    _val: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setStabilizer(
    _address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setToDevPercent(
    _val: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setToOpPercent(
    _val: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setToSseaPercent(
    _val: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setUSDCAddress(
    _usdc: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  ssea(overrides?: CallOverrides): Promise<string>;

  stabilizer(overrides?: CallOverrides): Promise<string>;

  toDevPercent(overrides?: CallOverrides): Promise<BigNumber>;

  toOpPercent(overrides?: CallOverrides): Promise<BigNumber>;

  toSseaPercent(overrides?: CallOverrides): Promise<BigNumber>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  usc(overrides?: CallOverrides): Promise<string>;

  usdc(overrides?: CallOverrides): Promise<string>;

  withdrawalERC20(
    _address: string,
    _amt: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    Factory(overrides?: CallOverrides): Promise<string>;

    PRECISION(overrides?: CallOverrides): Promise<BigNumber>;

    Router(overrides?: CallOverrides): Promise<string>;

    autoAdjustFarm(overrides?: CallOverrides): Promise<boolean>;

    basePoint(overrides?: CallOverrides): Promise<BigNumber>;

    dev(overrides?: CallOverrides): Promise<string>;

    executor(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    farm(overrides?: CallOverrides): Promise<string>;

    initialize(
      _Factory: string,
      _Router: string,
      _usc: string,
      _usdc: string,
      _sea: string,
      _ssea: string,
      _farm: string,
      overrides?: CallOverrides
    ): Promise<void>;

    jointExecution(overrides?: CallOverrides): Promise<boolean>;

    op(overrides?: CallOverrides): Promise<string>;

    openStabilizer(overrides?: CallOverrides): Promise<boolean>;

    owner(overrides?: CallOverrides): Promise<string>;

    pid(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    sea(overrides?: CallOverrides): Promise<string>;

    setAutoAdjustFarm(
      _bool: boolean,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setDev(_address: string, overrides?: CallOverrides): Promise<boolean>;

    setExecutor(
      _address: string,
      _type: boolean,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setFarm(_farm: string, overrides?: CallOverrides): Promise<boolean>;

    setOp(_address: string, overrides?: CallOverrides): Promise<boolean>;

    setOpenStabilizer(
      _bool: boolean,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setPid(_val: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    setStabilizer(
      _address: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setToDevPercent(
      _val: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setToOpPercent(
      _val: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setToSseaPercent(
      _val: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setUSDCAddress(_usdc: string, overrides?: CallOverrides): Promise<boolean>;

    ssea(overrides?: CallOverrides): Promise<string>;

    stabilizer(overrides?: CallOverrides): Promise<string>;

    toDevPercent(overrides?: CallOverrides): Promise<BigNumber>;

    toOpPercent(overrides?: CallOverrides): Promise<BigNumber>;

    toSseaPercent(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    usc(overrides?: CallOverrides): Promise<string>;

    usdc(overrides?: CallOverrides): Promise<string>;

    withdrawalERC20(
      _address: string,
      _amt: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {
    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;

    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;
  };

  estimateGas: {
    Factory(overrides?: CallOverrides): Promise<BigNumber>;

    PRECISION(overrides?: CallOverrides): Promise<BigNumber>;

    Router(overrides?: CallOverrides): Promise<BigNumber>;

    autoAdjustFarm(overrides?: CallOverrides): Promise<BigNumber>;

    basePoint(overrides?: CallOverrides): Promise<BigNumber>;

    dev(overrides?: CallOverrides): Promise<BigNumber>;

    executor(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    farm(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      _Factory: string,
      _Router: string,
      _usc: string,
      _usdc: string,
      _sea: string,
      _ssea: string,
      _farm: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    jointExecution(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    op(overrides?: CallOverrides): Promise<BigNumber>;

    openStabilizer(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    pid(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    sea(overrides?: CallOverrides): Promise<BigNumber>;

    setAutoAdjustFarm(
      _bool: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setDev(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setExecutor(
      _address: string,
      _type: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFarm(
      _farm: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setOp(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setOpenStabilizer(
      _bool: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPid(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setStabilizer(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setToDevPercent(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setToOpPercent(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setToSseaPercent(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setUSDCAddress(
      _usdc: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    ssea(overrides?: CallOverrides): Promise<BigNumber>;

    stabilizer(overrides?: CallOverrides): Promise<BigNumber>;

    toDevPercent(overrides?: CallOverrides): Promise<BigNumber>;

    toOpPercent(overrides?: CallOverrides): Promise<BigNumber>;

    toSseaPercent(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    usc(overrides?: CallOverrides): Promise<BigNumber>;

    usdc(overrides?: CallOverrides): Promise<BigNumber>;

    withdrawalERC20(
      _address: string,
      _amt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    Factory(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PRECISION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    Router(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    autoAdjustFarm(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    basePoint(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    dev(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    executor(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    farm(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(
      _Factory: string,
      _Router: string,
      _usc: string,
      _usdc: string,
      _sea: string,
      _ssea: string,
      _farm: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    jointExecution(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    op(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    openStabilizer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pid(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    sea(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setAutoAdjustFarm(
      _bool: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setDev(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setExecutor(
      _address: string,
      _type: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFarm(
      _farm: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setOp(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setOpenStabilizer(
      _bool: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPid(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setStabilizer(
      _address: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setToDevPercent(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setToOpPercent(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setToSseaPercent(
      _val: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setUSDCAddress(
      _usdc: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    ssea(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    stabilizer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    toDevPercent(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    toOpPercent(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    toSseaPercent(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    usc(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    usdc(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    withdrawalERC20(
      _address: string,
      _amt: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}

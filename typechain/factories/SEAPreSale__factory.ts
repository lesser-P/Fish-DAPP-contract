/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SEAPreSale, SEAPreSaleInterface } from "../SEAPreSale";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "DAOAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_DAOAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_alphaSEA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_remainingPurchasesMaxAmt",
        type: "uint256",
      },
    ],
    name: "SET",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "alphaSEA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "boughtSEA",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentAmount_",
        type: "uint256",
      },
    ],
    name: "calculateSaleQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_DAOAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_alphaSEA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toTalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_remainingPurchasesMaxAmt",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "purchaseaSEA",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingPurchasesMaxAmt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "salePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sellAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setStart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toTalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_buyers",
        type: "address[]",
      },
    ],
    name: "whiteListBuyers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whiteListed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611385806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80639e623ae4116100c3578063e58bf43a1161007c578063e58bf43a14610243578063e6fd48bc1461024b578063ef8cdaa414610253578063f2fde38b14610266578063f51f96dd14610279578063fa0fca84146102815761014d565b80639e623ae4146101f2578063a85adeab146101fa578063b229299414610202578063d392eab114610215578063d45fc1a91461021d578063e3bef142146102305761014d565b8063492cc4e311610115578063492cc4e3146101c05780635c474f9e146101c85780635f48f393146101d0578063715018a6146101d85780638da5cb5b146101e25780639b2cb5d8146101ea5761014d565b80631eef7659146101525780632092c12b1461017b57806335975a371461019b5780633e413bee146101a35780633f407b84146101b8575b600080fd5b610165610160366004610da6565b610294565b6040516101729190610f0c565b60405180910390f35b61018e610189366004610e87565b61035f565b604051610172919061127c565b610165610370565b6101ab6103ca565b6040516101729190610ebb565b61018e6103d9565b6101ab6103df565b6101656103ee565b61018e6103f7565b6101e06103fd565b005b6101ab610448565b61018e610457565b61018e61045d565b61018e610463565b610165610210366004610e87565b610469565b6101ab61065d565b6101e061022b366004610d23565b61066c565b61016561023e366004610d23565b610760565b61018e610814565b61018e61081a565b610165610261366004610d09565b610820565b6101e0610274366004610d09565b610835565b61018e6108a6565b61016561028f366004610d09565b6108ac565b600061029e6108c1565b6001600160a01b03166102af610448565b6001600160a01b0316146102de5760405162461bcd60e51b81526004016102d59061110c565b60405180910390fd5b60005b82518110156103545760016072600085848151811061031057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061034c81611308565b9150506102e1565b50600190505b919050565b600061036a826108c5565b92915050565b600061037a6108c1565b6001600160a01b031661038b610448565b6001600160a01b0316146103b15760405162461bcd60e51b81526004016102d59061110c565b506070805460ff19811660ff9182161517918290551690565b6067546001600160a01b031681565b606e5481565b6065546001600160a01b031681565b60705460ff1681565b60695481565b6104056108c1565b6001600160a01b0316610416610448565b6001600160a01b03161461043c5760405162461bcd60e51b81526004016102d59061110c565b61044660006108e7565b565b6033546001600160a01b031690565b60685481565b606d5481565b606c5481565b600060685482101561048d5760405162461bcd60e51b81526004016102d59061116d565b6069548211156104af5760405162461bcd60e51b81526004016102d5906111db565b606e546104bc9083610939565b606e819055606d5410156104e25760405162461bcd60e51b81526004016102d590611075565b60705460ff1615156001146105095760405162461bcd60e51b81526004016102d590610f4a565b3360009081526071602052604090205460ff16156105395760405162461bcd60e51b81526004016102d590610ffb565b42606b541061055a5760405162461bcd60e51b81526004016102d590611209565b336000908152607160205260409020805460ff19166001179055606c544211156105a557606f548211156105a05760405162461bcd60e51b81526004016102d590611141565b6105fa565b3360009081526072602052604090205460ff1615156001146105d95760405162461bcd60e51b81526004016102d59061104c565b606c5442106105fa5760405162461bcd60e51b81526004016102d590611029565b606754610612906001600160a01b031633308561094c565b60665460675461062f916001600160a01b039182169116846109aa565b600061063a836108c5565b606554909150610654906001600160a01b031633836109aa565b50600192915050565b6066546001600160a01b031681565b600054610100900460ff1680610685575060005460ff16155b6106a15760405162461bcd60e51b81526004016102d5906110be565b600054610100900460ff161580156106cc576000805460ff1961ff0019909116610100171660011790555b6106d46109ce565b606580546001600160a01b03808d166001600160a01b031992831617909255606780548c8416908316179055606a879055606b869055606c85905560668054928e169290911691909117905560688890556069879055606d869055606f8290556070805460ff191660011790558015610753576000805461ff00191690555b5050505050505050505050565b600061076a6108c1565b6001600160a01b031661077b610448565b6001600160a01b0316146107a15760405162461bcd60e51b81526004016102d59061110c565b50606580546001600160a01b03199081166001600160a01b039b8c1617909155606780548216998b1699909917909855606a93909355606b91909155606c55606680549095169690951695909517909255606855606955606d91909155606f556070805460ff1916600190811790915590565b606f5481565b606b5481565b60716020526000908152604090205460ff1681565b61083d6108c1565b6001600160a01b031661084e610448565b6001600160a01b0316146108745760405162461bcd60e51b81526004016102d59061110c565b6001600160a01b03811661089a5760405162461bcd60e51b81526004016102d590610f6f565b6108a3816108e7565b50565b606a5481565b60726020526000908152604090205460ff1681565b3390565b606a5460009061036a906108e1670de0b6b3a764000085610a52565b90610a5e565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006109458284611285565b9392505050565b6109a4846323b872dd60e01b85858560405160240161096d93929190610ecf565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a6a565b50505050565b6109c98363a9059cbb60e01b848460405160240161096d929190610ef3565b505050565b600054610100900460ff16806109e7575060005460ff16155b610a035760405162461bcd60e51b81526004016102d5906110be565b600054610100900460ff16158015610a2e576000805460ff1961ff0019909116610100171660011790555b610a36610af9565b610a3e610b6c565b80156108a3576000805461ff001916905550565b600061094582846112bd565b6000610945828461129d565b6000610abf826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610bdc9092919063ffffffff16565b8051909150156109c95780806020019051810190610add9190610e67565b6109c95760405162461bcd60e51b81526004016102d590611232565b600054610100900460ff1680610b12575060005460ff16155b610b2e5760405162461bcd60e51b81526004016102d5906110be565b600054610100900460ff16158015610a3e576000805460ff1961ff00199091166101001716600117905580156108a3576000805461ff001916905550565b600054610100900460ff1680610b85575060005460ff16155b610ba15760405162461bcd60e51b81526004016102d5906110be565b600054610100900460ff16158015610bcc576000805460ff1961ff0019909116610100171660011790555b610a3e610bd76108c1565b6108e7565b6060610beb8484600085610bf3565b949350505050565b606082471015610c155760405162461bcd60e51b81526004016102d590610fb5565b610c1e85610cb3565b610c3a5760405162461bcd60e51b81526004016102d5906111a4565b600080866001600160a01b03168587604051610c569190610e9f565b60006040518083038185875af1925050503d8060008114610c93576040519150601f19603f3d011682016040523d82523d6000602084013e610c98565b606091505b5091509150610ca8828286610cb9565b979650505050505050565b3b151590565b60608315610cc8575081610945565b825115610cd85782518084602001fd5b8160405162461bcd60e51b81526004016102d59190610f17565b80356001600160a01b038116811461035a57600080fd5b600060208284031215610d1a578081fd5b61094582610cf2565b6000806000806000806000806000806101408b8d031215610d42578586fd5b610d4b8b610cf2565b9950610d5960208c01610cf2565b9850610d6760408c01610cf2565b999c989b5098996060810135995060808101359860a0820135985060c0820135975060e082013596506101008201359550610120909101359350915050565b60006020808385031215610db8578182fd5b823567ffffffffffffffff80821115610dcf578384fd5b818501915085601f830112610de2578384fd5b813581811115610df457610df4611339565b83810260405185828201018181108582111715610e1357610e13611339565b604052828152858101935084860182860187018a1015610e31578788fd5b8795505b83861015610e5a57610e4681610cf2565b855260019590950194938601938601610e35565b5098975050505050505050565b600060208284031215610e78578081fd5b81518015158114610945578182fd5b600060208284031215610e98578081fd5b5035919050565b60008251610eb18184602087016112dc565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602082528251806020840152610f368160408501602087016112dc565b601f01601f19169190910160400192915050565b6020808252600b908201526a139bdd081cdd185c9d195960aa1b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b602080825260149082015273105b1c9958591e481c185c9d1a58da5c185d195960621b604082015260600190565b60208082526009908201526829b0b6329037bb32b960b91b604082015260600190565b6020808252600f908201526e139bdd081dda1a5d195b1a5cdd1959608a1b604082015260600190565b60208082526029908201527f54686520616d6f756e7420656e746572656420657863656564732046756e6472604082015268185a5cd94811dbd85b60ba1b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260129082015271115e18d95959195908125113c81b1a5b5a5d60721b604082015260600190565b60208082526018908201527f42656c6f77206d696e696d756d20616c6c6f636174696f6e0000000000000000604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526014908201527326b7b932903a3430b71030b63637b1b0ba34b7b760611b604082015260600190565b6020808252600f908201526e139bdd081cdd185c9d1959081e595d608a1b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b6000821982111561129857611298611323565b500190565b6000826112b857634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156112d7576112d7611323565b500290565b60005b838110156112f75781810151838201526020016112df565b838111156109a45750506000910152565b600060001982141561131c5761131c611323565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212208aac576291c19d226fc0f6f72fbeaa532b77b084725269694585071a4408e9c764736f6c63430008000033";

export class SEAPreSale__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SEAPreSale> {
    return super.deploy(overrides || {}) as Promise<SEAPreSale>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SEAPreSale {
    return super.attach(address) as SEAPreSale;
  }
  connect(signer: Signer): SEAPreSale__factory {
    return super.connect(signer) as SEAPreSale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SEAPreSaleInterface {
    return new utils.Interface(_abi) as SEAPreSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SEAPreSale {
    return new Contract(address, _abi, signerOrProvider) as SEAPreSale;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ASEAMigration, ASEAMigrationInterface } from "../ASEAMigration";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "SEA",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aSEA",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_SEA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_aSEA",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTimestamp",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isInitialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAmt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_bool",
        type: "bool",
      },
    ],
    name: "open",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "senderInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "setEndTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "setMaxAmt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "setStartTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610dd1806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a6dd4c66116100a2578063e6fd48bc11610071578063e6fd48bc146101d9578063eb990c59146101e1578063f019e2b2146101f4578063f2fde38b146101fc578063ff257dad1461020f5761010b565b8063a6dd4c661461018b578063a85717d3146101ab578063a85adeab146101be578063c44bef75146101c65761010b565b8063715018a6116100de578063715018a6146101605780637df6a6c8146101685780638da5cb5b1461017b5780638fd3ab80146101835761010b565b8063392e53cd146101105780633ccfd60b1461012e5780635294385b146101385780635d2b6a0c1461014b575b600080fd5b610118610217565b6040516101259190610b95565b60405180910390f35b610136610227565b005b610136610146366004610b14565b61039a565b6101536103de565b6040516101259190610b44565b6101366103ed565b610136610176366004610b14565b610438565b61015361047c565b61013661048b565b61019e610199366004610a81565b610680565b6040516101259190610d60565b6101366101b9366004610adc565b610692565b61019e6106ef565b6101366101d4366004610b14565b6106f5565b61019e610739565b6101366101ef366004610a9b565b61073f565b61019e61080f565b61013661020a366004610a81565b610815565b610153610886565b606954600160a01b900460ff1681565b61022f610895565b6001600160a01b031661024061047c565b6001600160a01b03161461026f5760405162461bcd60e51b815260040161026690610c94565b60405180910390fd5b60655442116102905760405162461bcd60e51b815260040161026690610ba0565b6068546040516370a0823160e01b81526000916001600160a01b0316906370a08231906102c1903090600401610b44565b60206040518083038186803b1580156102d957600080fd5b505afa1580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103119190610b2c565b60685460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb906103449033908590600401610b7c565b602060405180830381600087803b15801561035e57600080fd5b505af1158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190610af8565b5050565b6103a2610895565b6001600160a01b03166103b361047c565b6001600160a01b0316146103d95760405162461bcd60e51b815260040161026690610c94565b606755565b6069546001600160a01b031681565b6103f5610895565b6001600160a01b031661040661047c565b6001600160a01b03161461042c5760405162461bcd60e51b815260040161026690610c94565b6104366000610899565b565b610440610895565b6001600160a01b031661045161047c565b6001600160a01b0316146104775760405162461bcd60e51b815260040161026690610c94565b606555565b6033546001600160a01b031690565b606954600160a01b900460ff166104b45760405162461bcd60e51b815260040161026690610bd7565b6069546040516370a0823160e01b81526000916001600160a01b0316906370a08231906104e5903390600401610b44565b60206040518083038186803b1580156104fd57600080fd5b505afa158015610511573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105359190610b2c565b90506067548111156105595760405162461bcd60e51b815260040161026690610cc9565b426066541061057a5760405162461bcd60e51b815260040161026690610d37565b606554421061059b5760405162461bcd60e51b815260040161026690610d00565b6069546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906105cf90339030908690600401610b58565b602060405180830381600087803b1580156105e957600080fd5b505af11580156105fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106219190610af8565b50336000908152606a602052604090205461063c90826108eb565b336000818152606a60205260409081902092909255606854915163a9059cbb60e01b81526001600160a01b039092169163a9059cbb91610344918590600401610b7c565b606a6020526000908152604090205481565b61069a610895565b6001600160a01b03166106ab61047c565b6001600160a01b0316146106d15760405162461bcd60e51b815260040161026690610c94565b60698054911515600160a01b0260ff60a01b19909216919091179055565b60655481565b6106fd610895565b6001600160a01b031661070e61047c565b6001600160a01b0316146107345760405162461bcd60e51b815260040161026690610c94565b606655565b60665481565b600054610100900460ff1680610758575060005460ff16155b6107745760405162461bcd60e51b815260040161026690610c46565b600054610100900460ff1615801561079f576000805460ff1961ff0019909116610100171660011790555b6107a76108fe565b606880546001600160a01b038088166001600160a01b031992831617909255606980546066879055606586905560ff60a01b1993881692169190911791909116905568878678326eac9000006067558015610808576000805461ff00191690555b5050505050565b60675481565b61081d610895565b6001600160a01b031661082e61047c565b6001600160a01b0316146108545760405162461bcd60e51b815260040161026690610c94565b6001600160a01b03811661087a5760405162461bcd60e51b815260040161026690610c00565b61088381610899565b50565b6068546001600160a01b031681565b3390565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006108f78284610d69565b9392505050565b600054610100900460ff1680610917575060005460ff16155b6109335760405162461bcd60e51b815260040161026690610c46565b600054610100900460ff1615801561095e576000805460ff1961ff0019909116610100171660011790555b610966610982565b61096e6109f5565b8015610883576000805461ff001916905550565b600054610100900460ff168061099b575060005460ff16155b6109b75760405162461bcd60e51b815260040161026690610c46565b600054610100900460ff1615801561096e576000805460ff1961ff0019909116610100171660011790558015610883576000805461ff001916905550565b600054610100900460ff1680610a0e575060005460ff16155b610a2a5760405162461bcd60e51b815260040161026690610c46565b600054610100900460ff16158015610a55576000805460ff1961ff0019909116610100171660011790555b61096e610a60610895565b610899565b80356001600160a01b0381168114610a7c57600080fd5b919050565b600060208284031215610a92578081fd5b6108f782610a65565b60008060008060808587031215610ab0578283fd5b610ab985610a65565b9350610ac760208601610a65565b93969395505050506040820135916060013590565b600060208284031215610aed578081fd5b81356108f781610d8d565b600060208284031215610b09578081fd5b81516108f781610d8d565b600060208284031215610b25578081fd5b5035919050565b600060208284031215610b3d578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6020808252601e908201527f7377617070696e67206f66206153454120686173206e6f7420656e6465640000604082015260600190565b6020808252600f908201526e1b9bdd081a5b9a5d1a585b1a5e9959608a1b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f457863656564207468652073706563696669656420616d6f756e740000000000604082015260600190565b6020808252601a908201527f7377617070696e67206f6620615345412068617320656e646564000000000000604082015260600190565b6020808252600f908201526e139bdd081cdd185c9d1959081e595d608a1b604082015260600190565b90815260200190565b60008219821115610d8857634e487b7160e01b81526011600452602481fd5b500190565b801515811461088357600080fdfea2646970667358221220641481f054d4d1a5b8c3a75c0010eea2d998e216c3eab67d2581ad0aa6e39ead64736f6c63430008000033";

export class ASEAMigration__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ASEAMigration> {
    return super.deploy(overrides || {}) as Promise<ASEAMigration>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ASEAMigration {
    return super.attach(address) as ASEAMigration;
  }
  connect(signer: Signer): ASEAMigration__factory {
    return super.connect(signer) as ASEAMigration__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ASEAMigrationInterface {
    return new utils.Interface(_abi) as ASEAMigrationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ASEAMigration {
    return new Contract(address, _abi, signerOrProvider) as ASEAMigration;
  }
}
